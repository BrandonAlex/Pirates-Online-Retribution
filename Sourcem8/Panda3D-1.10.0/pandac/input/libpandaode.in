1436948569
2 3
11 libpandaode 4 sTqO 11 panda3d.ode 
584
669 8 OdeWorld 0 4 1260 18 OdeWorld::OdeWorld 0 2 1 2 0
67
OdeWorld::OdeWorld(void);
OdeWorld::OdeWorld(OdeWorld const &copy);

670 7 destroy 0 4 1260 17 OdeWorld::destroy 0 1 3 0
29
void OdeWorld::destroy(void);

671 8 is_empty 0 4 1260 18 OdeWorld::is_empty 0 1 4 455
////////////////////////////////////////////////////////////////////
//     Function: OdeWorld::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeWorld
//               does not point to a valid world. It is an error to
//               call a method on an empty world.
//               Note that an empty OdeWorld also evaluates to False.
////////////////////////////////////////////////////////////////////
43
inline bool OdeWorld::is_empty(void) const;

672 6 get_id 0 4 1260 16 OdeWorld::get_id 0 1 5 248
////////////////////////////////////////////////////////////////////
//     Function: OdeWorld::get_id
//       Access: Published
//  Description: Returns the underlying dWorldID.
////////////////////////////////////////////////////////////////////
45
inline dWorldID OdeWorld::get_id(void) const;

673 11 set_gravity 0 4 1260 21 OdeWorld::set_gravity 0 2 6 7 0
119
inline void OdeWorld::set_gravity(dReal x, dReal y, dReal z);
inline void OdeWorld::set_gravity(LVecBase3f const &vec);

674 7 set_erp 0 4 1260 17 OdeWorld::set_erp 0 1 8 0
41
inline void OdeWorld::set_erp(dReal erp);

675 7 set_cfm 0 4 1260 17 OdeWorld::set_cfm 0 1 9 0
41
inline void OdeWorld::set_cfm(dReal cfm);

676 29 set_quick_step_num_iterations 0 4 1260 39 OdeWorld::set_quick_step_num_iterations 0 1 10 0
61
inline void OdeWorld::set_quick_step_num_iterations(int num);

677 16 set_quick_step_w 0 4 1260 26 OdeWorld::set_quick_step_w 0 1 11 0
62
inline void OdeWorld::set_quick_step_w(dReal over_relaxation);

678 30 set_contact_max_correcting_vel 0 4 1260 40 OdeWorld::set_contact_max_correcting_vel 0 1 12 0
64
inline void OdeWorld::set_contact_max_correcting_vel(dReal vel);

679 25 set_contact_surface_layer 0 4 1260 35 OdeWorld::set_contact_surface_layer 0 1 13 0
61
inline void OdeWorld::set_contact_surface_layer(dReal depth);

680 33 set_auto_disable_linear_threshold 0 4 1260 43 OdeWorld::set_auto_disable_linear_threshold 0 1 14 0
80
inline void OdeWorld::set_auto_disable_linear_threshold(dReal linear_threshold);

681 34 set_auto_disable_angular_threshold 0 4 1260 44 OdeWorld::set_auto_disable_angular_threshold 0 1 15 0
82
inline void OdeWorld::set_auto_disable_angular_threshold(dReal angular_threshold);

682 22 set_auto_disable_steps 0 4 1260 32 OdeWorld::set_auto_disable_steps 0 1 16 0
56
inline void OdeWorld::set_auto_disable_steps(int steps);

683 21 set_auto_disable_time 0 4 1260 31 OdeWorld::set_auto_disable_time 0 1 17 0
56
inline void OdeWorld::set_auto_disable_time(dReal time);

684 21 set_auto_disable_flag 0 4 1260 31 OdeWorld::set_auto_disable_flag 0 1 18 0
65
inline void OdeWorld::set_auto_disable_flag(int do_auto_disable);

685 11 get_gravity 0 4 1260 21 OdeWorld::get_gravity 0 1 19 0
52
inline LVecBase3f OdeWorld::get_gravity(void) const;

686 7 get_erp 0 4 1260 17 OdeWorld::get_erp 0 1 20 0
43
inline dReal OdeWorld::get_erp(void) const;

687 7 get_cfm 0 4 1260 17 OdeWorld::get_cfm 0 1 21 0
43
inline dReal OdeWorld::get_cfm(void) const;

688 29 get_quick_step_num_iterations 0 4 1260 39 OdeWorld::get_quick_step_num_iterations 0 1 22 0
63
inline int OdeWorld::get_quick_step_num_iterations(void) const;

689 16 get_quick_step_w 0 4 1260 26 OdeWorld::get_quick_step_w 0 1 23 0
52
inline dReal OdeWorld::get_quick_step_w(void) const;

690 30 get_contact_max_correcting_vel 0 4 1260 40 OdeWorld::get_contact_max_correcting_vel 0 1 24 0
66
inline dReal OdeWorld::get_contact_max_correcting_vel(void) const;

691 25 get_contact_surface_layer 0 4 1260 35 OdeWorld::get_contact_surface_layer 0 1 25 0
61
inline dReal OdeWorld::get_contact_surface_layer(void) const;

692 33 get_auto_disable_linear_threshold 0 4 1260 43 OdeWorld::get_auto_disable_linear_threshold 0 1 26 0
69
inline dReal OdeWorld::get_auto_disable_linear_threshold(void) const;

693 34 get_auto_disable_angular_threshold 0 4 1260 44 OdeWorld::get_auto_disable_angular_threshold 0 1 27 0
70
inline dReal OdeWorld::get_auto_disable_angular_threshold(void) const;

694 22 get_auto_disable_steps 0 4 1260 32 OdeWorld::get_auto_disable_steps 0 1 28 0
56
inline int OdeWorld::get_auto_disable_steps(void) const;

695 21 get_auto_disable_time 0 4 1260 31 OdeWorld::get_auto_disable_time 0 1 29 0
57
inline dReal OdeWorld::get_auto_disable_time(void) const;

696 21 get_auto_disable_flag 0 4 1260 31 OdeWorld::get_auto_disable_flag 0 1 30 0
55
inline int OdeWorld::get_auto_disable_flag(void) const;

697 16 impulse_to_force 0 4 1260 26 OdeWorld::impulse_to_force 0 2 31 32 0
180
inline LVecBase3f OdeWorld::impulse_to_force(dReal stepsize, dReal ix, dReal iy, dReal iz);
inline LVecBase3f OdeWorld::impulse_to_force(dReal stepsize, LVecBase3f const &impulse);

698 4 step 0 4 1260 14 OdeWorld::step 0 1 33 0
43
inline void OdeWorld::step(dReal stepsize);

699 10 quick_step 0 4 1260 20 OdeWorld::quick_step 0 1 34 0
49
inline void OdeWorld::quick_step(dReal stepsize);

700 10 compare_to 0 4 1260 20 OdeWorld::compare_to 0 1 35 0
61
inline int OdeWorld::compare_to(OdeWorld const &other) const;

701 18 init_surface_table 0 4 1260 28 OdeWorld::init_surface_table 0 1 36 0
57
void OdeWorld::init_surface_table(PN_uint8 num_surfaces);

702 18 add_body_dampening 0 4 1260 28 OdeWorld::add_body_dampening 0 1 37 55
//void assign_surface_body(OdeBody& body, int surface);
62
void OdeWorld::add_body_dampening(OdeBody &body, int surface);

703 17 set_surface_entry 0 4 1260 27 OdeWorld::set_surface_entry 0 1 38 0
163
void OdeWorld::set_surface_entry(PN_uint8 pos1, PN_uint8 pos2, dReal mu, dReal bounce, dReal bounce_vel, dReal soft_erp, dReal soft_cfm, dReal slip, dReal dampen);

704 15 apply_dampening 0 4 1260 25 OdeWorld::apply_dampening 0 1 39 0
57
float OdeWorld::apply_dampening(float dt, OdeBody &body);

705 22 operator typecast bool 0 132 1260 32 OdeWorld::operator typecast bool 0 1 41 0
50
bool OdeWorld::operator typecast bool(void) const;

706 14 get_class_type 0 4 1260 24 OdeWorld::get_class_type 0 1 40 0
49
static TypeHandle OdeWorld::get_class_type(void);

707 13 OdeJointGroup 0 4 1262 28 OdeJointGroup::OdeJointGroup 0 1 42 0
35
OdeJointGroup::OdeJointGroup(void);

708 7 destroy 0 4 1262 22 OdeJointGroup::destroy 0 1 43 0
34
void OdeJointGroup::destroy(void);

709 6 get_id 0 4 1262 21 OdeJointGroup::get_id 0 1 44 0
55
inline dJointGroupID OdeJointGroup::get_id(void) const;

710 5 empty 0 4 1262 20 OdeJointGroup::empty 0 1 45 0
45
inline void OdeJointGroup::empty(void) const;

711 10 compare_to 0 4 1262 25 OdeJointGroup::compare_to 0 1 46 0
71
inline int OdeJointGroup::compare_to(OdeJointGroup const &other) const;

712 14 get_class_type 0 4 1262 29 OdeJointGroup::get_class_type 0 1 47 0
54
static TypeHandle OdeJointGroup::get_class_type(void);

713 10 get_force1 0 4 1263 28 OdeJointFeedback::get_force1 0 1 48 0
64
inline LVector3f const OdeJointFeedback::get_force1(void) const;

714 10 get_force2 0 4 1263 28 OdeJointFeedback::get_force2 0 1 49 0
64
inline LVector3f const OdeJointFeedback::get_force2(void) const;

715 11 get_torque1 0 4 1263 29 OdeJointFeedback::get_torque1 0 1 50 0
65
inline LVector3f const OdeJointFeedback::get_torque1(void) const;

716 11 get_torque2 0 4 1263 29 OdeJointFeedback::get_torque2 0 1 51 0
65
inline LVector3f const OdeJointFeedback::get_torque2(void) const;

717 17 ~OdeJointFeedback 0 4 1263 35 OdeJointFeedback::~OdeJointFeedback 0 0 0
42
OdeJointFeedback::~OdeJointFeedback(void);

718 7 destroy 0 4 1265 17 OdeJoint::destroy 0 1 52 0
29
void OdeJoint::destroy(void);

719 8 is_empty 0 4 1265 18 OdeJoint::is_empty 0 1 53 455
////////////////////////////////////////////////////////////////////
//     Function: OdeJoint::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeJoint
//               does not point to a valid joint. It is an error to
//               call a method on an empty joint.
//               Note that an empty OdeJoint also evaluates to False.
////////////////////////////////////////////////////////////////////
43
inline bool OdeJoint::is_empty(void) const;

720 6 get_id 0 4 1265 16 OdeJoint::get_id 0 1 54 248
////////////////////////////////////////////////////////////////////
//     Function: OdeJoint::get_id
//       Access: Published
//  Description: Returns the underlying dJointID.
////////////////////////////////////////////////////////////////////
45
inline dJointID OdeJoint::get_id(void) const;

721 14 get_joint_type 0 4 1265 24 OdeJoint::get_joint_type 0 1 55 30
/* INLINE void *get_data(); */
48
inline int OdeJoint::get_joint_type(void) const;

722 8 get_body 0 4 1265 18 OdeJoint::get_body 0 1 56 0
44
OdeBody OdeJoint::get_body(int index) const;

723 12 set_feedback 0 4 1265 22 OdeJoint::set_feedback 0 2 57 58 0
106
inline void OdeJoint::set_feedback(OdeJointFeedback *);
inline void OdeJoint::set_feedback(bool flag = 1);

724 12 get_feedback 0 4 1265 22 OdeJoint::get_feedback 0 1 59 0
54
inline OdeJointFeedback *OdeJoint::get_feedback(void);

725 6 attach 0 4 1265 16 OdeJoint::attach 0 1 60 0
66
void OdeJoint::attach(OdeBody const *body1, OdeBody const *body2);

726 13 attach_bodies 0 4 1265 23 OdeJoint::attach_bodies 0 1 61 430
////////////////////////////////////////////////////////////////////
//     Function: OdeJoint::attach_bodies
//       Access: Published
//  Description: Attaches two OdeBody objects to this joint.
//               Order is important.
//               Consider using the OdeJoint::attach extension
//               function if you're using the Python interface.
////////////////////////////////////////////////////////////////////
73
void OdeJoint::attach_bodies(OdeBody const &body1, OdeBody const &body2);

727 11 attach_body 0 4 1265 21 OdeJoint::attach_body 0 1 62 511
////////////////////////////////////////////////////////////////////
//     Function: OdeJoint::attach_body
//       Access: Published
//  Description: Attaches a single OdeBody to this joint at the
//               specified index (0 or 1).  The other index will be 
//               set to the environment (null).
//               Consider using the OdeJoint::attach extension
//               function if you're using the Python interface.
////////////////////////////////////////////////////////////////////
59
void OdeJoint::attach_body(OdeBody const &body, int index);

728 6 detach 0 4 1265 16 OdeJoint::detach 0 1 63 0
28
void OdeJoint::detach(void);

729 5 write 0 6 1265 15 OdeJoint::write 0 1 64 0
83
virtual void OdeJoint::write(ostream &out = ::cout, unsigned int indent = 0) const;

730 10 compare_to 0 4 1265 20 OdeJoint::compare_to 0 1 65 0
61
inline int OdeJoint::compare_to(OdeJoint const &other) const;

731 11 operator == 0 4 1265 21 OdeJoint::operator == 0 1 66 0
63
inline bool OdeJoint::operator ==(OdeJoint const &other) const;

732 22 operator typecast bool 0 132 1265 32 OdeJoint::operator typecast bool 0 1 80 0
50
bool OdeJoint::operator typecast bool(void) const;

733 7 convert 0 4 1265 17 OdeJoint::convert 0 1 67 0
40
PyObject *OdeJoint::convert(void) const;

734 15 convert_to_ball 0 4 1265 25 OdeJoint::convert_to_ball 0 1 68 0
51
OdeBallJoint OdeJoint::convert_to_ball(void) const;

735 16 convert_to_hinge 0 4 1265 26 OdeJoint::convert_to_hinge 0 1 69 0
53
OdeHingeJoint OdeJoint::convert_to_hinge(void) const;

736 17 convert_to_slider 0 4 1265 27 OdeJoint::convert_to_slider 0 1 70 0
55
OdeSliderJoint OdeJoint::convert_to_slider(void) const;

737 18 convert_to_contact 0 4 1265 28 OdeJoint::convert_to_contact 0 1 71 0
57
OdeContactJoint OdeJoint::convert_to_contact(void) const;

738 20 convert_to_universal 0 4 1265 30 OdeJoint::convert_to_universal 0 1 72 0
61
OdeUniversalJoint OdeJoint::convert_to_universal(void) const;

739 17 convert_to_hinge2 0 4 1265 27 OdeJoint::convert_to_hinge2 0 1 73 0
55
OdeHinge2Joint OdeJoint::convert_to_hinge2(void) const;

740 16 convert_to_fixed 0 4 1265 26 OdeJoint::convert_to_fixed 0 1 74 0
53
OdeFixedJoint OdeJoint::convert_to_fixed(void) const;

741 15 convert_to_null 0 4 1265 25 OdeJoint::convert_to_null 0 1 75 0
51
OdeNullJoint OdeJoint::convert_to_null(void) const;

742 18 convert_to_a_motor 0 4 1265 28 OdeJoint::convert_to_a_motor 0 1 76 0
56
OdeAMotorJoint OdeJoint::convert_to_a_motor(void) const;

743 18 convert_to_l_motor 0 4 1265 28 OdeJoint::convert_to_l_motor 0 1 77 0
56
OdeLMotorJoint OdeJoint::convert_to_l_motor(void) const;

744 18 convert_to_plane2d 0 4 1265 28 OdeJoint::convert_to_plane2d 0 1 78 0
57
OdePlane2dJoint OdeJoint::convert_to_plane2d(void) const;

745 14 get_class_type 0 4 1265 24 OdeJoint::get_class_type 0 1 79 0
49
static TypeHandle OdeJoint::get_class_type(void);

746 14 OdeAMotorJoint 0 4 1267 30 OdeAMotorJoint::OdeAMotorJoint 0 2 81 82 0
125
OdeAMotorJoint::OdeAMotorJoint(OdeWorld &world);
OdeAMotorJoint::OdeAMotorJoint(OdeWorld &world, OdeJointGroup &joint_group);

747 12 set_num_axes 0 4 1267 28 OdeAMotorJoint::set_num_axes 0 1 83 0
50
inline void OdeAMotorJoint::set_num_axes(int num);

748 8 set_axis 0 4 1267 24 OdeAMotorJoint::set_axis 0 2 84 85 0
164
inline void OdeAMotorJoint::set_axis(int anum, int rel, dReal x, dReal y, dReal z);
inline void OdeAMotorJoint::set_axis(int anum, int rel, LVecBase3f const &axis);

749 9 set_angle 0 4 1267 25 OdeAMotorJoint::set_angle 0 1 86 0
61
inline void OdeAMotorJoint::set_angle(int anum, dReal angle);

750 8 set_mode 0 4 1267 24 OdeAMotorJoint::set_mode 0 1 87 0
47
inline void OdeAMotorJoint::set_mode(int mode);

751 11 add_torques 0 4 1267 27 OdeAMotorJoint::add_torques 0 1 88 0
85
inline void OdeAMotorJoint::add_torques(dReal torque1, dReal torque2, dReal torque3);

752 12 get_num_axes 0 4 1267 28 OdeAMotorJoint::get_num_axes 0 1 89 0
52
inline int OdeAMotorJoint::get_num_axes(void) const;

753 8 get_axis 0 4 1267 24 OdeAMotorJoint::get_axis 0 1 90 0
59
inline LVecBase3f OdeAMotorJoint::get_axis(int anum) const;

754 12 get_axis_rel 0 4 1267 28 OdeAMotorJoint::get_axis_rel 0 1 91 0
56
inline int OdeAMotorJoint::get_axis_rel(int anum) const;

755 9 get_angle 0 4 1267 25 OdeAMotorJoint::get_angle 0 1 92 0
55
inline dReal OdeAMotorJoint::get_angle(int anum) const;

756 14 get_angle_rate 0 4 1267 30 OdeAMotorJoint::get_angle_rate 0 1 93 0
60
inline dReal OdeAMotorJoint::get_angle_rate(int anum) const;

757 8 get_mode 0 4 1267 24 OdeAMotorJoint::get_mode 0 1 94 0
48
inline int OdeAMotorJoint::get_mode(void) const;

758 17 set_param_lo_stop 0 4 1267 33 OdeAMotorJoint::set_param_lo_stop 0 1 95 0
67
inline void OdeAMotorJoint::set_param_lo_stop(int axis, dReal val);

759 17 set_param_hi_stop 0 4 1267 33 OdeAMotorJoint::set_param_hi_stop 0 1 96 0
67
inline void OdeAMotorJoint::set_param_hi_stop(int axis, dReal val);

760 13 set_param_vel 0 4 1267 29 OdeAMotorJoint::set_param_vel 0 1 97 0
63
inline void OdeAMotorJoint::set_param_vel(int axis, dReal val);

761 15 set_param_f_max 0 4 1267 31 OdeAMotorJoint::set_param_f_max 0 1 98 0
65
inline void OdeAMotorJoint::set_param_f_max(int axis, dReal val);

762 22 set_param_fudge_factor 0 4 1267 38 OdeAMotorJoint::set_param_fudge_factor 0 1 99 0
72
inline void OdeAMotorJoint::set_param_fudge_factor(int axis, dReal val);

763 16 set_param_bounce 0 4 1267 32 OdeAMotorJoint::set_param_bounce 0 1 100 0
66
inline void OdeAMotorJoint::set_param_bounce(int axis, dReal val);

764 13 set_param_CFM 0 4 1267 29 OdeAMotorJoint::set_param_CFM 0 1 101 0
63
inline void OdeAMotorJoint::set_param_CFM(int axis, dReal val);

765 18 set_param_stop_ERP 0 4 1267 34 OdeAMotorJoint::set_param_stop_ERP 0 1 102 0
68
inline void OdeAMotorJoint::set_param_stop_ERP(int axis, dReal val);

766 18 set_param_stop_CFM 0 4 1267 34 OdeAMotorJoint::set_param_stop_CFM 0 1 103 0
68
inline void OdeAMotorJoint::set_param_stop_CFM(int axis, dReal val);

767 17 get_param_lo_stop 0 4 1267 33 OdeAMotorJoint::get_param_lo_stop 0 1 104 0
63
inline dReal OdeAMotorJoint::get_param_lo_stop(int axis) const;

768 17 get_param_hi_stop 0 4 1267 33 OdeAMotorJoint::get_param_hi_stop 0 1 105 0
63
inline dReal OdeAMotorJoint::get_param_hi_stop(int axis) const;

769 13 get_param_vel 0 4 1267 29 OdeAMotorJoint::get_param_vel 0 1 106 0
59
inline dReal OdeAMotorJoint::get_param_vel(int axis) const;

770 15 get_param_f_max 0 4 1267 31 OdeAMotorJoint::get_param_f_max 0 1 107 0
61
inline dReal OdeAMotorJoint::get_param_f_max(int axis) const;

771 22 get_param_fudge_factor 0 4 1267 38 OdeAMotorJoint::get_param_fudge_factor 0 1 108 0
68
inline dReal OdeAMotorJoint::get_param_fudge_factor(int axis) const;

772 16 get_param_bounce 0 4 1267 32 OdeAMotorJoint::get_param_bounce 0 1 109 0
62
inline dReal OdeAMotorJoint::get_param_bounce(int axis) const;

773 13 get_param_CFM 0 4 1267 29 OdeAMotorJoint::get_param_CFM 0 1 110 0
59
inline dReal OdeAMotorJoint::get_param_CFM(int axis) const;

774 18 get_param_stop_ERP 0 4 1267 34 OdeAMotorJoint::get_param_stop_ERP 0 1 111 0
64
inline dReal OdeAMotorJoint::get_param_stop_ERP(int axis) const;

775 18 get_param_stop_CFM 0 4 1267 34 OdeAMotorJoint::get_param_stop_CFM 0 1 112 0
64
inline dReal OdeAMotorJoint::get_param_stop_CFM(int axis) const;

776 14 get_class_type 0 4 1267 30 OdeAMotorJoint::get_class_type 0 1 113 0
55
static TypeHandle OdeAMotorJoint::get_class_type(void);

777 12 OdeBallJoint 0 4 1268 26 OdeBallJoint::OdeBallJoint 0 2 114 115 0
117
OdeBallJoint::OdeBallJoint(OdeWorld &world);
OdeBallJoint::OdeBallJoint(OdeWorld &world, OdeJointGroup &joint_group);

778 10 set_anchor 0 4 1268 24 OdeBallJoint::set_anchor 0 2 116 117 0
128
inline void OdeBallJoint::set_anchor(dReal x, dReal y, dReal z);
inline void OdeBallJoint::set_anchor(LVecBase3f const &anchor);

779 11 set_anchor2 0 4 1268 25 OdeBallJoint::set_anchor2 0 2 118 119 0
130
inline void OdeBallJoint::set_anchor2(dReal x, dReal y, dReal z);
inline void OdeBallJoint::set_anchor2(LVecBase3f const &anchor);

780 10 get_anchor 0 4 1268 24 OdeBallJoint::get_anchor 0 1 120 0
55
inline LVecBase3f OdeBallJoint::get_anchor(void) const;

781 11 get_anchor2 0 4 1268 25 OdeBallJoint::get_anchor2 0 1 121 0
56
inline LVecBase3f OdeBallJoint::get_anchor2(void) const;

782 14 get_class_type 0 4 1268 28 OdeBallJoint::get_class_type 0 1 122 0
53
static TypeHandle OdeBallJoint::get_class_type(void);

783 7 OdeMass 0 4 1269 16 OdeMass::OdeMass 0 2 123 124 0
62
OdeMass::OdeMass(void);
OdeMass::OdeMass(OdeMass const &copy);

784 5 check 0 4 1269 14 OdeMass::check 0 1 125 0
32
inline int OdeMass::check(void);

785 8 set_zero 0 4 1269 17 OdeMass::set_zero 0 1 126 0
36
inline void OdeMass::set_zero(void);

786 14 set_parameters 0 4 1269 23 OdeMass::set_parameters 0 2 127 128 0
248
inline void OdeMass::set_parameters(dReal themass, dReal cgx, dReal cgy, dReal cgz, dReal I11, dReal I22, dReal I33, dReal I12, dReal I13, dReal I23);
inline void OdeMass::set_parameters(dReal themass, LVecBase3f const &center, LMatrix3f const &r);

787 10 set_sphere 0 4 1269 19 OdeMass::set_sphere 0 1 129 0
61
inline void OdeMass::set_sphere(dReal density, dReal radius);

788 16 set_sphere_total 0 4 1269 25 OdeMass::set_sphere_total 0 1 130 0
70
inline void OdeMass::set_sphere_total(dReal total_mass, dReal radius);

789 11 set_capsule 0 4 1269 20 OdeMass::set_capsule 0 1 131 0
91
inline void OdeMass::set_capsule(dReal density, int direction, dReal radius, dReal length);

790 17 set_capsule_total 0 4 1269 26 OdeMass::set_capsule_total 0 1 132 0
100
inline void OdeMass::set_capsule_total(dReal total_mass, int direction, dReal radius, dReal length);

791 12 set_cylinder 0 4 1269 21 OdeMass::set_cylinder 0 1 133 0
92
inline void OdeMass::set_cylinder(dReal density, int direction, dReal radius, dReal length);

792 18 set_cylinder_total 0 4 1269 27 OdeMass::set_cylinder_total 0 1 134 0
101
inline void OdeMass::set_cylinder_total(dReal total_mass, int direction, dReal radius, dReal length);

793 7 set_box 0 4 1269 16 OdeMass::set_box 0 2 135 136 0
143
inline void OdeMass::set_box(dReal density, dReal lx, dReal ly, dReal lz);
inline void OdeMass::set_box(dReal density, LVecBase3f const &size);

794 13 set_box_total 0 4 1269 22 OdeMass::set_box_total 0 2 137 138 0
161
inline void OdeMass::set_box_total(dReal total_mass, dReal lx, dReal ly, dReal lz);
inline void OdeMass::set_box_total(dReal total_mass, LVecBase3f const &size);

795 6 adjust 0 4 1269 15 OdeMass::adjust 0 1 139 0
43
inline void OdeMass::adjust(dReal newmass);

796 9 translate 0 4 1269 18 OdeMass::translate 0 2 140 141 0
113
inline void OdeMass::translate(dReal x, dReal y, dReal z);
inline void OdeMass::translate(LVecBase3f const &pos);

797 6 rotate 0 4 1269 15 OdeMass::rotate 0 1 142 0
48
inline void OdeMass::rotate(LMatrix3f const &r);

798 3 add 0 4 1269 12 OdeMass::add 0 1 143 0
41
inline void OdeMass::add(OdeMass &other);

799 13 get_magnitude 0 4 1269 22 OdeMass::get_magnitude 0 1 144 0
48
inline dReal OdeMass::get_magnitude(void) const;

800 10 get_center 0 4 1269 19 OdeMass::get_center 0 1 145 0
48
inline LPoint3f OdeMass::get_center(void) const;

801 19 get_inertial_tensor 0 4 1269 28 OdeMass::get_inertial_tensor 0 1 146 0
58
inline LMatrix3f OdeMass::get_inertial_tensor(void) const;

802 5 write 0 6 1269 14 OdeMass::write 0 1 147 0
82
virtual void OdeMass::write(ostream &out = ::cout, unsigned int indent = 0) const;

803 14 get_class_type 0 4 1269 23 OdeMass::get_class_type 0 1 148 0
48
static TypeHandle OdeMass::get_class_type(void);

804 7 OdeBody 0 4 1271 16 OdeBody::OdeBody 0 1 149 0
34
OdeBody::OdeBody(OdeWorld &world);

805 7 destroy 0 4 1271 16 OdeBody::destroy 0 1 150 0
28
void OdeBody::destroy(void);

806 8 is_empty 0 4 1271 17 OdeBody::is_empty 0 1 151 450
////////////////////////////////////////////////////////////////////
//     Function: OdeBody::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeBody
//               does not point to a valid body. It is an error to
//               call a method on an empty body.
//               Note that an empty OdeBody also evaluates to False.
////////////////////////////////////////////////////////////////////
42
inline bool OdeBody::is_empty(void) const;

807 6 get_id 0 4 1271 15 OdeBody::get_id 0 1 152 246
////////////////////////////////////////////////////////////////////
//     Function: OdeBody::get_id
//       Access: Published
//  Description: Returns the underlying dBodyID.
////////////////////////////////////////////////////////////////////
43
inline dBodyID OdeBody::get_id(void) const;

808 33 set_auto_disable_linear_threshold 0 4 1271 42 OdeBody::set_auto_disable_linear_threshold 0 1 153 0
79
inline void OdeBody::set_auto_disable_linear_threshold(dReal linear_threshold);

809 34 set_auto_disable_angular_threshold 0 4 1271 43 OdeBody::set_auto_disable_angular_threshold 0 1 154 0
81
inline void OdeBody::set_auto_disable_angular_threshold(dReal angular_threshold);

810 22 set_auto_disable_steps 0 4 1271 31 OdeBody::set_auto_disable_steps 0 1 155 0
55
inline void OdeBody::set_auto_disable_steps(int steps);

811 21 set_auto_disable_time 0 4 1271 30 OdeBody::set_auto_disable_time 0 1 156 0
55
inline void OdeBody::set_auto_disable_time(dReal time);

812 21 set_auto_disable_flag 0 4 1271 30 OdeBody::set_auto_disable_flag 0 1 157 0
64
inline void OdeBody::set_auto_disable_flag(int do_auto_disable);

813 25 set_auto_disable_defaults 0 4 1271 34 OdeBody::set_auto_disable_defaults 0 1 158 0
53
inline void OdeBody::set_auto_disable_defaults(void);

814 8 set_data 0 4 1271 17 OdeBody::set_data 0 1 159 0
89
inline void OdeBody::set_data(void *data);
inline void OdeBody::set_data(PyObject *data);

815 12 set_position 0 4 1271 21 OdeBody::set_position 0 2 160 161 0
119
inline void OdeBody::set_position(dReal x, dReal y, dReal z);
inline void OdeBody::set_position(LVecBase3f const &pos);

816 12 set_rotation 0 4 1271 21 OdeBody::set_rotation 0 1 162 0
54
inline void OdeBody::set_rotation(LMatrix3f const &r);

817 14 set_quaternion 0 4 1271 23 OdeBody::set_quaternion 0 1 163 0
59
inline void OdeBody::set_quaternion(LQuaternionf const &q);

818 14 set_linear_vel 0 4 1271 23 OdeBody::set_linear_vel 0 2 164 165 0
123
inline void OdeBody::set_linear_vel(dReal x, dReal y, dReal z);
inline void OdeBody::set_linear_vel(LVecBase3f const &vel);

819 15 set_angular_vel 0 4 1271 24 OdeBody::set_angular_vel 0 2 166 167 0
125
inline void OdeBody::set_angular_vel(dReal x, dReal y, dReal z);
inline void OdeBody::set_angular_vel(LVecBase3f const &vel);

820 8 set_mass 0 4 1271 17 OdeBody::set_mass 0 1 168 0
45
inline void OdeBody::set_mass(OdeMass &mass);

821 33 get_auto_disable_linear_threshold 0 4 1271 42 OdeBody::get_auto_disable_linear_threshold 0 1 169 0
68
inline dReal OdeBody::get_auto_disable_linear_threshold(void) const;

822 34 get_auto_disable_angular_threshold 0 4 1271 43 OdeBody::get_auto_disable_angular_threshold 0 1 170 0
69
inline dReal OdeBody::get_auto_disable_angular_threshold(void) const;

823 22 get_auto_disable_steps 0 4 1271 31 OdeBody::get_auto_disable_steps 0 1 171 0
55
inline int OdeBody::get_auto_disable_steps(void) const;

824 21 get_auto_disable_time 0 4 1271 30 OdeBody::get_auto_disable_time 0 1 172 0
56
inline dReal OdeBody::get_auto_disable_time(void) const;

825 21 get_auto_disable_flag 0 4 1271 30 OdeBody::get_auto_disable_flag 0 1 173 0
54
inline int OdeBody::get_auto_disable_flag(void) const;

826 8 get_data 0 4 1271 17 OdeBody::get_data 0 1 174 0
47
inline PyObject *OdeBody::get_data(void) const;

827 12 get_position 0 4 1271 21 OdeBody::get_position 0 1 175 0
52
inline LVecBase3f OdeBody::get_position(void) const;

828 12 get_rotation 0 4 1271 21 OdeBody::get_rotation 0 1 176 0
51
inline LMatrix3f OdeBody::get_rotation(void) const;

829 14 get_quaternion 0 4 1271 23 OdeBody::get_quaternion 0 1 177 0
54
inline LVecBase4f OdeBody::get_quaternion(void) const;

830 14 get_linear_vel 0 4 1271 23 OdeBody::get_linear_vel 0 1 178 0
54
inline LVecBase3f OdeBody::get_linear_vel(void) const;

831 15 get_angular_vel 0 4 1271 24 OdeBody::get_angular_vel 0 1 179 0
55
inline LVecBase3f OdeBody::get_angular_vel(void) const;

832 8 get_mass 0 4 1271 17 OdeBody::get_mass 0 1 180 0
45
inline OdeMass OdeBody::get_mass(void) const;

833 9 add_force 0 4 1271 18 OdeBody::add_force 0 2 181 182 0
114
inline void OdeBody::add_force(dReal fx, dReal fy, dReal fz);
inline void OdeBody::add_force(LVecBase3f const &f);

834 10 add_torque 0 4 1271 19 OdeBody::add_torque 0 2 183 184 0
116
inline void OdeBody::add_torque(dReal fx, dReal fy, dReal fz);
inline void OdeBody::add_torque(LVecBase3f const &f);

835 13 add_rel_force 0 4 1271 22 OdeBody::add_rel_force 0 2 185 186 0
122
inline void OdeBody::add_rel_force(dReal fx, dReal fy, dReal fz);
inline void OdeBody::add_rel_force(LVecBase3f const &f);

836 14 add_rel_torque 0 4 1271 23 OdeBody::add_rel_torque 0 2 187 188 0
124
inline void OdeBody::add_rel_torque(dReal fx, dReal fy, dReal fz);
inline void OdeBody::add_rel_torque(LVecBase3f const &f);

837 16 add_force_at_pos 0 4 1271 25 OdeBody::add_force_at_pos 0 2 189 190 0
181
inline void OdeBody::add_force_at_pos(dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz);
inline void OdeBody::add_force_at_pos(LVecBase3f const &f, LVecBase3f const &pos);

838 20 add_force_at_rel_pos 0 4 1271 29 OdeBody::add_force_at_rel_pos 0 2 191 192 0
189
inline void OdeBody::add_force_at_rel_pos(dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz);
inline void OdeBody::add_force_at_rel_pos(LVecBase3f const &f, LVecBase3f const &pos);

839 20 add_rel_force_at_pos 0 4 1271 29 OdeBody::add_rel_force_at_pos 0 2 193 194 0
189
inline void OdeBody::add_rel_force_at_pos(dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz);
inline void OdeBody::add_rel_force_at_pos(LVecBase3f const &f, LVecBase3f const &pos);

840 24 add_rel_force_at_rel_pos 0 4 1271 33 OdeBody::add_rel_force_at_rel_pos 0 2 195 196 0
197
inline void OdeBody::add_rel_force_at_rel_pos(dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz);
inline void OdeBody::add_rel_force_at_rel_pos(LVecBase3f const &f, LVecBase3f const &pos);

841 9 set_force 0 4 1271 18 OdeBody::set_force 0 2 197 198 0
111
inline void OdeBody::set_force(dReal x, dReal y, dReal z);
inline void OdeBody::set_force(LVecBase3f const &f);

842 10 set_torque 0 4 1271 19 OdeBody::set_torque 0 2 199 200 0
113
inline void OdeBody::set_torque(dReal x, dReal y, dReal z);
inline void OdeBody::set_torque(LVecBase3f const &f);

843 17 get_rel_point_pos 0 4 1271 26 OdeBody::get_rel_point_pos 0 2 201 202 0
152
inline LPoint3f OdeBody::get_rel_point_pos(dReal px, dReal py, dReal pz) const;
inline LPoint3f OdeBody::get_rel_point_pos(LVecBase3f const &pos) const;

844 17 get_rel_point_vel 0 4 1271 26 OdeBody::get_rel_point_vel 0 2 203 204 0
152
inline LPoint3f OdeBody::get_rel_point_vel(dReal px, dReal py, dReal pz) const;
inline LPoint3f OdeBody::get_rel_point_vel(LVecBase3f const &pos) const;

845 13 get_point_vel 0 4 1271 22 OdeBody::get_point_vel 0 2 205 206 0
144
inline LPoint3f OdeBody::get_point_vel(dReal px, dReal py, dReal pz) const;
inline LPoint3f OdeBody::get_point_vel(LVecBase3f const &pos) const;

846 17 get_pos_rel_point 0 4 1271 26 OdeBody::get_pos_rel_point 0 2 207 208 0
152
inline LPoint3f OdeBody::get_pos_rel_point(dReal px, dReal py, dReal pz) const;
inline LPoint3f OdeBody::get_pos_rel_point(LVecBase3f const &pos) const;

847 15 vector_to_world 0 4 1271 24 OdeBody::vector_to_world 0 2 209 210 0
152
inline LVecBase3f OdeBody::vector_to_world(dReal px, dReal py, dReal pz) const;
inline LVecBase3f OdeBody::vector_to_world(LVecBase3f const &pos) const;

848 17 vector_from_world 0 4 1271 26 OdeBody::vector_from_world 0 2 211 212 0
156
inline LVecBase3f OdeBody::vector_from_world(dReal px, dReal py, dReal pz) const;
inline LVecBase3f OdeBody::vector_from_world(LVecBase3f const &pos) const;

849 24 set_finite_rotation_mode 0 4 1271 33 OdeBody::set_finite_rotation_mode 0 1 213 0
56
inline void OdeBody::set_finite_rotation_mode(int mode);

850 24 set_finite_rotation_axis 0 4 1271 33 OdeBody::set_finite_rotation_axis 0 2 214 215 0
144
inline void OdeBody::set_finite_rotation_axis(dReal x, dReal y, dReal z);
inline void OdeBody::set_finite_rotation_axis(LVecBase3f const &axis);

851 24 get_finite_rotation_mode 0 4 1271 33 OdeBody::get_finite_rotation_mode 0 1 216 0
57
inline int OdeBody::get_finite_rotation_mode(void) const;

852 24 get_finite_rotation_axis 0 4 1271 33 OdeBody::get_finite_rotation_axis 0 1 217 0
64
inline LVecBase3f OdeBody::get_finite_rotation_axis(void) const;

853 14 get_num_joints 0 4 1271 23 OdeBody::get_num_joints 0 1 218 0
47
inline int OdeBody::get_num_joints(void) const;

854 9 get_joint 0 4 1271 18 OdeBody::get_joint 0 1 219 0
45
OdeJoint OdeBody::get_joint(int index) const;

855 19 get_converted_joint 0 4 1271 28 OdeBody::get_converted_joint 0 1 220 0
59
inline PyObject *OdeBody::get_converted_joint(int i) const;

856 6 enable 0 4 1271 15 OdeBody::enable 0 1 221 0
34
inline void OdeBody::enable(void);

857 7 disable 0 4 1271 16 OdeBody::disable 0 1 222 0
35
inline void OdeBody::disable(void);

858 10 is_enabled 0 4 1271 19 OdeBody::is_enabled 0 1 223 0
43
inline int OdeBody::is_enabled(void) const;

859 16 set_gravity_mode 0 4 1271 25 OdeBody::set_gravity_mode 0 1 224 0
48
inline void OdeBody::set_gravity_mode(int mode);

860 16 get_gravity_mode 0 4 1271 25 OdeBody::get_gravity_mode 0 1 225 0
49
inline int OdeBody::get_gravity_mode(void) const;

861 5 write 0 6 1271 14 OdeBody::write 0 1 226 0
82
virtual void OdeBody::write(ostream &out = ::cout, unsigned int indent = 0) const;

862 22 operator typecast bool 0 132 1271 31 OdeBody::operator typecast bool 0 1 229 0
49
bool OdeBody::operator typecast bool(void) const;

863 10 compare_to 0 4 1271 19 OdeBody::compare_to 0 1 227 0
59
inline int OdeBody::compare_to(OdeBody const &other) const;

864 14 get_class_type 0 4 1271 23 OdeBody::get_class_type 0 1 228 0
48
static TypeHandle OdeBody::get_class_type(void);

865 7 destroy 0 4 1272 17 OdeSpace::destroy 0 1 230 0
29
void OdeSpace::destroy(void);

866 8 is_empty 0 4 1272 18 OdeSpace::is_empty 0 1 231 455
////////////////////////////////////////////////////////////////////
//     Function: OdeSpace::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeSpace
//               does not point to a valid space. It is an error to
//               call a method on an empty space.
//               Note that an empty OdeSpace also evaluates to False.
////////////////////////////////////////////////////////////////////
43
inline bool OdeSpace::is_empty(void) const;

867 11 set_cleanup 0 4 1272 21 OdeSpace::set_cleanup 0 1 232 0
44
inline void OdeSpace::set_cleanup(int mode);

868 11 get_cleanup 0 4 1272 21 OdeSpace::get_cleanup 0 1 233 0
45
inline int OdeSpace::get_cleanup(void) const;

869 5 query 0 4 1272 15 OdeSpace::query 0 2 234 235 0
97
int OdeSpace::query(OdeGeom const &geom) const;
int OdeSpace::query(OdeSpace const &space) const;

870 13 get_num_geoms 0 4 1272 23 OdeSpace::get_num_geoms 0 1 236 0
47
inline int OdeSpace::get_num_geoms(void) const;

871 8 get_AABB 0 4 1272 18 OdeSpace::get_AABB 0 1 237 0
71
inline void OdeSpace::get_AABB(LVecBase3f &min, LVecBase3f &max) const;

872 13 get_AA_bounds 0 4 1272 23 OdeSpace::get_AA_bounds 0 1 238 0
53
inline PyObject *OdeSpace::get_AA_bounds(void) const;

873 8 is_space 0 4 1272 18 OdeSpace::is_space 0 1 239 0
36
inline int OdeSpace::is_space(void);

874 9 get_class 0 4 1272 19 OdeSpace::get_class 0 1 240 0
43
inline int OdeSpace::get_class(void) const;

875 17 set_category_bits 0 4 1272 27 OdeSpace::set_category_bits 0 1 241 0
63
inline void OdeSpace::set_category_bits(BitMask32 const &bits);

876 16 set_collide_bits 0 4 1272 26 OdeSpace::set_collide_bits 0 1 242 0
62
inline void OdeSpace::set_collide_bits(BitMask32 const &bits);

877 17 get_category_bits 0 4 1272 27 OdeSpace::get_category_bits 0 1 243 0
51
inline BitMask32 OdeSpace::get_category_bits(void);

878 16 get_collide_bits 0 4 1272 26 OdeSpace::get_collide_bits 0 1 244 0
50
inline BitMask32 OdeSpace::get_collide_bits(void);

879 6 enable 0 4 1272 16 OdeSpace::enable 0 1 245 0
35
inline void OdeSpace::enable(void);

880 7 disable 0 4 1272 17 OdeSpace::disable 0 1 246 0
36
inline void OdeSpace::disable(void);

881 10 is_enabled 0 4 1272 20 OdeSpace::is_enabled 0 1 247 0
38
inline int OdeSpace::is_enabled(void);

882 22 set_auto_collide_world 0 4 1272 32 OdeSpace::set_auto_collide_world 0 1 248 0
50
void OdeSpace::set_auto_collide_world(OdeWorld &);

883 28 set_auto_collide_joint_group 0 4 1272 38 OdeSpace::set_auto_collide_joint_group 0 1 249 0
61
void OdeSpace::set_auto_collide_joint_group(OdeJointGroup &);

884 3 add 0 4 1272 13 OdeSpace::add 0 2 250 251 0
71
void OdeSpace::add(OdeGeom &geom);
void OdeSpace::add(OdeSpace &space);

885 6 remove 0 4 1272 16 OdeSpace::remove 0 2 252 253 0
77
void OdeSpace::remove(OdeGeom &geom);
void OdeSpace::remove(OdeSpace &space);

886 5 clean 0 4 1272 15 OdeSpace::clean 0 1 254 0
27
void OdeSpace::clean(void);

887 8 get_geom 0 4 1272 18 OdeSpace::get_geom 0 1 255 0
34
OdeGeom OdeSpace::get_geom(int i);

888 9 get_space 0 4 1272 19 OdeSpace::get_space 0 1 256 0
48
inline OdeSpace OdeSpace::get_space(void) const;

889 5 write 0 6 1272 15 OdeSpace::write 0 1 257 0
83
virtual void OdeSpace::write(ostream &out = ::cout, unsigned int indent = 0) const;

890 22 operator typecast bool 0 132 1272 32 OdeSpace::operator typecast bool 0 1 277 0
50
bool OdeSpace::operator typecast bool(void) const;

891 23 convert_to_simple_space 0 4 1272 33 OdeSpace::convert_to_simple_space 0 1 258 0
61
OdeSimpleSpace OdeSpace::convert_to_simple_space(void) const;

892 21 convert_to_hash_space 0 4 1272 31 OdeSpace::convert_to_hash_space 0 1 259 0
57
OdeHashSpace OdeSpace::convert_to_hash_space(void) const;

893 26 convert_to_quad_tree_space 0 4 1272 36 OdeSpace::convert_to_quad_tree_space 0 1 260 0
66
OdeQuadTreeSpace OdeSpace::convert_to_quad_tree_space(void) const;

894 7 convert 0 4 1272 17 OdeSpace::convert 0 1 261 0
40
PyObject *OdeSpace::convert(void) const;

895 18 get_converted_geom 0 4 1272 28 OdeSpace::get_converted_geom 0 1 262 0
59
inline PyObject *OdeSpace::get_converted_geom(int i) const;

896 19 get_converted_space 0 4 1272 29 OdeSpace::get_converted_space 0 1 263 0
59
inline PyObject *OdeSpace::get_converted_space(void) const;

897 12 auto_collide 0 4 1272 22 OdeSpace::auto_collide 0 1 264 0
34
void OdeSpace::auto_collide(void);

898 7 collide 0 4 1272 17 OdeSpace::collide 0 1 265 0
62
int OdeSpace::collide(PyObject *arg, PyObject *near_callback);

899 14 set_collide_id 0 4 1272 24 OdeSpace::set_collide_id 0 2 266 267 0
118
int OdeSpace::set_collide_id(int collide_id, dGeomID id);
int OdeSpace::set_collide_id(OdeGeom &geom, int collide_id);

900 16 set_surface_type 0 4 1272 26 OdeSpace::set_surface_type 0 2 268 269 0
128
void OdeSpace::set_surface_type(int surface_type, dGeomID id);
void OdeSpace::set_surface_type(OdeGeom &geom, int surface_type);

901 16 get_surface_type 0 4 1272 26 OdeSpace::get_surface_type 0 2 270 271 0
90
int OdeSpace::get_surface_type(dGeomID o1);
int OdeSpace::get_surface_type(OdeGeom &geom);

902 14 get_collide_id 0 4 1272 24 OdeSpace::get_collide_id 0 2 272 273 0
86
int OdeSpace::get_collide_id(dGeomID o1);
int OdeSpace::get_collide_id(OdeGeom &geom);

903 19 set_collision_event 0 4 1272 29 OdeSpace::set_collision_event 0 1 274 0
68
inline void OdeSpace::set_collision_event(string const &event_name);

904 19 get_collision_event 0 4 1272 29 OdeSpace::get_collision_event 0 1 275 0
50
inline string OdeSpace::get_collision_event(void);

905 14 get_class_type 0 4 1272 24 OdeSpace::get_class_type 0 1 276 0
49
static TypeHandle OdeSpace::get_class_type(void);

906 7 destroy 0 4 1273 16 OdeGeom::destroy 0 1 278 0
28
void OdeGeom::destroy(void);

907 8 is_empty 0 4 1273 17 OdeGeom::is_empty 0 1 279 450
////////////////////////////////////////////////////////////////////
//     Function: OdeGeom::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeGeom
//               does not point to a valid geom. It is an error to
//               call a method on an empty geom.
//               Note that an empty OdeGeom also evaluates to False.
////////////////////////////////////////////////////////////////////
42
inline bool OdeGeom::is_empty(void) const;

908 6 get_id 0 4 1273 15 OdeGeom::get_id 0 1 280 246
////////////////////////////////////////////////////////////////////
//     Function: OdeGeom::get_id
//       Access: Published
//  Description: Returns the underlying dGeomID.
////////////////////////////////////////////////////////////////////
43
inline dGeomID OdeGeom::get_id(void) const;

909 8 set_body 0 4 1273 17 OdeGeom::set_body 0 1 281 35
//INLINE void set_data(void* data);
45
inline void OdeGeom::set_body(OdeBody &body);

910 8 has_body 0 4 1273 17 OdeGeom::has_body 0 1 282 0
42
inline bool OdeGeom::has_body(void) const;

911 8 get_body 0 4 1273 17 OdeGeom::get_body 0 1 283 0
45
inline OdeBody OdeGeom::get_body(void) const;

912 12 set_position 0 4 1273 21 OdeGeom::set_position 0 2 284 285 0
119
inline void OdeGeom::set_position(dReal x, dReal y, dReal z);
inline void OdeGeom::set_position(LVecBase3f const &pos);

913 12 set_rotation 0 4 1273 21 OdeGeom::set_rotation 0 1 286 0
54
inline void OdeGeom::set_rotation(LMatrix3f const &r);

914 14 set_quaternion 0 4 1273 23 OdeGeom::set_quaternion 0 1 287 0
59
inline void OdeGeom::set_quaternion(LQuaternionf const &q);

915 12 get_position 0 4 1273 21 OdeGeom::get_position 0 1 288 0
50
inline LPoint3f OdeGeom::get_position(void) const;

916 12 get_rotation 0 4 1273 21 OdeGeom::get_rotation 0 1 289 0
51
inline LMatrix3f OdeGeom::get_rotation(void) const;

917 14 get_quaternion 0 4 1273 23 OdeGeom::get_quaternion 0 1 290 0
56
inline LQuaternionf OdeGeom::get_quaternion(void) const;

918 8 get_AABB 0 4 1273 17 OdeGeom::get_AABB 0 1 291 0
70
inline void OdeGeom::get_AABB(LVecBase3f &min, LVecBase3f &max) const;

919 13 get_AA_bounds 0 4 1273 22 OdeGeom::get_AA_bounds 0 1 292 0
52
inline PyObject *OdeGeom::get_AA_bounds(void) const;

920 8 is_space 0 4 1273 17 OdeGeom::is_space 0 1 293 0
35
inline int OdeGeom::is_space(void);

921 9 get_class 0 4 1273 18 OdeGeom::get_class 0 1 294 0
42
inline int OdeGeom::get_class(void) const;

922 17 set_category_bits 0 4 1273 26 OdeGeom::set_category_bits 0 1 295 0
62
inline void OdeGeom::set_category_bits(BitMask32 const &bits);

923 16 set_collide_bits 0 4 1273 25 OdeGeom::set_collide_bits 0 1 296 0
61
inline void OdeGeom::set_collide_bits(BitMask32 const &bits);

924 17 get_category_bits 0 4 1273 26 OdeGeom::get_category_bits 0 1 297 0
50
inline BitMask32 OdeGeom::get_category_bits(void);

925 16 get_collide_bits 0 4 1273 25 OdeGeom::get_collide_bits 0 1 298 0
49
inline BitMask32 OdeGeom::get_collide_bits(void);

926 6 enable 0 4 1273 15 OdeGeom::enable 0 1 299 0
34
inline void OdeGeom::enable(void);

927 7 disable 0 4 1273 16 OdeGeom::disable 0 1 300 0
35
inline void OdeGeom::disable(void);

928 10 is_enabled 0 4 1273 19 OdeGeom::is_enabled 0 1 301 0
37
inline int OdeGeom::is_enabled(void);

929 19 set_offset_position 0 4 1273 28 OdeGeom::set_offset_position 0 2 302 303 0
133
inline void OdeGeom::set_offset_position(dReal x, dReal y, dReal z);
inline void OdeGeom::set_offset_position(LVecBase3f const &pos);

930 19 set_offset_rotation 0 4 1273 28 OdeGeom::set_offset_rotation 0 1 304 0
61
inline void OdeGeom::set_offset_rotation(LMatrix3f const &r);

931 21 set_offset_quaternion 0 4 1273 30 OdeGeom::set_offset_quaternion 0 1 305 0
66
inline void OdeGeom::set_offset_quaternion(LQuaternionf const &q);

932 25 set_offset_world_position 0 4 1273 34 OdeGeom::set_offset_world_position 0 2 306 307 0
145
inline void OdeGeom::set_offset_world_position(dReal x, dReal y, dReal z);
inline void OdeGeom::set_offset_world_position(LVecBase3f const &pos);

933 25 set_offset_world_rotation 0 4 1273 34 OdeGeom::set_offset_world_rotation 0 1 308 0
67
inline void OdeGeom::set_offset_world_rotation(LMatrix3f const &r);

934 27 set_offset_world_quaternion 0 4 1273 36 OdeGeom::set_offset_world_quaternion 0 1 309 0
72
inline void OdeGeom::set_offset_world_quaternion(LQuaternionf const &q);

935 12 clear_offset 0 4 1273 21 OdeGeom::clear_offset 0 1 310 0
40
inline void OdeGeom::clear_offset(void);

936 9 is_offset 0 4 1273 18 OdeGeom::is_offset 0 1 311 0
36
inline int OdeGeom::is_offset(void);

937 19 get_offset_position 0 4 1273 28 OdeGeom::get_offset_position 0 1 312 0
57
inline LPoint3f OdeGeom::get_offset_position(void) const;

938 19 get_offset_rotation 0 4 1273 28 OdeGeom::get_offset_rotation 0 1 313 0
58
inline LMatrix3f OdeGeom::get_offset_rotation(void) const;

939 21 get_offset_quaternion 0 4 1273 30 OdeGeom::get_offset_quaternion 0 1 314 0
63
inline LQuaternionf OdeGeom::get_offset_quaternion(void) const;

940 9 get_space 0 4 1273 18 OdeGeom::get_space 0 1 315 0
40
OdeSpace OdeGeom::get_space(void) const;

941 19 get_converted_space 0 4 1273 28 OdeGeom::get_converted_space 0 1 316 0
58
inline PyObject *OdeGeom::get_converted_space(void) const;

942 5 write 0 6 1273 14 OdeGeom::write 0 1 317 0
82
virtual void OdeGeom::write(ostream &out = ::cout, unsigned int indent = 0) const;

943 22 operator typecast bool 0 132 1273 31 OdeGeom::operator typecast bool 0 1 331 0
49
bool OdeGeom::operator typecast bool(void) const;

944 10 compare_to 0 4 1273 19 OdeGeom::compare_to 0 1 318 0
59
inline int OdeGeom::compare_to(OdeGeom const &other) const;

945 7 convert 0 4 1273 16 OdeGeom::convert 0 1 319 0
39
PyObject *OdeGeom::convert(void) const;

946 14 convert_to_box 0 4 1273 23 OdeGeom::convert_to_box 0 1 320 0
47
OdeBoxGeom OdeGeom::convert_to_box(void) const;

947 26 convert_to_capped_cylinder 0 4 1273 35 OdeGeom::convert_to_capped_cylinder 0 1 321 0
70
OdeCappedCylinderGeom OdeGeom::convert_to_capped_cylinder(void) const;

948 19 convert_to_cylinder 0 4 1273 28 OdeGeom::convert_to_cylinder 0 1 322 43
// OdeConvexGeom convert_to_convex() const;
57
OdeCylinderGeom OdeGeom::convert_to_cylinder(void) const;

949 16 convert_to_plane 0 4 1273 25 OdeGeom::convert_to_plane 0 1 323 53
// OdeHeightfieldGeom convert_to_heightfield() const;
51
OdePlaneGeom OdeGeom::convert_to_plane(void) const;

950 14 convert_to_ray 0 4 1273 23 OdeGeom::convert_to_ray 0 1 324 0
47
OdeRayGeom OdeGeom::convert_to_ray(void) const;

951 17 convert_to_sphere 0 4 1273 26 OdeGeom::convert_to_sphere 0 1 325 0
53
OdeSphereGeom OdeGeom::convert_to_sphere(void) const;

952 19 convert_to_tri_mesh 0 4 1273 28 OdeGeom::convert_to_tri_mesh 0 1 326 0
56
OdeTriMeshGeom OdeGeom::convert_to_tri_mesh(void) const;

953 23 convert_to_simple_space 0 4 1273 32 OdeGeom::convert_to_simple_space 0 1 327 0
60
OdeSimpleSpace OdeGeom::convert_to_simple_space(void) const;

954 21 convert_to_hash_space 0 4 1273 30 OdeGeom::convert_to_hash_space 0 1 328 0
56
OdeHashSpace OdeGeom::convert_to_hash_space(void) const;

955 26 convert_to_quad_tree_space 0 4 1273 35 OdeGeom::convert_to_quad_tree_space 0 1 329 0
65
OdeQuadTreeSpace OdeGeom::convert_to_quad_tree_space(void) const;

956 14 get_class_type 0 4 1273 23 OdeGeom::get_class_type 0 1 330 0
48
static TypeHandle OdeGeom::get_class_type(void);

957 10 OdeBoxGeom 0 4 1275 22 OdeBoxGeom::OdeBoxGeom 0 3 332 333 334 0
189
OdeBoxGeom::OdeBoxGeom(dReal lx, dReal ly, dReal lz);
OdeBoxGeom::OdeBoxGeom(OdeSpace &space, dReal lx, dReal ly, dReal lz);
OdeBoxGeom::OdeBoxGeom(OdeSpace &space, LVecBase3f const &size);

958 11 set_lengths 0 4 1275 23 OdeBoxGeom::set_lengths 0 2 335 336 0
127
inline void OdeBoxGeom::set_lengths(dReal lx, dReal ly, dReal lz);
inline void OdeBoxGeom::set_lengths(LVecBase3f const &size);

959 11 get_lengths 0 4 1275 23 OdeBoxGeom::get_lengths 0 1 337 0
48
inline LVecBase3f OdeBoxGeom::get_lengths(void);

960 15 get_point_depth 0 4 1275 27 OdeBoxGeom::get_point_depth 0 2 338 339 0
129
inline dReal OdeBoxGeom::get_point_depth(dReal x, dReal y, dReal z);
inline dReal OdeBoxGeom::get_point_depth(LPoint3f const &p);

961 14 get_class_type 0 4 1275 26 OdeBoxGeom::get_class_type 0 1 340 0
51
static TypeHandle OdeBoxGeom::get_class_type(void);

962 21 OdeCappedCylinderGeom 0 4 1276 44 OdeCappedCylinderGeom::OdeCappedCylinderGeom 0 2 341 342 0
164
OdeCappedCylinderGeom::OdeCappedCylinderGeom(dReal radius, dReal length);
OdeCappedCylinderGeom::OdeCappedCylinderGeom(OdeSpace &space, dReal radius, dReal length);

963 10 set_params 0 4 1276 33 OdeCappedCylinderGeom::set_params 0 1 343 0
74
inline void OdeCappedCylinderGeom::set_params(dReal radius, dReal length);

964 10 get_params 0 4 1276 33 OdeCappedCylinderGeom::get_params 0 0 0
82
inline void OdeCappedCylinderGeom::get_params(dReal *radius, dReal *length) const;

965 10 get_radius 0 4 1276 33 OdeCappedCylinderGeom::get_radius 0 1 344 0
59
inline dReal OdeCappedCylinderGeom::get_radius(void) const;

966 10 get_length 0 4 1276 33 OdeCappedCylinderGeom::get_length 0 1 345 0
59
inline dReal OdeCappedCylinderGeom::get_length(void) const;

967 15 get_point_depth 0 4 1276 38 OdeCappedCylinderGeom::get_point_depth 0 2 346 347 0
163
inline dReal OdeCappedCylinderGeom::get_point_depth(dReal x, dReal y, dReal z) const;
inline dReal OdeCappedCylinderGeom::get_point_depth(LPoint3f const &p) const;

968 14 get_class_type 0 4 1276 37 OdeCappedCylinderGeom::get_class_type 0 1 348 0
62
static TypeHandle OdeCappedCylinderGeom::get_class_type(void);

969 14 OdeContactGeom 0 4 1277 30 OdeContactGeom::OdeContactGeom 0 2 349 350 0
97
OdeContactGeom::OdeContactGeom(void);
OdeContactGeom::OdeContactGeom(OdeContactGeom const &copy);

970 7 get_pos 0 4 1277 23 OdeContactGeom::get_pos 0 1 351 0
54
inline LVecBase3f OdeContactGeom::get_pos(void) const;

971 10 get_normal 0 4 1277 26 OdeContactGeom::get_normal 0 1 352 0
57
inline LVecBase3f OdeContactGeom::get_normal(void) const;

972 9 get_depth 0 4 1277 25 OdeContactGeom::get_depth 0 1 353 0
51
inline dReal OdeContactGeom::get_depth(void) const;

973 6 get_g1 0 4 1277 22 OdeContactGeom::get_g1 0 1 354 0
50
inline OdeGeom OdeContactGeom::get_g1(void) const;

974 6 get_g2 0 4 1277 22 OdeContactGeom::get_g2 0 1 355 0
50
inline OdeGeom OdeContactGeom::get_g2(void) const;

975 9 get_side1 0 4 1277 25 OdeContactGeom::get_side1 0 1 356 0
49
inline int OdeContactGeom::get_side1(void) const;

976 9 get_side2 0 4 1277 25 OdeContactGeom::get_side2 0 1 357 0
49
inline int OdeContactGeom::get_side2(void) const;

977 7 set_pos 0 4 1277 23 OdeContactGeom::set_pos 0 1 358 0
59
inline void OdeContactGeom::set_pos(LVecBase3f const &pos);

978 10 set_normal 0 4 1277 26 OdeContactGeom::set_normal 0 1 359 0
65
inline void OdeContactGeom::set_normal(LVecBase3f const &normal);

979 9 set_depth 0 4 1277 25 OdeContactGeom::set_depth 0 1 360 0
57
inline void OdeContactGeom::set_depth(dReal const depth);

980 6 set_g1 0 4 1277 22 OdeContactGeom::set_g1 0 1 361 0
56
inline void OdeContactGeom::set_g1(OdeGeom const &geom);

981 6 set_g2 0 4 1277 22 OdeContactGeom::set_g2 0 1 362 0
56
inline void OdeContactGeom::set_g2(OdeGeom const &geom);

982 14 get_class_type 0 4 1277 30 OdeContactGeom::get_class_type 0 1 363 0
55
static TypeHandle OdeContactGeom::get_class_type(void);

983 9 get_geom1 0 4 1278 28 OdeCollisionEntry::get_geom1 0 1 364 268
////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_geom1
//       Access: Published
//  Description: Returns the first geom in the collision.
////////////////////////////////////////////////////////////////////
56
inline OdeGeom OdeCollisionEntry::get_geom1(void) const;

984 9 get_geom2 0 4 1278 28 OdeCollisionEntry::get_geom2 0 1 365 269
////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_geom2
//       Access: Published
//  Description: Returns the second geom in the collision.
////////////////////////////////////////////////////////////////////
56
inline OdeGeom OdeCollisionEntry::get_geom2(void) const;

985 9 get_body1 0 4 1278 28 OdeCollisionEntry::get_body1 0 1 366 268
////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_body1
//       Access: Published
//  Description: Returns the first body in the collision.
////////////////////////////////////////////////////////////////////
56
inline OdeBody OdeCollisionEntry::get_body1(void) const;

986 9 get_body2 0 4 1278 28 OdeCollisionEntry::get_body2 0 1 367 269
////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_body2
//       Access: Published
//  Description: Returns the second body in the collision.
////////////////////////////////////////////////////////////////////
56
inline OdeBody OdeCollisionEntry::get_body2(void) const;

987 16 get_num_contacts 0 4 1278 35 OdeCollisionEntry::get_num_contacts 0 1 368 283
////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_num_contacts
//       Access: Published
//  Description: Returns the number of contacts in the collision.
////////////////////////////////////////////////////////////////////
62
inline size_t OdeCollisionEntry::get_num_contacts(void) const;

988 17 get_contact_point 0 4 1278 36 OdeCollisionEntry::get_contact_point 0 1 369 378
////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_contact_point
//       Access: Published
//  Description: Returns the nth contact point in the collision.
//               This does exactly the same as
//               get_contact_geom(n).get_pos().
////////////////////////////////////////////////////////////////////
69
inline LPoint3f OdeCollisionEntry::get_contact_point(size_t n) const;

989 16 get_contact_geom 0 4 1278 35 OdeCollisionEntry::get_contact_geom 0 1 370 281
////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_contact_geom
//       Access: Published
//  Description: Returns the nth contact geom in the collision.
////////////////////////////////////////////////////////////////////
74
inline OdeContactGeom OdeCollisionEntry::get_contact_geom(size_t n) const;

990 11 operator [] 0 4 1278 30 OdeCollisionEntry::operator [] 0 1 371 0
69
inline OdeContactGeom OdeCollisionEntry::operator [](size_t n) const;

991 22 operator typecast bool 0 132 1278 41 OdeCollisionEntry::operator typecast bool 0 1 374 0
66
inline bool OdeCollisionEntry::operator typecast bool(void) const;

992 8 is_empty 0 4 1278 27 OdeCollisionEntry::is_empty 0 1 372 271
////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::is_empty
//       Access: Published
//  Description: Returns true if the entry holds no contacts.
////////////////////////////////////////////////////////////////////
52
inline bool OdeCollisionEntry::is_empty(void) const;

993 14 get_class_type 0 4 1278 33 OdeCollisionEntry::get_class_type 0 1 373 0
58
static TypeHandle OdeCollisionEntry::get_class_type(void);

994 20 OdeSurfaceParameters 0 4 1279 42 OdeSurfaceParameters::OdeSurfaceParameters 0 1 375 0
71
OdeSurfaceParameters::OdeSurfaceParameters(int mode = 0, dReal mu = 0);

995 8 set_mode 0 4 1279 30 OdeSurfaceParameters::set_mode 0 1 376 0
53
inline void OdeSurfaceParameters::set_mode(int mode);

996 6 set_mu 0 4 1279 28 OdeSurfaceParameters::set_mu 0 1 377 0
51
inline void OdeSurfaceParameters::set_mu(dReal mu);

997 7 set_mu2 0 4 1279 29 OdeSurfaceParameters::set_mu2 0 1 378 0
53
inline void OdeSurfaceParameters::set_mu2(dReal mu2);

998 10 set_bounce 0 4 1279 32 OdeSurfaceParameters::set_bounce 0 1 379 0
59
inline void OdeSurfaceParameters::set_bounce(dReal bounce);

999 14 set_bounce_vel 0 4 1279 36 OdeSurfaceParameters::set_bounce_vel 0 1 380 0
67
inline void OdeSurfaceParameters::set_bounce_vel(dReal bounce_vel);

1000 12 set_soft_erp 0 4 1279 34 OdeSurfaceParameters::set_soft_erp 0 1 381 0
63
inline void OdeSurfaceParameters::set_soft_erp(dReal soft_erp);

1001 12 set_soft_cfm 0 4 1279 34 OdeSurfaceParameters::set_soft_cfm 0 1 382 0
63
inline void OdeSurfaceParameters::set_soft_cfm(dReal soft_cfm);

1002 11 set_motion1 0 4 1279 33 OdeSurfaceParameters::set_motion1 0 1 383 0
60
inline void OdeSurfaceParameters::set_motion1(dReal motion);

1003 11 set_motion2 0 4 1279 33 OdeSurfaceParameters::set_motion2 0 1 384 0
60
inline void OdeSurfaceParameters::set_motion2(dReal motion);

1004 9 set_slip1 0 4 1279 31 OdeSurfaceParameters::set_slip1 0 1 385 0
56
inline void OdeSurfaceParameters::set_slip1(dReal slip);

1005 9 set_slip2 0 4 1279 31 OdeSurfaceParameters::set_slip2 0 1 386 0
56
inline void OdeSurfaceParameters::set_slip2(dReal slip);

1006 8 get_mode 0 4 1279 30 OdeSurfaceParameters::get_mode 0 1 387 0
54
inline int OdeSurfaceParameters::get_mode(void) const;

1007 6 get_mu 0 4 1279 28 OdeSurfaceParameters::get_mu 0 1 388 0
54
inline dReal OdeSurfaceParameters::get_mu(void) const;

1008 7 get_mu2 0 4 1279 29 OdeSurfaceParameters::get_mu2 0 1 389 0
55
inline dReal OdeSurfaceParameters::get_mu2(void) const;

1009 10 get_bounce 0 4 1279 32 OdeSurfaceParameters::get_bounce 0 1 390 0
58
inline dReal OdeSurfaceParameters::get_bounce(void) const;

1010 14 get_bounce_vel 0 4 1279 36 OdeSurfaceParameters::get_bounce_vel 0 1 391 0
62
inline dReal OdeSurfaceParameters::get_bounce_vel(void) const;

1011 12 get_soft_erp 0 4 1279 34 OdeSurfaceParameters::get_soft_erp 0 1 392 0
60
inline dReal OdeSurfaceParameters::get_soft_erp(void) const;

1012 12 get_soft_cfm 0 4 1279 34 OdeSurfaceParameters::get_soft_cfm 0 1 393 0
60
inline dReal OdeSurfaceParameters::get_soft_cfm(void) const;

1013 11 get_motion1 0 4 1279 33 OdeSurfaceParameters::get_motion1 0 1 394 0
59
inline dReal OdeSurfaceParameters::get_motion1(void) const;

1014 11 get_motion2 0 4 1279 33 OdeSurfaceParameters::get_motion2 0 1 395 0
59
inline dReal OdeSurfaceParameters::get_motion2(void) const;

1015 9 get_slip1 0 4 1279 31 OdeSurfaceParameters::get_slip1 0 1 396 0
57
inline dReal OdeSurfaceParameters::get_slip1(void) const;

1016 9 get_slip2 0 4 1279 31 OdeSurfaceParameters::get_slip2 0 1 397 0
57
inline dReal OdeSurfaceParameters::get_slip2(void) const;

1017 14 get_class_type 0 4 1279 36 OdeSurfaceParameters::get_class_type 0 1 398 0
61
static TypeHandle OdeSurfaceParameters::get_class_type(void);

1018 10 OdeContact 0 4 1281 22 OdeContact::OdeContact 0 2 399 400 38
// OdeContact(const OdeContact &copy);
78
OdeContact::OdeContact(void);
OdeContact::OdeContact(dContact const &contact);

1019 11 get_surface 0 4 1281 23 OdeContact::get_surface 0 1 401 0
64
inline OdeSurfaceParameters OdeContact::get_surface(void) const;

1020 8 get_geom 0 4 1281 20 OdeContact::get_geom 0 1 402 0
49
inline OdeContactGeom OdeContact::get_geom(void);

1021 9 get_fdir1 0 4 1281 21 OdeContact::get_fdir1 0 1 403 0
52
inline LVecBase3f OdeContact::get_fdir1(void) const;

1022 11 set_surface 0 4 1281 23 OdeContact::set_surface 0 1 404 0
84
inline void OdeContact::set_surface(OdeSurfaceParameters const &surface_parameters);

1023 8 set_geom 0 4 1281 20 OdeContact::set_geom 0 1 405 0
69
inline void OdeContact::set_geom(OdeContactGeom const &contact_geom);

1024 9 set_fdir1 0 4 1281 21 OdeContact::set_fdir1 0 1 406 0
59
inline void OdeContact::set_fdir1(LVecBase3f const &fdir1);

1025 14 get_class_type 0 4 1281 26 OdeContact::get_class_type 0 1 407 0
51
static TypeHandle OdeContact::get_class_type(void);

1026 15 OdeContactJoint 0 4 1282 32 OdeContactJoint::OdeContactJoint 0 2 408 409 0
183
OdeContactJoint::OdeContactJoint(OdeWorld &world, OdeContact const &contact);
OdeContactJoint::OdeContactJoint(OdeWorld &world, OdeJointGroup &joint_group, OdeContact const &contact);

1027 14 get_class_type 0 4 1282 31 OdeContactJoint::get_class_type 0 1 410 0
56
static TypeHandle OdeContactJoint::get_class_type(void);

1028 15 OdeCylinderGeom 0 4 1283 32 OdeCylinderGeom::OdeCylinderGeom 0 2 411 412 0
140
OdeCylinderGeom::OdeCylinderGeom(dReal radius, dReal length);
OdeCylinderGeom::OdeCylinderGeom(OdeSpace &space, dReal radius, dReal length);

1029 10 set_params 0 4 1283 27 OdeCylinderGeom::set_params 0 1 413 0
68
inline void OdeCylinderGeom::set_params(dReal radius, dReal length);

1030 10 get_params 0 4 1283 27 OdeCylinderGeom::get_params 0 0 0
76
inline void OdeCylinderGeom::get_params(dReal *radius, dReal *length) const;

1031 10 get_radius 0 4 1283 27 OdeCylinderGeom::get_radius 0 1 414 0
53
inline dReal OdeCylinderGeom::get_radius(void) const;

1032 10 get_length 0 4 1283 27 OdeCylinderGeom::get_length 0 1 415 0
53
inline dReal OdeCylinderGeom::get_length(void) const;

1033 14 get_class_type 0 4 1283 31 OdeCylinderGeom::get_class_type 0 1 416 0
56
static TypeHandle OdeCylinderGeom::get_class_type(void);

1034 13 OdeFixedJoint 0 4 1284 28 OdeFixedJoint::OdeFixedJoint 0 2 417 418 0
121
OdeFixedJoint::OdeFixedJoint(OdeWorld &world);
OdeFixedJoint::OdeFixedJoint(OdeWorld &world, OdeJointGroup &joint_group);

1035 3 set 0 4 1284 18 OdeFixedJoint::set 0 1 419 0
37
inline void OdeFixedJoint::set(void);

1036 14 get_class_type 0 4 1284 29 OdeFixedJoint::get_class_type 0 1 420 0
54
static TypeHandle OdeFixedJoint::get_class_type(void);

1037 12 OdeHashSpace 0 4 1285 26 OdeHashSpace::OdeHashSpace 0 2 421 422 0
78
OdeHashSpace::OdeHashSpace(void);
OdeHashSpace::OdeHashSpace(OdeSpace &space);

1038 10 set_levels 0 4 1285 24 OdeHashSpace::set_levels 0 1 423 0
65
inline void OdeHashSpace::set_levels(int minlevel, int maxlevel);

1039 13 get_min_level 0 4 1285 27 OdeHashSpace::get_min_level 0 1 424 0
51
inline int OdeHashSpace::get_min_level(void) const;

1040 13 get_max_level 0 4 1285 27 OdeHashSpace::get_max_level 0 1 425 0
51
inline int OdeHashSpace::get_max_level(void) const;

1041 14 get_class_type 0 4 1285 28 OdeHashSpace::get_class_type 0 1 426 0
53
static TypeHandle OdeHashSpace::get_class_type(void);

1042 14 OdeHinge2Joint 0 4 1286 30 OdeHinge2Joint::OdeHinge2Joint 0 2 427 428 0
125
OdeHinge2Joint::OdeHinge2Joint(OdeWorld &world, OdeJointGroup &joint_group);
OdeHinge2Joint::OdeHinge2Joint(OdeWorld &world);

1043 10 set_anchor 0 4 1286 26 OdeHinge2Joint::set_anchor 0 2 429 430 0
132
inline void OdeHinge2Joint::set_anchor(dReal x, dReal y, dReal z);
inline void OdeHinge2Joint::set_anchor(LVecBase3f const &anchor);

1044 9 set_axis1 0 4 1286 25 OdeHinge2Joint::set_axis1 0 2 431 432 0
128
inline void OdeHinge2Joint::set_axis1(dReal x, dReal y, dReal z);
inline void OdeHinge2Joint::set_axis1(LVecBase3f const &axis);

1045 9 set_axis2 0 4 1286 25 OdeHinge2Joint::set_axis2 0 2 433 434 0
128
inline void OdeHinge2Joint::set_axis2(dReal x, dReal y, dReal z);
inline void OdeHinge2Joint::set_axis2(LVecBase3f const &axis);

1046 11 add_torques 0 4 1286 27 OdeHinge2Joint::add_torques 0 1 435 0
70
inline void OdeHinge2Joint::add_torques(dReal torque1, dReal torque2);

1047 10 get_anchor 0 4 1286 26 OdeHinge2Joint::get_anchor 0 1 436 0
57
inline LVecBase3f OdeHinge2Joint::get_anchor(void) const;

1048 11 get_anchor2 0 4 1286 27 OdeHinge2Joint::get_anchor2 0 1 437 0
58
inline LVecBase3f OdeHinge2Joint::get_anchor2(void) const;

1049 9 get_axis1 0 4 1286 25 OdeHinge2Joint::get_axis1 0 1 438 0
56
inline LVecBase3f OdeHinge2Joint::get_axis1(void) const;

1050 9 get_axis2 0 4 1286 25 OdeHinge2Joint::get_axis2 0 1 439 0
56
inline LVecBase3f OdeHinge2Joint::get_axis2(void) const;

1051 10 get_angle1 0 4 1286 26 OdeHinge2Joint::get_angle1 0 1 440 0
52
inline dReal OdeHinge2Joint::get_angle1(void) const;

1052 15 get_angle1_rate 0 4 1286 31 OdeHinge2Joint::get_angle1_rate 0 1 441 0
57
inline dReal OdeHinge2Joint::get_angle1_rate(void) const;

1053 15 get_angle2_rate 0 4 1286 31 OdeHinge2Joint::get_angle2_rate 0 1 442 0
57
inline dReal OdeHinge2Joint::get_angle2_rate(void) const;

1054 17 set_param_lo_stop 0 4 1286 33 OdeHinge2Joint::set_param_lo_stop 0 1 443 0
67
inline void OdeHinge2Joint::set_param_lo_stop(int axis, dReal val);

1055 17 set_param_hi_stop 0 4 1286 33 OdeHinge2Joint::set_param_hi_stop 0 1 444 0
67
inline void OdeHinge2Joint::set_param_hi_stop(int axis, dReal val);

1056 13 set_param_vel 0 4 1286 29 OdeHinge2Joint::set_param_vel 0 1 445 0
63
inline void OdeHinge2Joint::set_param_vel(int axis, dReal val);

1057 15 set_param_f_max 0 4 1286 31 OdeHinge2Joint::set_param_f_max 0 1 446 0
65
inline void OdeHinge2Joint::set_param_f_max(int axis, dReal val);

1058 22 set_param_fudge_factor 0 4 1286 38 OdeHinge2Joint::set_param_fudge_factor 0 1 447 0
72
inline void OdeHinge2Joint::set_param_fudge_factor(int axis, dReal val);

1059 16 set_param_bounce 0 4 1286 32 OdeHinge2Joint::set_param_bounce 0 1 448 0
66
inline void OdeHinge2Joint::set_param_bounce(int axis, dReal val);

1060 13 set_param_CFM 0 4 1286 29 OdeHinge2Joint::set_param_CFM 0 1 449 0
63
inline void OdeHinge2Joint::set_param_CFM(int axis, dReal val);

1061 18 set_param_stop_ERP 0 4 1286 34 OdeHinge2Joint::set_param_stop_ERP 0 1 450 0
68
inline void OdeHinge2Joint::set_param_stop_ERP(int axis, dReal val);

1062 18 set_param_stop_CFM 0 4 1286 34 OdeHinge2Joint::set_param_stop_CFM 0 1 451 0
68
inline void OdeHinge2Joint::set_param_stop_CFM(int axis, dReal val);

1063 24 set_param_suspension_ERP 0 4 1286 40 OdeHinge2Joint::set_param_suspension_ERP 0 1 452 0
74
inline void OdeHinge2Joint::set_param_suspension_ERP(int axis, dReal val);

1064 24 set_param_suspension_CFM 0 4 1286 40 OdeHinge2Joint::set_param_suspension_CFM 0 1 453 0
74
inline void OdeHinge2Joint::set_param_suspension_CFM(int axis, dReal val);

1065 17 get_param_lo_stop 0 4 1286 33 OdeHinge2Joint::get_param_lo_stop 0 1 454 0
63
inline dReal OdeHinge2Joint::get_param_lo_stop(int axis) const;

1066 17 get_param_hi_stop 0 4 1286 33 OdeHinge2Joint::get_param_hi_stop 0 1 455 0
63
inline dReal OdeHinge2Joint::get_param_hi_stop(int axis) const;

1067 13 get_param_vel 0 4 1286 29 OdeHinge2Joint::get_param_vel 0 1 456 0
59
inline dReal OdeHinge2Joint::get_param_vel(int axis) const;

1068 15 get_param_f_max 0 4 1286 31 OdeHinge2Joint::get_param_f_max 0 1 457 0
61
inline dReal OdeHinge2Joint::get_param_f_max(int axis) const;

1069 22 get_param_fudge_factor 0 4 1286 38 OdeHinge2Joint::get_param_fudge_factor 0 1 458 0
68
inline dReal OdeHinge2Joint::get_param_fudge_factor(int axis) const;

1070 16 get_param_bounce 0 4 1286 32 OdeHinge2Joint::get_param_bounce 0 1 459 0
62
inline dReal OdeHinge2Joint::get_param_bounce(int axis) const;

1071 13 get_param_CFM 0 4 1286 29 OdeHinge2Joint::get_param_CFM 0 1 460 0
59
inline dReal OdeHinge2Joint::get_param_CFM(int axis) const;

1072 18 get_param_stop_ERP 0 4 1286 34 OdeHinge2Joint::get_param_stop_ERP 0 1 461 0
64
inline dReal OdeHinge2Joint::get_param_stop_ERP(int axis) const;

1073 18 get_param_stop_CFM 0 4 1286 34 OdeHinge2Joint::get_param_stop_CFM 0 1 462 0
64
inline dReal OdeHinge2Joint::get_param_stop_CFM(int axis) const;

1074 24 get_param_suspension_ERP 0 4 1286 40 OdeHinge2Joint::get_param_suspension_ERP 0 1 463 0
70
inline dReal OdeHinge2Joint::get_param_suspension_ERP(int axis) const;

1075 24 get_param_suspension_CFM 0 4 1286 40 OdeHinge2Joint::get_param_suspension_CFM 0 1 464 0
70
inline dReal OdeHinge2Joint::get_param_suspension_CFM(int axis) const;

1076 14 get_class_type 0 4 1286 30 OdeHinge2Joint::get_class_type 0 1 465 0
55
static TypeHandle OdeHinge2Joint::get_class_type(void);

1077 13 OdeHingeJoint 0 4 1287 28 OdeHingeJoint::OdeHingeJoint 0 2 466 467 0
121
OdeHingeJoint::OdeHingeJoint(OdeWorld &world);
OdeHingeJoint::OdeHingeJoint(OdeWorld &world, OdeJointGroup &joint_group);

1078 10 set_anchor 0 4 1287 25 OdeHingeJoint::set_anchor 0 2 468 469 0
130
inline void OdeHingeJoint::set_anchor(dReal x, dReal y, dReal z);
inline void OdeHingeJoint::set_anchor(LVecBase3f const &anchor);

1079 16 set_anchor_delta 0 4 1287 31 OdeHingeJoint::set_anchor_delta 0 2 470 471 0
195
inline void OdeHingeJoint::set_anchor_delta(dReal x, dReal y, dReal z, dReal ax, dReal ay, dReal az);
inline void OdeHingeJoint::set_anchor_delta(LVecBase3f const &anchor, LVecBase3f const &vec);

1080 8 set_axis 0 4 1287 23 OdeHingeJoint::set_axis 0 2 472 473 0
124
inline void OdeHingeJoint::set_axis(dReal x, dReal y, dReal z);
inline void OdeHingeJoint::set_axis(LVecBase3f const &axis);

1081 10 add_torque 0 4 1287 25 OdeHingeJoint::add_torque 0 1 474 0
52
inline void OdeHingeJoint::add_torque(dReal torque);

1082 10 get_anchor 0 4 1287 25 OdeHingeJoint::get_anchor 0 1 475 0
56
inline LVecBase3f OdeHingeJoint::get_anchor(void) const;

1083 11 get_anchor2 0 4 1287 26 OdeHingeJoint::get_anchor2 0 1 476 0
57
inline LVecBase3f OdeHingeJoint::get_anchor2(void) const;

1084 8 get_axis 0 4 1287 23 OdeHingeJoint::get_axis 0 1 477 0
54
inline LVecBase3f OdeHingeJoint::get_axis(void) const;

1085 9 get_angle 0 4 1287 24 OdeHingeJoint::get_angle 0 1 478 0
50
inline dReal OdeHingeJoint::get_angle(void) const;

1086 14 get_angle_rate 0 4 1287 29 OdeHingeJoint::get_angle_rate 0 1 479 0
55
inline dReal OdeHingeJoint::get_angle_rate(void) const;

1087 17 set_param_lo_stop 0 4 1287 32 OdeHingeJoint::set_param_lo_stop 0 1 480 0
56
inline void OdeHingeJoint::set_param_lo_stop(dReal val);

1088 17 set_param_hi_stop 0 4 1287 32 OdeHingeJoint::set_param_hi_stop 0 1 481 0
56
inline void OdeHingeJoint::set_param_hi_stop(dReal val);

1089 13 set_param_vel 0 4 1287 28 OdeHingeJoint::set_param_vel 0 1 482 0
52
inline void OdeHingeJoint::set_param_vel(dReal val);

1090 15 set_param_f_max 0 4 1287 30 OdeHingeJoint::set_param_f_max 0 1 483 0
54
inline void OdeHingeJoint::set_param_f_max(dReal val);

1091 22 set_param_fudge_factor 0 4 1287 37 OdeHingeJoint::set_param_fudge_factor 0 1 484 0
61
inline void OdeHingeJoint::set_param_fudge_factor(dReal val);

1092 16 set_param_bounce 0 4 1287 31 OdeHingeJoint::set_param_bounce 0 1 485 0
55
inline void OdeHingeJoint::set_param_bounce(dReal val);

1093 13 set_param_CFM 0 4 1287 28 OdeHingeJoint::set_param_CFM 0 1 486 0
52
inline void OdeHingeJoint::set_param_CFM(dReal val);

1094 18 set_param_stop_ERP 0 4 1287 33 OdeHingeJoint::set_param_stop_ERP 0 1 487 0
57
inline void OdeHingeJoint::set_param_stop_ERP(dReal val);

1095 18 set_param_stop_CFM 0 4 1287 33 OdeHingeJoint::set_param_stop_CFM 0 1 488 0
57
inline void OdeHingeJoint::set_param_stop_CFM(dReal val);

1096 17 get_param_lo_stop 0 4 1287 32 OdeHingeJoint::get_param_lo_stop 0 1 489 0
58
inline dReal OdeHingeJoint::get_param_lo_stop(void) const;

1097 17 get_param_hi_stop 0 4 1287 32 OdeHingeJoint::get_param_hi_stop 0 1 490 0
58
inline dReal OdeHingeJoint::get_param_hi_stop(void) const;

1098 13 get_param_vel 0 4 1287 28 OdeHingeJoint::get_param_vel 0 1 491 0
54
inline dReal OdeHingeJoint::get_param_vel(void) const;

1099 15 get_param_f_max 0 4 1287 30 OdeHingeJoint::get_param_f_max 0 1 492 0
56
inline dReal OdeHingeJoint::get_param_f_max(void) const;

1100 22 get_param_fudge_factor 0 4 1287 37 OdeHingeJoint::get_param_fudge_factor 0 1 493 0
63
inline dReal OdeHingeJoint::get_param_fudge_factor(void) const;

1101 16 get_param_bounce 0 4 1287 31 OdeHingeJoint::get_param_bounce 0 1 494 0
57
inline dReal OdeHingeJoint::get_param_bounce(void) const;

1102 13 get_param_CFM 0 4 1287 28 OdeHingeJoint::get_param_CFM 0 1 495 0
54
inline dReal OdeHingeJoint::get_param_CFM(void) const;

1103 18 get_param_stop_ERP 0 4 1287 33 OdeHingeJoint::get_param_stop_ERP 0 1 496 0
59
inline dReal OdeHingeJoint::get_param_stop_ERP(void) const;

1104 18 get_param_stop_CFM 0 4 1287 33 OdeHingeJoint::get_param_stop_CFM 0 1 497 0
59
inline dReal OdeHingeJoint::get_param_stop_CFM(void) const;

1105 14 get_class_type 0 4 1287 29 OdeHingeJoint::get_class_type 0 1 498 0
54
static TypeHandle OdeHingeJoint::get_class_type(void);

1106 18 OdeJointCollection 0 4 1288 38 OdeJointCollection::OdeJointCollection 0 2 499 500 0
117
OdeJointCollection::OdeJointCollection(void);
OdeJointCollection::OdeJointCollection(OdeJointCollection const &copy);

1107 10 operator = 0 4 1288 30 OdeJointCollection::operator = 0 1 501 0
68
void OdeJointCollection::operator =(OdeJointCollection const &copy);

1108 19 ~OdeJointCollection 0 4 1288 39 OdeJointCollection::~OdeJointCollection 0 0 229
////////////////////////////////////////////////////////////////////
//     Function: OdeJointCollection::Destructor
//       Access: Published
//  Description:
////////////////////////////////////////////////////////////////////
53
inline OdeJointCollection::~OdeJointCollection(void);

1109 9 add_joint 0 4 1288 29 OdeJointCollection::add_joint 0 1 502 0
58
void OdeJointCollection::add_joint(OdeJoint const &joint);

1110 12 remove_joint 0 4 1288 32 OdeJointCollection::remove_joint 0 1 503 0
61
bool OdeJointCollection::remove_joint(OdeJoint const &joint);

1111 15 add_joints_from 0 4 1288 35 OdeJointCollection::add_joints_from 0 1 504 0
74
void OdeJointCollection::add_joints_from(OdeJointCollection const &other);

1112 18 remove_joints_from 0 4 1288 38 OdeJointCollection::remove_joints_from 0 1 505 0
77
void OdeJointCollection::remove_joints_from(OdeJointCollection const &other);

1113 23 remove_duplicate_joints 0 4 1288 43 OdeJointCollection::remove_duplicate_joints 0 1 506 0
55
void OdeJointCollection::remove_duplicate_joints(void);

1114 9 has_joint 0 4 1288 29 OdeJointCollection::has_joint 0 1 507 0
64
bool OdeJointCollection::has_joint(OdeJoint const &joint) const;

1115 5 clear 0 4 1288 25 OdeJointCollection::clear 0 1 508 0
37
void OdeJointCollection::clear(void);

1116 8 is_empty 0 4 1288 28 OdeJointCollection::is_empty 0 1 509 0
46
bool OdeJointCollection::is_empty(void) const;

1117 14 get_num_joints 0 4 1288 34 OdeJointCollection::get_num_joints 0 1 510 0
51
int OdeJointCollection::get_num_joints(void) const;

1118 9 get_joint 0 4 1288 29 OdeJointCollection::get_joint 0 1 511 0
56
OdeJoint OdeJointCollection::get_joint(int index) const;

1119 11 operator [] 0 4 1288 31 OdeJointCollection::operator [] 0 1 512 0
58
OdeJoint OdeJointCollection::operator [](int index) const;

1120 4 size 0 4 1288 24 OdeJointCollection::size 0 1 513 333
////////////////////////////////////////////////////////////////////
//     Function: OdeJointCollection::size
//       Access: Published
//  Description: Returns the number of joints in the collection.  This
//               is the same thing as get_num_joints().
////////////////////////////////////////////////////////////////////
41
int OdeJointCollection::size(void) const;

1121 11 operator += 0 4 1288 31 OdeJointCollection::operator += 0 1 514 0
77
inline void OdeJointCollection::operator +=(OdeJointCollection const &other);

1122 10 operator + 0 4 1288 30 OdeJointCollection::operator + 0 1 515 0
96
inline OdeJointCollection OdeJointCollection::operator +(OdeJointCollection const &other) const;

1123 14 OdeLMotorJoint 0 4 1289 30 OdeLMotorJoint::OdeLMotorJoint 0 2 516 517 0
125
OdeLMotorJoint::OdeLMotorJoint(OdeWorld &world);
OdeLMotorJoint::OdeLMotorJoint(OdeWorld &world, OdeJointGroup &joint_group);

1124 12 set_num_axes 0 4 1289 28 OdeLMotorJoint::set_num_axes 0 1 518 0
50
inline void OdeLMotorJoint::set_num_axes(int num);

1125 8 set_axis 0 4 1289 24 OdeLMotorJoint::set_axis 0 2 519 520 0
164
inline void OdeLMotorJoint::set_axis(int anum, int rel, dReal x, dReal y, dReal z);
inline void OdeLMotorJoint::set_axis(int anum, int rel, LVecBase3f const &axis);

1126 9 set_param 0 4 1289 25 OdeLMotorJoint::set_param 0 1 521 0
66
inline void OdeLMotorJoint::set_param(int parameter, dReal value);

1127 12 get_num_axes 0 4 1289 28 OdeLMotorJoint::get_num_axes 0 1 522 0
52
inline int OdeLMotorJoint::get_num_axes(void) const;

1128 8 get_axis 0 4 1289 24 OdeLMotorJoint::get_axis 0 1 523 0
59
inline LVecBase3f OdeLMotorJoint::get_axis(int anum) const;

1129 9 get_param 0 4 1289 25 OdeLMotorJoint::get_param 0 1 524 0
60
inline dReal OdeLMotorJoint::get_param(int parameter) const;

1130 14 get_class_type 0 4 1289 30 OdeLMotorJoint::get_class_type 0 1 525 0
55
static TypeHandle OdeLMotorJoint::get_class_type(void);

1131 12 OdeNullJoint 0 4 1290 26 OdeNullJoint::OdeNullJoint 0 2 526 527 0
117
OdeNullJoint::OdeNullJoint(OdeWorld &world);
OdeNullJoint::OdeNullJoint(OdeWorld &world, OdeJointGroup &joint_group);

1132 14 get_class_type 0 4 1290 28 OdeNullJoint::get_class_type 0 1 528 0
53
static TypeHandle OdeNullJoint::get_class_type(void);

1133 15 OdePlane2dJoint 0 4 1291 32 OdePlane2dJoint::OdePlane2dJoint 0 2 529 530 0
129
OdePlane2dJoint::OdePlane2dJoint(OdeWorld &world);
OdePlane2dJoint::OdePlane2dJoint(OdeWorld &world, OdeJointGroup &joint_group);

1134 11 set_x_param 0 4 1291 28 OdePlane2dJoint::set_x_param 0 1 531 0
69
inline void OdePlane2dJoint::set_x_param(int parameter, dReal value);

1135 11 set_y_param 0 4 1291 28 OdePlane2dJoint::set_y_param 0 1 532 0
69
inline void OdePlane2dJoint::set_y_param(int parameter, dReal value);

1136 15 set_angle_param 0 4 1291 32 OdePlane2dJoint::set_angle_param 0 1 533 0
73
inline void OdePlane2dJoint::set_angle_param(int parameter, dReal value);

1137 14 get_class_type 0 4 1291 31 OdePlane2dJoint::get_class_type 0 1 534 0
56
static TypeHandle OdePlane2dJoint::get_class_type(void);

1138 12 OdePlaneGeom 0 4 1292 26 OdePlaneGeom::OdePlaneGeom 0 4 535 536 537 538 0
269
OdePlaneGeom::OdePlaneGeom(dReal a, dReal b, dReal c, dReal d);
OdePlaneGeom::OdePlaneGeom(LVecBase4f const &params);
OdePlaneGeom::OdePlaneGeom(OdeSpace &space, dReal a, dReal b, dReal c, dReal d);
OdePlaneGeom::OdePlaneGeom(OdeSpace &space, LVecBase4f const &params);

1139 10 set_params 0 4 1292 24 OdePlaneGeom::set_params 0 2 539 540 0
137
inline void OdePlaneGeom::set_params(dReal a, dReal b, dReal c, dReal d);
inline void OdePlaneGeom::set_params(LVecBase4f const &params);

1140 10 get_params 0 4 1292 24 OdePlaneGeom::get_params 0 1 541 0
55
inline LVecBase4f OdePlaneGeom::get_params(void) const;

1141 15 get_point_depth 0 4 1292 29 OdePlaneGeom::get_point_depth 0 2 542 543 0
145
inline dReal OdePlaneGeom::get_point_depth(dReal x, dReal y, dReal z) const;
inline dReal OdePlaneGeom::get_point_depth(LPoint3f const &p) const;

1142 14 get_class_type 0 4 1292 28 OdePlaneGeom::get_class_type 0 1 544 0
53
static TypeHandle OdePlaneGeom::get_class_type(void);

1143 16 OdeQuadTreeSpace 0 4 1293 34 OdeQuadTreeSpace::OdeQuadTreeSpace 0 2 545 546 0
224
OdeQuadTreeSpace::OdeQuadTreeSpace(LPoint3f const &center, LVecBase3f const &extents, int const depth);
OdeQuadTreeSpace::OdeQuadTreeSpace(OdeSpace &space, LPoint3f const &center, LVecBase3f const &extents, int const depth);

1144 14 get_class_type 0 4 1293 32 OdeQuadTreeSpace::get_class_type 0 1 547 0
57
static TypeHandle OdeQuadTreeSpace::get_class_type(void);

1145 10 OdeRayGeom 0 4 1294 22 OdeRayGeom::OdeRayGeom 0 2 548 549 0
92
OdeRayGeom::OdeRayGeom(dReal length);
OdeRayGeom::OdeRayGeom(OdeSpace &space, dReal length);

1146 10 set_length 0 4 1294 22 OdeRayGeom::set_length 0 1 550 0
49
inline void OdeRayGeom::set_length(dReal length);

1147 10 get_length 0 4 1294 22 OdeRayGeom::get_length 0 1 551 0
42
inline dReal OdeRayGeom::get_length(void);

1148 3 set 0 4 1294 15 OdeRayGeom::set 0 2 552 553 0
165
inline void OdeRayGeom::set(dReal px, dReal py, dReal pz, dReal dx, dReal dy, dReal dz);
inline void OdeRayGeom::set(LVecBase3f const &start, LVecBase3f const &dir);

1149 3 get 0 4 1294 15 OdeRayGeom::get 0 1 554 0
70
inline void OdeRayGeom::get(LVecBase3f &start, LVecBase3f &dir) const;

1150 9 get_start 0 4 1294 21 OdeRayGeom::get_start 0 1 555 0
52
inline LVecBase3f OdeRayGeom::get_start(void) const;

1151 13 get_direction 0 4 1294 25 OdeRayGeom::get_direction 0 1 556 0
56
inline LVecBase3f OdeRayGeom::get_direction(void) const;

1152 10 set_params 0 4 1294 22 OdeRayGeom::set_params 0 1 557 0
73
inline void OdeRayGeom::set_params(int first_contact, int backface_cull);

1153 10 get_params 0 4 1294 22 OdeRayGeom::get_params 0 0 0
81
inline void OdeRayGeom::get_params(int &first_contact, int &backface_cull) const;

1154 17 get_first_contact 0 4 1294 29 OdeRayGeom::get_first_contact 0 1 558 0
53
inline int OdeRayGeom::get_first_contact(void) const;

1155 17 get_backface_cull 0 4 1294 29 OdeRayGeom::get_backface_cull 0 1 559 0
53
inline int OdeRayGeom::get_backface_cull(void) const;

1156 15 set_closest_hit 0 4 1294 27 OdeRayGeom::set_closest_hit 0 1 560 0
57
inline void OdeRayGeom::set_closest_hit(int closest_hit);

1157 15 get_closest_hit 0 4 1294 27 OdeRayGeom::get_closest_hit 0 1 561 0
45
inline int OdeRayGeom::get_closest_hit(void);

1158 14 get_class_type 0 4 1294 26 OdeRayGeom::get_class_type 0 1 562 0
51
static TypeHandle OdeRayGeom::get_class_type(void);

1159 14 OdeSimpleSpace 0 4 1295 30 OdeSimpleSpace::OdeSimpleSpace 0 2 563 564 0
86
OdeSimpleSpace::OdeSimpleSpace(void);
OdeSimpleSpace::OdeSimpleSpace(OdeSpace &space);

1160 14 get_class_type 0 4 1295 30 OdeSimpleSpace::get_class_type 0 1 565 0
55
static TypeHandle OdeSimpleSpace::get_class_type(void);

1161 14 OdeSliderJoint 0 4 1296 30 OdeSliderJoint::OdeSliderJoint 0 2 566 567 0
125
OdeSliderJoint::OdeSliderJoint(OdeWorld &world);
OdeSliderJoint::OdeSliderJoint(OdeWorld &world, OdeJointGroup &joint_group);

1162 8 set_axis 0 4 1296 24 OdeSliderJoint::set_axis 0 2 568 569 0
126
inline void OdeSliderJoint::set_axis(dReal x, dReal y, dReal z);
inline void OdeSliderJoint::set_axis(LVecBase3f const &axis);

1163 14 set_axis_delta 0 4 1296 30 OdeSliderJoint::set_axis_delta 0 2 570 571 0
191
inline void OdeSliderJoint::set_axis_delta(dReal x, dReal y, dReal z, dReal ax, dReal ay, dReal az);
inline void OdeSliderJoint::set_axis_delta(LVecBase3f const &axis, LVecBase3f const &vec);

1164 9 add_force 0 4 1296 25 OdeSliderJoint::add_force 0 1 572 0
51
inline void OdeSliderJoint::add_force(dReal force);

1165 12 get_position 0 4 1296 28 OdeSliderJoint::get_position 0 1 573 0
54
inline dReal OdeSliderJoint::get_position(void) const;

1166 17 get_position_rate 0 4 1296 33 OdeSliderJoint::get_position_rate 0 1 574 0
59
inline dReal OdeSliderJoint::get_position_rate(void) const;

1167 8 get_axis 0 4 1296 24 OdeSliderJoint::get_axis 0 1 575 0
55
inline LVecBase3f OdeSliderJoint::get_axis(void) const;

1168 17 set_param_lo_stop 0 4 1296 33 OdeSliderJoint::set_param_lo_stop 0 1 576 0
57
inline void OdeSliderJoint::set_param_lo_stop(dReal val);

1169 17 set_param_hi_stop 0 4 1296 33 OdeSliderJoint::set_param_hi_stop 0 1 577 0
57
inline void OdeSliderJoint::set_param_hi_stop(dReal val);

1170 13 set_param_vel 0 4 1296 29 OdeSliderJoint::set_param_vel 0 1 578 0
53
inline void OdeSliderJoint::set_param_vel(dReal val);

1171 15 set_param_f_max 0 4 1296 31 OdeSliderJoint::set_param_f_max 0 1 579 0
55
inline void OdeSliderJoint::set_param_f_max(dReal val);

1172 22 set_param_fudge_factor 0 4 1296 38 OdeSliderJoint::set_param_fudge_factor 0 1 580 0
62
inline void OdeSliderJoint::set_param_fudge_factor(dReal val);

1173 16 set_param_bounce 0 4 1296 32 OdeSliderJoint::set_param_bounce 0 1 581 0
56
inline void OdeSliderJoint::set_param_bounce(dReal val);

1174 13 set_param_CFM 0 4 1296 29 OdeSliderJoint::set_param_CFM 0 1 582 0
53
inline void OdeSliderJoint::set_param_CFM(dReal val);

1175 18 set_param_stop_ERP 0 4 1296 34 OdeSliderJoint::set_param_stop_ERP 0 1 583 0
58
inline void OdeSliderJoint::set_param_stop_ERP(dReal val);

1176 18 set_param_stop_CFM 0 4 1296 34 OdeSliderJoint::set_param_stop_CFM 0 1 584 0
58
inline void OdeSliderJoint::set_param_stop_CFM(dReal val);

1177 17 get_param_lo_stop 0 4 1296 33 OdeSliderJoint::get_param_lo_stop 0 1 585 0
59
inline dReal OdeSliderJoint::get_param_lo_stop(void) const;

1178 17 get_param_hi_stop 0 4 1296 33 OdeSliderJoint::get_param_hi_stop 0 1 586 0
59
inline dReal OdeSliderJoint::get_param_hi_stop(void) const;

1179 13 get_param_vel 0 4 1296 29 OdeSliderJoint::get_param_vel 0 1 587 0
55
inline dReal OdeSliderJoint::get_param_vel(void) const;

1180 15 get_param_f_max 0 4 1296 31 OdeSliderJoint::get_param_f_max 0 1 588 0
57
inline dReal OdeSliderJoint::get_param_f_max(void) const;

1181 22 get_param_fudge_factor 0 4 1296 38 OdeSliderJoint::get_param_fudge_factor 0 1 589 0
64
inline dReal OdeSliderJoint::get_param_fudge_factor(void) const;

1182 16 get_param_bounce 0 4 1296 32 OdeSliderJoint::get_param_bounce 0 1 590 0
58
inline dReal OdeSliderJoint::get_param_bounce(void) const;

1183 13 get_param_CFM 0 4 1296 29 OdeSliderJoint::get_param_CFM 0 1 591 0
55
inline dReal OdeSliderJoint::get_param_CFM(void) const;

1184 18 get_param_stop_ERP 0 4 1296 34 OdeSliderJoint::get_param_stop_ERP 0 1 592 0
60
inline dReal OdeSliderJoint::get_param_stop_ERP(void) const;

1185 18 get_param_stop_CFM 0 4 1296 34 OdeSliderJoint::get_param_stop_CFM 0 1 593 0
60
inline dReal OdeSliderJoint::get_param_stop_CFM(void) const;

1186 14 get_class_type 0 4 1296 30 OdeSliderJoint::get_class_type 0 1 594 0
55
static TypeHandle OdeSliderJoint::get_class_type(void);

1187 13 OdeSphereGeom 0 4 1297 28 OdeSphereGeom::OdeSphereGeom 0 3 595 596 597 0
149
OdeSphereGeom::OdeSphereGeom(dReal radius);
OdeSphereGeom::OdeSphereGeom(OdeSpace &space, dReal radius);
OdeSphereGeom::OdeSphereGeom(OdeGeom &geom);

1188 10 set_radius 0 4 1297 25 OdeSphereGeom::set_radius 0 1 598 0
52
inline void OdeSphereGeom::set_radius(dReal radius);

1189 10 get_radius 0 4 1297 25 OdeSphereGeom::get_radius 0 1 599 0
51
inline dReal OdeSphereGeom::get_radius(void) const;

1190 15 get_point_depth 0 4 1297 30 OdeSphereGeom::get_point_depth 0 2 600 601 0
147
inline dReal OdeSphereGeom::get_point_depth(dReal x, dReal y, dReal z) const;
inline dReal OdeSphereGeom::get_point_depth(LPoint3f const &p) const;

1191 14 get_class_type 0 4 1297 29 OdeSphereGeom::get_class_type 0 1 602 0
54
static TypeHandle OdeSphereGeom::get_class_type(void);

1192 14 OdeTriMeshData 0 4 1298 30 OdeTriMeshData::OdeTriMeshData 0 1 603 63
// Private copy constructor, shouldn't be copying these objects
76
OdeTriMeshData::OdeTriMeshData(NodePath const &model, bool use_normals = 0);

1193 7 destroy 0 4 1298 23 OdeTriMeshData::destroy 0 1 604 0
35
void OdeTriMeshData::destroy(void);

1194 5 write 0 6 1298 21 OdeTriMeshData::write 0 1 605 0
89
virtual void OdeTriMeshData::write(ostream &out = ::cout, unsigned int indent = 0) const;

1195 11 write_faces 0 4 1298 27 OdeTriMeshData::write_faces 0 1 606 0
53
void OdeTriMeshData::write_faces(ostream &out) const;

1196 14 get_class_type 0 4 1298 30 OdeTriMeshData::get_class_type 0 1 607 0
55
static TypeHandle OdeTriMeshData::get_class_type(void);

1197 14 OdeTriMeshGeom 0 4 1300 30 OdeTriMeshGeom::OdeTriMeshGeom 0 3 608 609 610 162
/* ODE_API dGeomID dCreateTriMesh(dSpaceID space, dTriMeshDataID Data, dTriCallback* Callback, dTriArrayCallback* ArrayCallback, dTriRayCallback* RayCallback); */
184
OdeTriMeshGeom::OdeTriMeshGeom(OdeTriMeshData &data);
OdeTriMeshGeom::OdeTriMeshGeom(OdeSpace &space, OdeTriMeshData &data);
OdeTriMeshGeom::OdeTriMeshGeom(OdeTriMeshGeom const &copy);

1198 7 destroy 0 4 1300 23 OdeTriMeshGeom::destroy 0 1 611 0
35
void OdeTriMeshGeom::destroy(void);

1199 17 set_tri_mesh_data 0 4 1300 33 OdeTriMeshGeom::set_tri_mesh_data 0 1 612 0
68
inline void OdeTriMeshGeom::set_tri_mesh_data(OdeTriMeshData &data);

1200 17 get_tri_mesh_data 0 4 1300 33 OdeTriMeshGeom::get_tri_mesh_data 0 1 613 0
81
inline PointerTo< OdeTriMeshData > OdeTriMeshGeom::get_tri_mesh_data(void) const;

1201 8 set_data 0 4 1300 24 OdeTriMeshGeom::set_data 0 1 614 0
59
inline void OdeTriMeshGeom::set_data(OdeTriMeshData &data);

1202 8 get_data 0 4 1300 24 OdeTriMeshGeom::get_data 0 1 615 0
72
inline PointerTo< OdeTriMeshData > OdeTriMeshGeom::get_data(void) const;

1203 9 enable_TC 0 4 1300 25 OdeTriMeshGeom::enable_TC 0 1 616 0
66
inline void OdeTriMeshGeom::enable_TC(int geom_class, int enable);

1204 13 is_TC_enabled 0 4 1300 29 OdeTriMeshGeom::is_TC_enabled 0 1 617 0
63
inline int OdeTriMeshGeom::is_TC_enabled(int geom_class) const;

1205 14 clear_TC_cache 0 4 1300 30 OdeTriMeshGeom::clear_TC_cache 0 1 618 0
64
inline void OdeTriMeshGeom::clear_TC_cache(OdeGeom const &geom);

1206 12 get_triangle 0 4 1300 28 OdeTriMeshGeom::get_triangle 0 1 619 0
105
inline void OdeTriMeshGeom::get_triangle(int face_index, LPoint3f &v0, LPoint3f &v1, LPoint3f &v2) const;

1207 9 get_point 0 4 1300 25 OdeTriMeshGeom::get_point 0 1 620 0
82
inline LPoint3f OdeTriMeshGeom::get_point(int face_index, dReal u, dReal v) const;

1208 17 get_num_triangles 0 4 1300 33 OdeTriMeshGeom::get_num_triangles 0 1 621 0
57
inline int OdeTriMeshGeom::get_num_triangles(void) const;

1209 14 get_class_type 0 4 1300 30 OdeTriMeshGeom::get_class_type 0 1 622 0
55
static TypeHandle OdeTriMeshGeom::get_class_type(void);

1210 17 OdeUniversalJoint 0 4 1301 36 OdeUniversalJoint::OdeUniversalJoint 0 2 623 624 0
137
OdeUniversalJoint::OdeUniversalJoint(OdeWorld &world);
OdeUniversalJoint::OdeUniversalJoint(OdeWorld &world, OdeJointGroup &joint_group);

1211 10 set_anchor 0 4 1301 29 OdeUniversalJoint::set_anchor 0 2 625 626 0
138
inline void OdeUniversalJoint::set_anchor(dReal x, dReal y, dReal z);
inline void OdeUniversalJoint::set_anchor(LVecBase3f const &anchor);

1212 9 set_axis1 0 4 1301 28 OdeUniversalJoint::set_axis1 0 2 627 628 0
134
inline void OdeUniversalJoint::set_axis1(dReal x, dReal y, dReal z);
inline void OdeUniversalJoint::set_axis1(LVecBase3f const &axis);

1213 9 set_axis2 0 4 1301 28 OdeUniversalJoint::set_axis2 0 2 629 630 0
134
inline void OdeUniversalJoint::set_axis2(dReal x, dReal y, dReal z);
inline void OdeUniversalJoint::set_axis2(LVecBase3f const &axis);

1214 11 add_torques 0 4 1301 30 OdeUniversalJoint::add_torques 0 1 631 0
73
inline void OdeUniversalJoint::add_torques(dReal torque1, dReal torque2);

1215 10 get_anchor 0 4 1301 29 OdeUniversalJoint::get_anchor 0 1 632 0
60
inline LVecBase3f OdeUniversalJoint::get_anchor(void) const;

1216 11 get_anchor2 0 4 1301 30 OdeUniversalJoint::get_anchor2 0 1 633 0
61
inline LVecBase3f OdeUniversalJoint::get_anchor2(void) const;

1217 9 get_axis1 0 4 1301 28 OdeUniversalJoint::get_axis1 0 1 634 0
59
inline LVecBase3f OdeUniversalJoint::get_axis1(void) const;

1218 9 get_axis2 0 4 1301 28 OdeUniversalJoint::get_axis2 0 1 635 0
59
inline LVecBase3f OdeUniversalJoint::get_axis2(void) const;

1219 10 get_angle1 0 4 1301 29 OdeUniversalJoint::get_angle1 0 1 636 0
55
inline dReal OdeUniversalJoint::get_angle1(void) const;

1220 10 get_angle2 0 4 1301 29 OdeUniversalJoint::get_angle2 0 1 637 0
55
inline dReal OdeUniversalJoint::get_angle2(void) const;

1221 15 get_angle1_rate 0 4 1301 34 OdeUniversalJoint::get_angle1_rate 0 1 638 0
60
inline dReal OdeUniversalJoint::get_angle1_rate(void) const;

1222 15 get_angle2_rate 0 4 1301 34 OdeUniversalJoint::get_angle2_rate 0 1 639 0
60
inline dReal OdeUniversalJoint::get_angle2_rate(void) const;

1223 17 set_param_lo_stop 0 4 1301 36 OdeUniversalJoint::set_param_lo_stop 0 1 640 0
70
inline void OdeUniversalJoint::set_param_lo_stop(int axis, dReal val);

1224 17 set_param_hi_stop 0 4 1301 36 OdeUniversalJoint::set_param_hi_stop 0 1 641 0
70
inline void OdeUniversalJoint::set_param_hi_stop(int axis, dReal val);

1225 13 set_param_vel 0 4 1301 32 OdeUniversalJoint::set_param_vel 0 1 642 0
66
inline void OdeUniversalJoint::set_param_vel(int axis, dReal val);

1226 15 set_param_f_max 0 4 1301 34 OdeUniversalJoint::set_param_f_max 0 1 643 0
68
inline void OdeUniversalJoint::set_param_f_max(int axis, dReal val);

1227 22 set_param_fudge_factor 0 4 1301 41 OdeUniversalJoint::set_param_fudge_factor 0 1 644 0
75
inline void OdeUniversalJoint::set_param_fudge_factor(int axis, dReal val);

1228 16 set_param_bounce 0 4 1301 35 OdeUniversalJoint::set_param_bounce 0 1 645 0
69
inline void OdeUniversalJoint::set_param_bounce(int axis, dReal val);

1229 13 set_param_CFM 0 4 1301 32 OdeUniversalJoint::set_param_CFM 0 1 646 0
66
inline void OdeUniversalJoint::set_param_CFM(int axis, dReal val);

1230 18 set_param_stop_ERP 0 4 1301 37 OdeUniversalJoint::set_param_stop_ERP 0 1 647 0
71
inline void OdeUniversalJoint::set_param_stop_ERP(int axis, dReal val);

1231 18 set_param_stop_CFM 0 4 1301 37 OdeUniversalJoint::set_param_stop_CFM 0 1 648 0
71
inline void OdeUniversalJoint::set_param_stop_CFM(int axis, dReal val);

1232 17 get_param_lo_stop 0 4 1301 36 OdeUniversalJoint::get_param_lo_stop 0 1 649 0
66
inline dReal OdeUniversalJoint::get_param_lo_stop(int axis) const;

1233 17 get_param_hi_stop 0 4 1301 36 OdeUniversalJoint::get_param_hi_stop 0 1 650 0
66
inline dReal OdeUniversalJoint::get_param_hi_stop(int axis) const;

1234 13 get_param_vel 0 4 1301 32 OdeUniversalJoint::get_param_vel 0 1 651 0
62
inline dReal OdeUniversalJoint::get_param_vel(int axis) const;

1235 15 get_param_f_max 0 4 1301 34 OdeUniversalJoint::get_param_f_max 0 1 652 0
64
inline dReal OdeUniversalJoint::get_param_f_max(int axis) const;

1236 22 get_param_fudge_factor 0 4 1301 41 OdeUniversalJoint::get_param_fudge_factor 0 1 653 0
71
inline dReal OdeUniversalJoint::get_param_fudge_factor(int axis) const;

1237 16 get_param_bounce 0 4 1301 35 OdeUniversalJoint::get_param_bounce 0 1 654 0
65
inline dReal OdeUniversalJoint::get_param_bounce(int axis) const;

1238 13 get_param_CFM 0 4 1301 32 OdeUniversalJoint::get_param_CFM 0 1 655 0
62
inline dReal OdeUniversalJoint::get_param_CFM(int axis) const;

1239 18 get_param_stop_ERP 0 4 1301 37 OdeUniversalJoint::get_param_stop_ERP 0 1 656 0
67
inline dReal OdeUniversalJoint::get_param_stop_ERP(int axis) const;

1240 18 get_param_stop_CFM 0 4 1301 37 OdeUniversalJoint::get_param_stop_CFM 0 1 657 0
67
inline dReal OdeUniversalJoint::get_param_stop_CFM(int axis) const;

1241 14 get_class_type 0 4 1301 33 OdeUniversalJoint::get_class_type 0 1 658 0
58
static TypeHandle OdeUniversalJoint::get_class_type(void);

1242 20 get_connecting_joint 0 4 1302 29 OdeUtil::get_connecting_joint 0 1 659 283
////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::get_connecting_joint
//       Access: Public, Static
//  Description: Returns the joint that connects the given bodies.
////////////////////////////////////////////////////////////////////
90
static OdeJoint OdeUtil::get_connecting_joint(OdeBody const &body1, OdeBody const &body2);

1243 25 get_connecting_joint_list 0 4 1302 34 OdeUtil::get_connecting_joint_list 0 1 660 319
////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::get_connecting_joint_list
//       Access: Public, Static
//  Description: Returns a collection of joints connecting the
//               specified bodies.
////////////////////////////////////////////////////////////////////
105
static OdeJointCollection OdeUtil::get_connecting_joint_list(OdeBody const &body1, OdeBody const &body2);

1244 13 are_connected 0 4 1302 22 OdeUtil::are_connected 0 1 661 320
////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::are_connected
//       Access: Public, Static
//  Description: Returns 1 if the given bodies are connected
//               by a joint, returns 0 otherwise.
////////////////////////////////////////////////////////////////////
78
static int OdeUtil::are_connected(OdeBody const &body1, OdeBody const &body2);

1245 23 are_connected_excluding 0 4 1302 32 OdeUtil::are_connected_excluding 0 1 662 733
////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::are_connected_excluding
//       Access: Public, Static
//  Description: Returns 1 if the given bodies are connected
//               by a joint that does not match the given
//               joint_type, returns 0 otherwise. This is useful
//               for deciding whether to add contact joints between
//               two bodies: if they are already connected by
//               non-contact joints then it may not be appropriate
//               to add contacts, however it is okay to add more
//               contact between bodies that already have contacts.
////////////////////////////////////////////////////////////////////
110
static int OdeUtil::are_connected_excluding(OdeBody const &body1, OdeBody const &body2, int const joint_type);

1246 7 collide 0 4 1302 16 OdeUtil::collide 0 1 663 392
////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::collide
//       Access: Public, Static
//  Description: Given two geometry objects that potentially touch
//               (geom1 and geom2), generate contact information
//               for them. Returns an OdeCollisionEntry.
////////////////////////////////////////////////////////////////////
135
static PointerTo< OdeCollisionEntry > OdeUtil::collide(OdeGeom const &geom1, OdeGeom const &geom2, short int const max_contacts = 150);

1247 8 collide2 0 4 1302 17 OdeUtil::collide2 0 1 664 0
108
static int OdeUtil::collide2(OdeGeom const &geom1, OdeGeom const &geom2, PyObject *arg, PyObject *callback);

1248 13 space_to_geom 0 4 1302 22 OdeUtil::space_to_geom 0 1 665 0
61
static OdeGeom OdeUtil::space_to_geom(OdeSpace const &space);

1249 12 get_infinity 0 4 1302 21 OdeUtil::get_infinity 0 1 666 73
// RAU we can't access OC_infinity as constants are not exposed in python
41
static dReal OdeUtil::get_infinity(void);

1250 13 rand_get_seed 0 4 1302 22 OdeUtil::rand_get_seed 0 1 667 0
40
static int OdeUtil::rand_get_seed(void);

1251 13 rand_set_seed 0 4 1302 22 OdeUtil::rand_set_seed 0 1 668 0
42
static void OdeUtil::rand_set_seed(int s);

1252 8 ~OdeUtil 0 4 1302 17 OdeUtil::~OdeUtil 0 0 0
24
OdeUtil::~OdeUtil(void);

668
1 0 0 7 10 1303 0 0 0 0 
2 0 0 7 10 1303 0 0 0 1 4 copy 1 1304  
3 0 0 4 11 1306 0 0 0 1 4 this 3 1303  
4 0 0 6 12 1307 0 0 455 ////////////////////////////////////////////////////////////////////
//     Function: OdeWorld::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeWorld
//               does not point to a valid world. It is an error to
//               call a method on an empty world.
//               Note that an empty OdeWorld also evaluates to False.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1304  
5 0 0 6 13 1308 0 0 248 ////////////////////////////////////////////////////////////////////
//     Function: OdeWorld::get_id
//       Access: Published
//  Description: Returns the underlying dWorldID.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1304  
6 0 0 4 14 1306 0 0 0 2 4 this 3 1303  3 vec 1 1310  
7 0 0 4 14 1306 0 0 0 4 4 this 3 1303  1 x 1 1313  1 y 1 1313  1 z 1 1313  
8 0 0 4 15 1306 0 0 0 2 4 this 3 1303  3 erp 1 1313  
9 0 0 4 16 1306 0 0 0 2 4 this 3 1303  3 cfm 1 1313  
10 0 0 4 17 1306 0 0 0 2 4 this 3 1303  3 num 1 1315  
11 0 0 4 18 1306 0 0 0 2 4 this 3 1303  15 over_relaxation 1 1313  
12 0 0 4 19 1306 0 0 0 2 4 this 3 1303  3 vel 1 1313  
13 0 0 4 20 1306 0 0 0 2 4 this 3 1303  5 depth 1 1313  
14 0 0 4 21 1306 0 0 0 2 4 this 3 1303  16 linear_threshold 1 1313  
15 0 0 4 22 1306 0 0 0 2 4 this 3 1303  17 angular_threshold 1 1313  
16 0 0 4 23 1306 0 0 0 2 4 this 3 1303  5 steps 1 1315  
17 0 0 4 24 1306 0 0 0 2 4 this 3 1303  4 time 1 1313  
18 0 0 4 25 1306 0 0 0 2 4 this 3 1303  15 do_auto_disable 1 1315  
19 0 0 7 26 1316 0 0 0 1 4 this 3 1304  
20 0 0 6 27 1313 0 0 0 1 4 this 3 1304  
21 0 0 6 28 1313 0 0 0 1 4 this 3 1304  
22 0 0 6 29 1315 0 0 0 1 4 this 3 1304  
23 0 0 6 30 1313 0 0 0 1 4 this 3 1304  
24 0 0 6 31 1313 0 0 0 1 4 this 3 1304  
25 0 0 6 32 1313 0 0 0 1 4 this 3 1304  
26 0 0 6 33 1313 0 0 0 1 4 this 3 1304  
27 0 0 6 34 1313 0 0 0 1 4 this 3 1304  
28 0 0 6 35 1315 0 0 0 1 4 this 3 1304  
29 0 0 6 36 1313 0 0 0 1 4 this 3 1304  
30 0 0 6 37 1315 0 0 0 1 4 this 3 1304  
31 0 0 7 38 1316 0 0 0 3 4 this 3 1303  8 stepsize 1 1313  7 impulse 1 1310  
32 0 0 7 38 1316 0 0 0 5 4 this 3 1303  8 stepsize 1 1313  2 ix 1 1313  2 iy 1 1313  2 iz 1 1313  
33 0 0 4 39 1306 0 0 0 2 4 this 3 1303  8 stepsize 1 1313  
34 0 0 4 40 1306 0 0 0 2 4 this 3 1303  8 stepsize 1 1313  
35 0 0 6 41 1315 0 0 0 2 4 this 3 1304  5 other 1 1304  
36 0 0 4 42 1306 0 0 0 2 4 this 3 1303  12 num_surfaces 1 1317  
37 0 0 4 43 1306 0 0 55 //void assign_surface_body(OdeBody& body, int surface); 3 4 this 3 1303  4 body 1 1319  7 surface 1 1315  
38 0 0 4 44 1306 0 0 0 10 4 this 3 1303  4 pos1 1 1317  4 pos2 1 1317  2 mu 1 1313  6 bounce 1 1313  10 bounce_vel 1 1313  8 soft_erp 1 1313  8 soft_cfm 1 1313  4 slip 1 1313  6 dampen 1 1313  
39 0 0 6 45 1314 0 0 0 3 4 this 3 1303  2 dt 1 1314  4 body 1 1319  
40 0 0 7 47 1321 0 0 0 0 
41 0 0 6 46 1307 0 0 0 1 4 this 3 1304  
42 0 0 7 49 1322 0 0 0 0 
43 0 0 4 50 1306 0 0 0 1 4 this 3 1322  
44 0 0 6 51 1325 0 0 0 1 4 this 3 1323  
45 0 0 4 52 1306 0 0 0 1 4 this 3 1323  
46 0 0 6 53 1315 0 0 0 2 4 this 3 1323  5 other 1 1323  
47 0 0 7 54 1321 0 0 0 0 
48 0 0 7 57 1331 0 0 0 1 4 this 3 1329  
49 0 0 7 58 1331 0 0 0 1 4 this 3 1329  
50 0 0 7 59 1331 0 0 0 1 4 this 3 1329  
51 0 0 7 60 1331 0 0 0 1 4 this 3 1329  
52 0 0 4 64 1306 0 0 0 1 4 this 3 1332  
53 0 0 6 65 1307 0 0 455 ////////////////////////////////////////////////////////////////////
//     Function: OdeJoint::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeJoint
//               does not point to a valid joint. It is an error to
//               call a method on an empty joint.
//               Note that an empty OdeJoint also evaluates to False.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1333  
54 0 0 6 66 1335 0 0 248 ////////////////////////////////////////////////////////////////////
//     Function: OdeJoint::get_id
//       Access: Published
//  Description: Returns the underlying dJointID.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1333  
55 0 0 6 67 1315 0 0 30 /* INLINE void *get_data(); */ 1 4 this 3 1333  
56 0 0 7 68 1319 0 0 0 2 4 this 3 1333  5 index 1 1315  
57 0 0 4 69 1306 0 0 0 2 4 this 3 1332  6 param0 0 1337  
58 0 0 4 69 1306 0 0 0 2 4 this 3 1332  4 flag 1 1307  
59 0 0 6 70 1337 0 0 0 1 4 this 3 1332  
60 0 0 4 71 1306 0 0 0 3 4 this 3 1332  5 body1 1 1338  5 body2 1 1338  
61 0 0 4 72 1306 0 0 430 ////////////////////////////////////////////////////////////////////
//     Function: OdeJoint::attach_bodies
//       Access: Published
//  Description: Attaches two OdeBody objects to this joint.
//               Order is important.
//               Consider using the OdeJoint::attach extension
//               function if you're using the Python interface.
//////////////////////////////////////////////////////////////////// 3 4 this 3 1332  5 body1 1 1338  5 body2 1 1338  
62 0 0 4 73 1306 0 0 511 ////////////////////////////////////////////////////////////////////
//     Function: OdeJoint::attach_body
//       Access: Published
//  Description: Attaches a single OdeBody to this joint at the
//               specified index (0 or 1).  The other index will be 
//               set to the environment (null).
//               Consider using the OdeJoint::attach extension
//               function if you're using the Python interface.
//////////////////////////////////////////////////////////////////// 3 4 this 3 1332  4 body 1 1338  5 index 1 1315  
63 0 0 4 74 1306 0 0 0 1 4 this 3 1332  
64 0 0 4 75 1306 0 0 0 3 4 this 3 1333  3 out 1 1340  6 indent 1 1342  
65 0 0 6 76 1315 0 0 0 2 4 this 3 1333  5 other 1 1333  
66 0 0 6 77 1307 0 0 0 2 4 this 3 1333  5 other 1 1333  
67 0 0 6 79 1343 0 0 0 1 4 this 3 1333  
68 0 0 7 80 1346 0 0 0 1 4 this 3 1333  
69 0 0 7 81 1347 0 0 0 1 4 this 3 1333  
70 0 0 7 82 1348 0 0 0 1 4 this 3 1333  
71 0 0 7 83 1349 0 0 0 1 4 this 3 1333  
72 0 0 7 84 1350 0 0 0 1 4 this 3 1333  
73 0 0 7 85 1351 0 0 0 1 4 this 3 1333  
74 0 0 7 86 1352 0 0 0 1 4 this 3 1333  
75 0 0 7 87 1353 0 0 0 1 4 this 3 1333  
76 0 0 7 88 1354 0 0 0 1 4 this 3 1333  
77 0 0 7 89 1355 0 0 0 1 4 this 3 1333  
78 0 0 7 90 1356 0 0 0 1 4 this 3 1333  
79 0 0 7 91 1321 0 0 0 0 
80 0 0 6 78 1307 0 0 0 1 4 this 3 1333  
81 0 0 7 93 1354 0 0 0 1 5 world 1 1303  
82 0 0 7 93 1354 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
83 0 0 4 94 1306 0 0 0 2 4 this 3 1354  3 num 1 1315  
84 0 0 4 95 1306 0 0 0 4 4 this 3 1354  4 anum 1 1315  3 rel 1 1315  4 axis 1 1310  
85 0 0 4 95 1306 0 0 0 6 4 this 3 1354  4 anum 1 1315  3 rel 1 1315  1 x 1 1313  1 y 1 1313  1 z 1 1313  
86 0 0 4 96 1306 0 0 0 3 4 this 3 1354  4 anum 1 1315  5 angle 1 1313  
87 0 0 4 97 1306 0 0 0 2 4 this 3 1354  4 mode 1 1315  
88 0 0 4 98 1306 0 0 0 4 4 this 3 1354  7 torque1 1 1313  7 torque2 1 1313  7 torque3 1 1313  
89 0 0 6 99 1315 0 0 0 1 4 this 3 1357  
90 0 0 7 100 1316 0 0 0 2 4 this 3 1357  4 anum 1 1315  
91 0 0 6 101 1315 0 0 0 2 4 this 3 1357  4 anum 1 1315  
92 0 0 6 102 1313 0 0 0 2 4 this 3 1357  4 anum 1 1315  
93 0 0 6 103 1313 0 0 0 2 4 this 3 1357  4 anum 1 1315  
94 0 0 6 104 1315 0 0 0 1 4 this 3 1357  
95 0 0 4 105 1306 0 0 0 3 4 this 3 1354  4 axis 1 1315  3 val 1 1313  
96 0 0 4 106 1306 0 0 0 3 4 this 3 1354  4 axis 1 1315  3 val 1 1313  
97 0 0 4 107 1306 0 0 0 3 4 this 3 1354  4 axis 1 1315  3 val 1 1313  
98 0 0 4 108 1306 0 0 0 3 4 this 3 1354  4 axis 1 1315  3 val 1 1313  
99 0 0 4 109 1306 0 0 0 3 4 this 3 1354  4 axis 1 1315  3 val 1 1313  
100 0 0 4 110 1306 0 0 0 3 4 this 3 1354  4 axis 1 1315  3 val 1 1313  
101 0 0 4 111 1306 0 0 0 3 4 this 3 1354  4 axis 1 1315  3 val 1 1313  
102 0 0 4 112 1306 0 0 0 3 4 this 3 1354  4 axis 1 1315  3 val 1 1313  
103 0 0 4 113 1306 0 0 0 3 4 this 3 1354  4 axis 1 1315  3 val 1 1313  
104 0 0 6 114 1313 0 0 0 2 4 this 3 1357  4 axis 1 1315  
105 0 0 6 115 1313 0 0 0 2 4 this 3 1357  4 axis 1 1315  
106 0 0 6 116 1313 0 0 0 2 4 this 3 1357  4 axis 1 1315  
107 0 0 6 117 1313 0 0 0 2 4 this 3 1357  4 axis 1 1315  
108 0 0 6 118 1313 0 0 0 2 4 this 3 1357  4 axis 1 1315  
109 0 0 6 119 1313 0 0 0 2 4 this 3 1357  4 axis 1 1315  
110 0 0 6 120 1313 0 0 0 2 4 this 3 1357  4 axis 1 1315  
111 0 0 6 121 1313 0 0 0 2 4 this 3 1357  4 axis 1 1315  
112 0 0 6 122 1313 0 0 0 2 4 this 3 1357  4 axis 1 1315  
113 0 0 7 123 1321 0 0 0 0 
114 0 0 7 125 1346 0 0 0 1 5 world 1 1303  
115 0 0 7 125 1346 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
116 0 0 4 126 1306 0 0 0 2 4 this 3 1346  6 anchor 1 1310  
117 0 0 4 126 1306 0 0 0 4 4 this 3 1346  1 x 1 1313  1 y 1 1313  1 z 1 1313  
118 0 0 4 127 1306 0 0 0 2 4 this 3 1346  6 anchor 1 1310  
119 0 0 4 127 1306 0 0 0 4 4 this 3 1346  1 x 1 1313  1 y 1 1313  1 z 1 1313  
120 0 0 7 128 1316 0 0 0 1 4 this 3 1359  
121 0 0 7 129 1316 0 0 0 1 4 this 3 1359  
122 0 0 7 130 1321 0 0 0 0 
123 0 0 7 133 1361 0 0 0 0 
124 0 0 7 133 1361 0 0 0 1 4 copy 1 1362  
125 0 0 6 134 1315 0 0 0 1 4 this 3 1361  
126 0 0 4 135 1306 0 0 0 1 4 this 3 1361  
127 0 0 4 136 1306 0 0 0 4 4 this 3 1361  7 themass 1 1313  6 center 1 1310  1 r 1 1364  
128 0 0 4 136 1306 0 0 0 11 4 this 3 1361  7 themass 1 1313  3 cgx 1 1313  3 cgy 1 1313  3 cgz 1 1313  3 I11 1 1313  3 I22 1 1313  3 I33 1 1313  3 I12 1 1313  3 I13 1 1313  3 I23 1 1313  
129 0 0 4 137 1306 0 0 0 3 4 this 3 1361  7 density 1 1313  6 radius 1 1313  
130 0 0 4 138 1306 0 0 0 3 4 this 3 1361  10 total_mass 1 1313  6 radius 1 1313  
131 0 0 4 139 1306 0 0 0 5 4 this 3 1361  7 density 1 1313  9 direction 1 1315  6 radius 1 1313  6 length 1 1313  
132 0 0 4 140 1306 0 0 0 5 4 this 3 1361  10 total_mass 1 1313  9 direction 1 1315  6 radius 1 1313  6 length 1 1313  
133 0 0 4 141 1306 0 0 0 5 4 this 3 1361  7 density 1 1313  9 direction 1 1315  6 radius 1 1313  6 length 1 1313  
134 0 0 4 142 1306 0 0 0 5 4 this 3 1361  10 total_mass 1 1313  9 direction 1 1315  6 radius 1 1313  6 length 1 1313  
135 0 0 4 143 1306 0 0 0 3 4 this 3 1361  7 density 1 1313  4 size 1 1310  
136 0 0 4 143 1306 0 0 0 5 4 this 3 1361  7 density 1 1313  2 lx 1 1313  2 ly 1 1313  2 lz 1 1313  
137 0 0 4 144 1306 0 0 0 3 4 this 3 1361  10 total_mass 1 1313  4 size 1 1310  
138 0 0 4 144 1306 0 0 0 5 4 this 3 1361  10 total_mass 1 1313  2 lx 1 1313  2 ly 1 1313  2 lz 1 1313  
139 0 0 4 145 1306 0 0 0 2 4 this 3 1361  7 newmass 1 1313  
140 0 0 4 146 1306 0 0 0 2 4 this 3 1361  3 pos 1 1310  
141 0 0 4 146 1306 0 0 0 4 4 this 3 1361  1 x 1 1313  1 y 1 1313  1 z 1 1313  
142 0 0 4 147 1306 0 0 0 2 4 this 3 1361  1 r 1 1364  
143 0 0 4 148 1306 0 0 0 2 4 this 3 1361  5 other 1 1361  
144 0 0 6 149 1313 0 0 0 1 4 this 3 1362  
145 0 0 7 150 1368 0 0 0 1 4 this 3 1362  
146 0 0 7 151 1369 0 0 0 1 4 this 3 1362  
147 0 0 4 152 1306 0 0 0 3 4 this 3 1362  3 out 1 1340  6 indent 1 1342  
148 0 0 7 153 1321 0 0 0 0 
149 0 0 7 155 1319 0 0 0 1 5 world 1 1303  
150 0 0 4 156 1306 0 0 0 1 4 this 3 1319  
151 0 0 6 157 1307 0 0 450 ////////////////////////////////////////////////////////////////////
//     Function: OdeBody::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeBody
//               does not point to a valid body. It is an error to
//               call a method on an empty body.
//               Note that an empty OdeBody also evaluates to False.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1338  
152 0 0 6 158 1370 0 0 246 ////////////////////////////////////////////////////////////////////
//     Function: OdeBody::get_id
//       Access: Published
//  Description: Returns the underlying dBodyID.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1338  
153 0 0 4 159 1306 0 0 0 2 4 this 3 1319  16 linear_threshold 1 1313  
154 0 0 4 160 1306 0 0 0 2 4 this 3 1319  17 angular_threshold 1 1313  
155 0 0 4 161 1306 0 0 0 2 4 this 3 1319  5 steps 1 1315  
156 0 0 4 162 1306 0 0 0 2 4 this 3 1319  4 time 1 1313  
157 0 0 4 163 1306 0 0 0 2 4 this 3 1319  15 do_auto_disable 1 1315  
158 0 0 4 164 1306 0 0 0 1 4 this 3 1319  
159 0 0 4 165 1306 0 0 0 2 4 this 3 1319  4 data 1 1343  
160 0 0 4 166 1306 0 0 0 2 4 this 3 1319  3 pos 1 1310  
161 0 0 4 166 1306 0 0 0 4 4 this 3 1319  1 x 1 1313  1 y 1 1313  1 z 1 1313  
162 0 0 4 167 1306 0 0 0 2 4 this 3 1319  1 r 1 1364  
163 0 0 4 168 1306 0 0 0 2 4 this 3 1319  1 q 1 1372  
164 0 0 4 169 1306 0 0 0 2 4 this 3 1319  3 vel 1 1310  
165 0 0 4 169 1306 0 0 0 4 4 this 3 1319  1 x 1 1313  1 y 1 1313  1 z 1 1313  
166 0 0 4 170 1306 0 0 0 2 4 this 3 1319  3 vel 1 1310  
167 0 0 4 170 1306 0 0 0 4 4 this 3 1319  1 x 1 1313  1 y 1 1313  1 z 1 1313  
168 0 0 4 171 1306 0 0 0 2 4 this 3 1319  4 mass 1 1361  
169 0 0 6 172 1313 0 0 0 1 4 this 3 1338  
170 0 0 6 173 1313 0 0 0 1 4 this 3 1338  
171 0 0 6 174 1315 0 0 0 1 4 this 3 1338  
172 0 0 6 175 1313 0 0 0 1 4 this 3 1338  
173 0 0 6 176 1315 0 0 0 1 4 this 3 1338  
174 0 0 6 177 1343 0 0 0 1 4 this 3 1338  
175 0 0 7 178 1316 0 0 0 1 4 this 3 1338  
176 0 0 7 179 1369 0 0 0 1 4 this 3 1338  
177 0 0 7 180 1376 0 0 0 1 4 this 3 1338  
178 0 0 7 181 1316 0 0 0 1 4 this 3 1338  
179 0 0 7 182 1316 0 0 0 1 4 this 3 1338  
180 0 0 7 183 1361 0 0 0 1 4 this 3 1338  
181 0 0 4 184 1306 0 0 0 2 4 this 3 1319  1 f 1 1310  
182 0 0 4 184 1306 0 0 0 4 4 this 3 1319  2 fx 1 1313  2 fy 1 1313  2 fz 1 1313  
183 0 0 4 185 1306 0 0 0 2 4 this 3 1319  1 f 1 1310  
184 0 0 4 185 1306 0 0 0 4 4 this 3 1319  2 fx 1 1313  2 fy 1 1313  2 fz 1 1313  
185 0 0 4 186 1306 0 0 0 2 4 this 3 1319  1 f 1 1310  
186 0 0 4 186 1306 0 0 0 4 4 this 3 1319  2 fx 1 1313  2 fy 1 1313  2 fz 1 1313  
187 0 0 4 187 1306 0 0 0 2 4 this 3 1319  1 f 1 1310  
188 0 0 4 187 1306 0 0 0 4 4 this 3 1319  2 fx 1 1313  2 fy 1 1313  2 fz 1 1313  
189 0 0 4 188 1306 0 0 0 3 4 this 3 1319  1 f 1 1310  3 pos 1 1310  
190 0 0 4 188 1306 0 0 0 7 4 this 3 1319  2 fx 1 1313  2 fy 1 1313  2 fz 1 1313  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
191 0 0 4 189 1306 0 0 0 3 4 this 3 1319  1 f 1 1310  3 pos 1 1310  
192 0 0 4 189 1306 0 0 0 7 4 this 3 1319  2 fx 1 1313  2 fy 1 1313  2 fz 1 1313  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
193 0 0 4 190 1306 0 0 0 3 4 this 3 1319  1 f 1 1310  3 pos 1 1310  
194 0 0 4 190 1306 0 0 0 7 4 this 3 1319  2 fx 1 1313  2 fy 1 1313  2 fz 1 1313  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
195 0 0 4 191 1306 0 0 0 3 4 this 3 1319  1 f 1 1310  3 pos 1 1310  
196 0 0 4 191 1306 0 0 0 7 4 this 3 1319  2 fx 1 1313  2 fy 1 1313  2 fz 1 1313  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
197 0 0 4 192 1306 0 0 0 2 4 this 3 1319  1 f 1 1310  
198 0 0 4 192 1306 0 0 0 4 4 this 3 1319  1 x 1 1313  1 y 1 1313  1 z 1 1313  
199 0 0 4 193 1306 0 0 0 2 4 this 3 1319  1 f 1 1310  
200 0 0 4 193 1306 0 0 0 4 4 this 3 1319  1 x 1 1313  1 y 1 1313  1 z 1 1313  
201 0 0 7 194 1368 0 0 0 2 4 this 3 1338  3 pos 1 1310  
202 0 0 7 194 1368 0 0 0 4 4 this 3 1338  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
203 0 0 7 195 1368 0 0 0 2 4 this 3 1338  3 pos 1 1310  
204 0 0 7 195 1368 0 0 0 4 4 this 3 1338  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
205 0 0 7 196 1368 0 0 0 2 4 this 3 1338  3 pos 1 1310  
206 0 0 7 196 1368 0 0 0 4 4 this 3 1338  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
207 0 0 7 197 1368 0 0 0 2 4 this 3 1338  3 pos 1 1310  
208 0 0 7 197 1368 0 0 0 4 4 this 3 1338  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
209 0 0 7 198 1316 0 0 0 2 4 this 3 1338  3 pos 1 1310  
210 0 0 7 198 1316 0 0 0 4 4 this 3 1338  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
211 0 0 7 199 1316 0 0 0 2 4 this 3 1338  3 pos 1 1310  
212 0 0 7 199 1316 0 0 0 4 4 this 3 1338  2 px 1 1313  2 py 1 1313  2 pz 1 1313  
213 0 0 4 200 1306 0 0 0 2 4 this 3 1319  4 mode 1 1315  
214 0 0 4 201 1306 0 0 0 2 4 this 3 1319  4 axis 1 1310  
215 0 0 4 201 1306 0 0 0 4 4 this 3 1319  1 x 1 1313  1 y 1 1313  1 z 1 1313  
216 0 0 6 202 1315 0 0 0 1 4 this 3 1338  
217 0 0 7 203 1316 0 0 0 1 4 this 3 1338  
218 0 0 6 204 1315 0 0 0 1 4 this 3 1338  
219 0 0 7 205 1332 0 0 0 2 4 this 3 1338  5 index 1 1315  
220 0 0 6 206 1343 0 0 0 2 4 this 3 1338  1 i 1 1315  
221 0 0 4 207 1306 0 0 0 1 4 this 3 1319  
222 0 0 4 208 1306 0 0 0 1 4 this 3 1319  
223 0 0 6 209 1315 0 0 0 1 4 this 3 1338  
224 0 0 4 210 1306 0 0 0 2 4 this 3 1319  4 mode 1 1315  
225 0 0 6 211 1315 0 0 0 1 4 this 3 1338  
226 0 0 4 212 1306 0 0 0 3 4 this 3 1338  3 out 1 1340  6 indent 1 1342  
227 0 0 6 214 1315 0 0 0 2 4 this 3 1338  5 other 1 1338  
228 0 0 7 215 1321 0 0 0 0 
229 0 0 6 213 1307 0 0 0 1 4 this 3 1338  
230 0 0 4 217 1306 0 0 0 1 4 this 3 1377  
231 0 0 6 218 1307 0 0 455 ////////////////////////////////////////////////////////////////////
//     Function: OdeSpace::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeSpace
//               does not point to a valid space. It is an error to
//               call a method on an empty space.
//               Note that an empty OdeSpace also evaluates to False.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1378  
232 0 0 4 219 1306 0 0 0 2 4 this 3 1377  4 mode 1 1315  
233 0 0 6 220 1315 0 0 0 1 4 this 3 1378  
234 0 0 6 221 1315 0 0 0 2 4 this 3 1378  4 geom 1 1380  
235 0 0 6 221 1315 0 0 0 2 4 this 3 1378  5 space 1 1378  
236 0 0 6 222 1315 0 0 0 1 4 this 3 1378  
237 0 0 4 223 1306 0 0 0 3 4 this 3 1378  3 min 1 1316  3 max 1 1316  
238 0 0 6 224 1343 0 0 0 1 4 this 3 1378  
239 0 0 6 225 1315 0 0 0 1 4 this 3 1377  
240 0 0 6 226 1315 0 0 0 1 4 this 3 1378  
241 0 0 4 227 1306 0 0 0 2 4 this 3 1377  4 bits 1 1382  
242 0 0 4 228 1306 0 0 0 2 4 this 3 1377  4 bits 1 1382  
243 0 0 7 229 1386 0 0 0 1 4 this 3 1377  
244 0 0 7 230 1386 0 0 0 1 4 this 3 1377  
245 0 0 4 231 1306 0 0 0 1 4 this 3 1377  
246 0 0 4 232 1306 0 0 0 1 4 this 3 1377  
247 0 0 6 233 1315 0 0 0 1 4 this 3 1377  
248 0 0 4 234 1306 0 0 0 2 4 this 3 1377  6 param0 0 1303  
249 0 0 4 235 1306 0 0 0 2 4 this 3 1377  6 param0 0 1322  
250 0 0 4 236 1306 0 0 0 2 4 this 3 1377  4 geom 1 1387  
251 0 0 4 236 1306 0 0 0 2 4 this 3 1377  5 space 1 1377  
252 0 0 4 237 1306 0 0 0 2 4 this 3 1377  4 geom 1 1387  
253 0 0 4 237 1306 0 0 0 2 4 this 3 1377  5 space 1 1377  
254 0 0 4 238 1306 0 0 0 1 4 this 3 1377  
255 0 0 7 239 1387 0 0 0 2 4 this 3 1377  1 i 1 1315  
256 0 0 7 240 1377 0 0 0 1 4 this 3 1378  
257 0 0 4 241 1306 0 0 0 3 4 this 3 1378  3 out 1 1340  6 indent 1 1342  
258 0 0 7 243 1388 0 0 0 1 4 this 3 1378  
259 0 0 7 244 1389 0 0 0 1 4 this 3 1378  
260 0 0 7 245 1390 0 0 0 1 4 this 3 1378  
261 0 0 6 246 1343 0 0 0 1 4 this 3 1378  
262 0 0 6 247 1343 0 0 0 2 4 this 3 1378  1 i 1 1315  
263 0 0 6 248 1343 0 0 0 1 4 this 3 1378  
264 0 0 4 249 1306 0 0 0 1 4 this 3 1377  
265 0 0 6 250 1315 0 0 0 3 4 this 3 1377  3 arg 1 1343  13 near_callback 1 1343  
266 0 0 6 251 1315 0 0 0 3 4 this 3 1377  4 geom 1 1387  10 collide_id 1 1315  
267 0 0 6 251 1315 0 0 0 3 4 this 3 1377  10 collide_id 1 1315  2 id 1 1391  
268 0 0 4 252 1306 0 0 0 3 4 this 3 1377  4 geom 1 1387  12 surface_type 1 1315  
269 0 0 4 252 1306 0 0 0 3 4 this 3 1377  12 surface_type 1 1315  2 id 1 1391  
270 0 0 6 253 1315 0 0 0 2 4 this 3 1377  4 geom 1 1387  
271 0 0 6 253 1315 0 0 0 2 4 this 3 1377  2 o1 1 1391  
272 0 0 6 254 1315 0 0 0 2 4 this 3 1377  4 geom 1 1387  
273 0 0 6 254 1315 0 0 0 2 4 this 3 1377  2 o1 1 1391  
274 0 0 4 255 1306 0 0 0 2 4 this 3 1377  10 event_name 1 1393  
275 0 0 6 256 1393 0 0 0 1 4 this 3 1377  
276 0 0 7 257 1321 0 0 0 0 
277 0 0 6 242 1307 0 0 0 1 4 this 3 1378  
278 0 0 4 260 1306 0 0 0 1 4 this 3 1387  
279 0 0 6 261 1307 0 0 450 ////////////////////////////////////////////////////////////////////
//     Function: OdeGeom::is_empty
//       Access: Published
//  Description: Returns true if the ID is 0, meaning the OdeGeom
//               does not point to a valid geom. It is an error to
//               call a method on an empty geom.
//               Note that an empty OdeGeom also evaluates to False.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1380  
280 0 0 6 262 1391 0 0 246 ////////////////////////////////////////////////////////////////////
//     Function: OdeGeom::get_id
//       Access: Published
//  Description: Returns the underlying dGeomID.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1380  
281 0 0 4 263 1306 0 0 35 //INLINE void set_data(void* data); 2 4 this 3 1387  4 body 1 1319  
282 0 0 6 264 1307 0 0 0 1 4 this 3 1380  
283 0 0 7 265 1319 0 0 0 1 4 this 3 1380  
284 0 0 4 266 1306 0 0 0 2 4 this 3 1387  3 pos 1 1310  
285 0 0 4 266 1306 0 0 0 4 4 this 3 1387  1 x 1 1313  1 y 1 1313  1 z 1 1313  
286 0 0 4 267 1306 0 0 0 2 4 this 3 1387  1 r 1 1364  
287 0 0 4 268 1306 0 0 0 2 4 this 3 1387  1 q 1 1372  
288 0 0 7 269 1368 0 0 0 1 4 this 3 1380  
289 0 0 7 270 1369 0 0 0 1 4 this 3 1380  
290 0 0 7 271 1394 0 0 0 1 4 this 3 1380  
291 0 0 4 272 1306 0 0 0 3 4 this 3 1380  3 min 1 1316  3 max 1 1316  
292 0 0 6 273 1343 0 0 0 1 4 this 3 1380  
293 0 0 6 274 1315 0 0 0 1 4 this 3 1387  
294 0 0 6 275 1315 0 0 0 1 4 this 3 1380  
295 0 0 4 276 1306 0 0 0 2 4 this 3 1387  4 bits 1 1382  
296 0 0 4 277 1306 0 0 0 2 4 this 3 1387  4 bits 1 1382  
297 0 0 7 278 1386 0 0 0 1 4 this 3 1387  
298 0 0 7 279 1386 0 0 0 1 4 this 3 1387  
299 0 0 4 280 1306 0 0 0 1 4 this 3 1387  
300 0 0 4 281 1306 0 0 0 1 4 this 3 1387  
301 0 0 6 282 1315 0 0 0 1 4 this 3 1387  
302 0 0 4 283 1306 0 0 0 2 4 this 3 1387  3 pos 1 1310  
303 0 0 4 283 1306 0 0 0 4 4 this 3 1387  1 x 1 1313  1 y 1 1313  1 z 1 1313  
304 0 0 4 284 1306 0 0 0 2 4 this 3 1387  1 r 1 1364  
305 0 0 4 285 1306 0 0 0 2 4 this 3 1387  1 q 1 1372  
306 0 0 4 286 1306 0 0 0 2 4 this 3 1387  3 pos 1 1310  
307 0 0 4 286 1306 0 0 0 4 4 this 3 1387  1 x 1 1313  1 y 1 1313  1 z 1 1313  
308 0 0 4 287 1306 0 0 0 2 4 this 3 1387  1 r 1 1364  
309 0 0 4 288 1306 0 0 0 2 4 this 3 1387  1 q 1 1372  
310 0 0 4 289 1306 0 0 0 1 4 this 3 1387  
311 0 0 6 290 1315 0 0 0 1 4 this 3 1387  
312 0 0 7 291 1368 0 0 0 1 4 this 3 1380  
313 0 0 7 292 1369 0 0 0 1 4 this 3 1380  
314 0 0 7 293 1394 0 0 0 1 4 this 3 1380  
315 0 0 7 294 1377 0 0 0 1 4 this 3 1380  
316 0 0 6 295 1343 0 0 0 1 4 this 3 1380  
317 0 0 4 296 1306 0 0 0 3 4 this 3 1380  3 out 1 1340  6 indent 1 1342  
318 0 0 6 298 1315 0 0 0 2 4 this 3 1380  5 other 1 1380  
319 0 0 6 299 1343 0 0 0 1 4 this 3 1380  
320 0 0 7 300 1395 0 0 0 1 4 this 3 1380  
321 0 0 7 301 1396 0 0 0 1 4 this 3 1380  
322 0 0 7 302 1397 0 0 43 // OdeConvexGeom convert_to_convex() const; 1 4 this 3 1380  
323 0 0 7 303 1398 0 0 53 // OdeHeightfieldGeom convert_to_heightfield() const; 1 4 this 3 1380  
324 0 0 7 304 1399 0 0 0 1 4 this 3 1380  
325 0 0 7 305 1400 0 0 0 1 4 this 3 1380  
326 0 0 7 306 1401 0 0 0 1 4 this 3 1380  
327 0 0 7 307 1388 0 0 0 1 4 this 3 1380  
328 0 0 7 308 1389 0 0 0 1 4 this 3 1380  
329 0 0 7 309 1390 0 0 0 1 4 this 3 1380  
330 0 0 7 310 1321 0 0 0 0 
331 0 0 6 297 1307 0 0 0 1 4 this 3 1380  
332 0 0 7 312 1395 0 0 0 2 5 space 1 1377  4 size 1 1310  
333 0 0 7 312 1395 0 0 0 4 5 space 1 1377  2 lx 1 1313  2 ly 1 1313  2 lz 1 1313  
334 0 0 7 312 1395 0 0 0 3 2 lx 1 1313  2 ly 1 1313  2 lz 1 1313  
335 0 0 4 313 1306 0 0 0 2 4 this 3 1395  4 size 1 1310  
336 0 0 4 313 1306 0 0 0 4 4 this 3 1395  2 lx 1 1313  2 ly 1 1313  2 lz 1 1313  
337 0 0 7 314 1316 0 0 0 1 4 this 3 1395  
338 0 0 6 315 1313 0 0 0 2 4 this 3 1395  1 p 1 1402  
339 0 0 6 315 1313 0 0 0 4 4 this 3 1395  1 x 1 1313  1 y 1 1313  1 z 1 1313  
340 0 0 7 316 1321 0 0 0 0 
341 0 0 7 318 1396 0 0 0 3 5 space 1 1377  6 radius 1 1313  6 length 1 1313  
342 0 0 7 318 1396 0 0 0 2 6 radius 1 1313  6 length 1 1313  
343 0 0 4 319 1306 0 0 0 3 4 this 3 1396  6 radius 1 1313  6 length 1 1313  
344 0 0 6 321 1313 0 0 0 1 4 this 3 1404  
345 0 0 6 322 1313 0 0 0 1 4 this 3 1404  
346 0 0 6 323 1313 0 0 0 2 4 this 3 1404  1 p 1 1402  
347 0 0 6 323 1313 0 0 0 4 4 this 3 1404  1 x 1 1313  1 y 1 1313  1 z 1 1313  
348 0 0 7 324 1321 0 0 0 0 
349 0 0 7 326 1406 0 0 0 0 
350 0 0 7 326 1406 0 0 0 1 4 copy 1 1407  
351 0 0 7 327 1316 0 0 0 1 4 this 3 1407  
352 0 0 7 328 1316 0 0 0 1 4 this 3 1407  
353 0 0 6 329 1313 0 0 0 1 4 this 3 1407  
354 0 0 7 330 1387 0 0 0 1 4 this 3 1407  
355 0 0 7 331 1387 0 0 0 1 4 this 3 1407  
356 0 0 6 332 1315 0 0 0 1 4 this 3 1407  
357 0 0 6 333 1315 0 0 0 1 4 this 3 1407  
358 0 0 4 334 1306 0 0 0 2 4 this 3 1406  3 pos 1 1310  
359 0 0 4 335 1306 0 0 0 2 4 this 3 1406  6 normal 1 1310  
360 0 0 4 336 1306 0 0 0 2 4 this 3 1406  5 depth 1 1409  
361 0 0 4 337 1306 0 0 0 2 4 this 3 1406  4 geom 1 1380  
362 0 0 4 338 1306 0 0 0 2 4 this 3 1406  4 geom 1 1380  
363 0 0 7 339 1321 0 0 0 0 
364 0 0 7 341 1387 0 0 268 ////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_geom1
//       Access: Published
//  Description: Returns the first geom in the collision.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1410  
365 0 0 7 342 1387 0 0 269 ////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_geom2
//       Access: Published
//  Description: Returns the second geom in the collision.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1410  
366 0 0 7 343 1319 0 0 268 ////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_body1
//       Access: Published
//  Description: Returns the first body in the collision.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1410  
367 0 0 7 344 1319 0 0 269 ////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_body2
//       Access: Published
//  Description: Returns the second body in the collision.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1410  
368 0 0 6 345 1412 0 0 283 ////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_num_contacts
//       Access: Published
//  Description: Returns the number of contacts in the collision.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1410  
369 0 0 7 346 1368 0 0 378 ////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_contact_point
//       Access: Published
//  Description: Returns the nth contact point in the collision.
//               This does exactly the same as
//               get_contact_geom(n).get_pos().
//////////////////////////////////////////////////////////////////// 2 4 this 3 1410  1 n 1 1412  
370 0 0 7 347 1406 0 0 281 ////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::get_contact_geom
//       Access: Published
//  Description: Returns the nth contact geom in the collision.
//////////////////////////////////////////////////////////////////// 2 4 this 3 1410  1 n 1 1412  
371 0 0 7 348 1406 0 0 0 2 4 this 3 1410  1 n 1 1412  
372 0 0 6 350 1307 0 0 271 ////////////////////////////////////////////////////////////////////
//     Function: OdeCollisionEntry::is_empty
//       Access: Published
//  Description: Returns true if the entry holds no contacts.
//////////////////////////////////////////////////////////////////// 1 4 this 3 1410  
373 0 0 7 351 1321 0 0 0 0 
374 0 0 6 349 1307 0 0 0 1 4 this 3 1410  
375 0 0 7 354 1414 0 0 0 2 4 mode 1 1315  2 mu 1 1313  
376 0 0 4 355 1306 0 0 0 2 4 this 3 1414  4 mode 1 1315  
377 0 0 4 356 1306 0 0 0 2 4 this 3 1414  2 mu 1 1313  
378 0 0 4 357 1306 0 0 0 2 4 this 3 1414  3 mu2 1 1313  
379 0 0 4 358 1306 0 0 0 2 4 this 3 1414  6 bounce 1 1313  
380 0 0 4 359 1306 0 0 0 2 4 this 3 1414  10 bounce_vel 1 1313  
381 0 0 4 360 1306 0 0 0 2 4 this 3 1414  8 soft_erp 1 1313  
382 0 0 4 361 1306 0 0 0 2 4 this 3 1414  8 soft_cfm 1 1313  
383 0 0 4 362 1306 0 0 0 2 4 this 3 1414  6 motion 1 1313  
384 0 0 4 363 1306 0 0 0 2 4 this 3 1414  6 motion 1 1313  
385 0 0 4 364 1306 0 0 0 2 4 this 3 1414  4 slip 1 1313  
386 0 0 4 365 1306 0 0 0 2 4 this 3 1414  4 slip 1 1313  
387 0 0 6 366 1315 0 0 0 1 4 this 3 1415  
388 0 0 6 367 1313 0 0 0 1 4 this 3 1415  
389 0 0 6 368 1313 0 0 0 1 4 this 3 1415  
390 0 0 6 369 1313 0 0 0 1 4 this 3 1415  
391 0 0 6 370 1313 0 0 0 1 4 this 3 1415  
392 0 0 6 371 1313 0 0 0 1 4 this 3 1415  
393 0 0 6 372 1313 0 0 0 1 4 this 3 1415  
394 0 0 6 373 1313 0 0 0 1 4 this 3 1415  
395 0 0 6 374 1313 0 0 0 1 4 this 3 1415  
396 0 0 6 375 1313 0 0 0 1 4 this 3 1415  
397 0 0 6 376 1313 0 0 0 1 4 this 3 1415  
398 0 0 7 377 1321 0 0 0 0 
399 0 0 7 379 1417 0 0 0 0 
400 0 0 7 379 1417 0 0 38 // OdeContact(const OdeContact &copy); 1 7 contact 1 1418  
401 0 0 7 380 1414 0 0 0 1 4 this 3 1421  
402 0 0 7 381 1406 0 0 0 1 4 this 3 1417  
403 0 0 7 382 1316 0 0 0 1 4 this 3 1421  
404 0 0 4 383 1306 0 0 0 2 4 this 3 1417  18 surface_parameters 1 1415  
405 0 0 4 384 1306 0 0 0 2 4 this 3 1417  12 contact_geom 1 1407  
406 0 0 4 385 1306 0 0 0 2 4 this 3 1417  5 fdir1 1 1310  
407 0 0 7 386 1321 0 0 0 0 
408 0 0 7 388 1349 0 0 0 2 5 world 1 1303  7 contact 1 1421  
409 0 0 7 388 1349 0 0 0 3 5 world 1 1303  11 joint_group 1 1322  7 contact 1 1421  
410 0 0 7 389 1321 0 0 0 0 
411 0 0 7 391 1397 0 0 0 3 5 space 1 1377  6 radius 1 1313  6 length 1 1313  
412 0 0 7 391 1397 0 0 0 2 6 radius 1 1313  6 length 1 1313  
413 0 0 4 392 1306 0 0 0 3 4 this 3 1397  6 radius 1 1313  6 length 1 1313  
414 0 0 6 394 1313 0 0 0 1 4 this 3 1423  
415 0 0 6 395 1313 0 0 0 1 4 this 3 1423  
416 0 0 7 396 1321 0 0 0 0 
417 0 0 7 398 1352 0 0 0 1 5 world 1 1303  
418 0 0 7 398 1352 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
419 0 0 4 399 1306 0 0 0 1 4 this 3 1352  
420 0 0 7 400 1321 0 0 0 0 
421 0 0 7 402 1389 0 0 0 0 
422 0 0 7 402 1389 0 0 0 1 5 space 1 1377  
423 0 0 4 403 1306 0 0 0 3 4 this 3 1389  8 minlevel 1 1315  8 maxlevel 1 1315  
424 0 0 6 404 1315 0 0 0 1 4 this 3 1425  
425 0 0 6 405 1315 0 0 0 1 4 this 3 1425  
426 0 0 7 406 1321 0 0 0 0 
427 0 0 7 408 1351 0 0 0 1 5 world 1 1303  
428 0 0 7 408 1351 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
429 0 0 4 409 1306 0 0 0 2 4 this 3 1351  6 anchor 1 1310  
430 0 0 4 409 1306 0 0 0 4 4 this 3 1351  1 x 1 1313  1 y 1 1313  1 z 1 1313  
431 0 0 4 410 1306 0 0 0 2 4 this 3 1351  4 axis 1 1310  
432 0 0 4 410 1306 0 0 0 4 4 this 3 1351  1 x 1 1313  1 y 1 1313  1 z 1 1313  
433 0 0 4 411 1306 0 0 0 2 4 this 3 1351  4 axis 1 1310  
434 0 0 4 411 1306 0 0 0 4 4 this 3 1351  1 x 1 1313  1 y 1 1313  1 z 1 1313  
435 0 0 4 412 1306 0 0 0 3 4 this 3 1351  7 torque1 1 1313  7 torque2 1 1313  
436 0 0 7 413 1316 0 0 0 1 4 this 3 1427  
437 0 0 7 414 1316 0 0 0 1 4 this 3 1427  
438 0 0 7 415 1316 0 0 0 1 4 this 3 1427  
439 0 0 7 416 1316 0 0 0 1 4 this 3 1427  
440 0 0 6 417 1313 0 0 0 1 4 this 3 1427  
441 0 0 6 418 1313 0 0 0 1 4 this 3 1427  
442 0 0 6 419 1313 0 0 0 1 4 this 3 1427  
443 0 0 4 420 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
444 0 0 4 421 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
445 0 0 4 422 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
446 0 0 4 423 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
447 0 0 4 424 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
448 0 0 4 425 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
449 0 0 4 426 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
450 0 0 4 427 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
451 0 0 4 428 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
452 0 0 4 429 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
453 0 0 4 430 1306 0 0 0 3 4 this 3 1351  4 axis 1 1315  3 val 1 1313  
454 0 0 6 431 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
455 0 0 6 432 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
456 0 0 6 433 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
457 0 0 6 434 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
458 0 0 6 435 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
459 0 0 6 436 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
460 0 0 6 437 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
461 0 0 6 438 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
462 0 0 6 439 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
463 0 0 6 440 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
464 0 0 6 441 1313 0 0 0 2 4 this 3 1427  4 axis 1 1315  
465 0 0 7 442 1321 0 0 0 0 
466 0 0 7 444 1347 0 0 0 1 5 world 1 1303  
467 0 0 7 444 1347 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
468 0 0 4 445 1306 0 0 0 2 4 this 3 1347  6 anchor 1 1310  
469 0 0 4 445 1306 0 0 0 4 4 this 3 1347  1 x 1 1313  1 y 1 1313  1 z 1 1313  
470 0 0 4 446 1306 0 0 0 3 4 this 3 1347  6 anchor 1 1310  3 vec 1 1310  
471 0 0 4 446 1306 0 0 0 7 4 this 3 1347  1 x 1 1313  1 y 1 1313  1 z 1 1313  2 ax 1 1313  2 ay 1 1313  2 az 1 1313  
472 0 0 4 447 1306 0 0 0 2 4 this 3 1347  4 axis 1 1310  
473 0 0 4 447 1306 0 0 0 4 4 this 3 1347  1 x 1 1313  1 y 1 1313  1 z 1 1313  
474 0 0 4 448 1306 0 0 0 2 4 this 3 1347  6 torque 1 1313  
475 0 0 7 449 1316 0 0 0 1 4 this 3 1429  
476 0 0 7 450 1316 0 0 0 1 4 this 3 1429  
477 0 0 7 451 1316 0 0 0 1 4 this 3 1429  
478 0 0 6 452 1313 0 0 0 1 4 this 3 1429  
479 0 0 6 453 1313 0 0 0 1 4 this 3 1429  
480 0 0 4 454 1306 0 0 0 2 4 this 3 1347  3 val 1 1313  
481 0 0 4 455 1306 0 0 0 2 4 this 3 1347  3 val 1 1313  
482 0 0 4 456 1306 0 0 0 2 4 this 3 1347  3 val 1 1313  
483 0 0 4 457 1306 0 0 0 2 4 this 3 1347  3 val 1 1313  
484 0 0 4 458 1306 0 0 0 2 4 this 3 1347  3 val 1 1313  
485 0 0 4 459 1306 0 0 0 2 4 this 3 1347  3 val 1 1313  
486 0 0 4 460 1306 0 0 0 2 4 this 3 1347  3 val 1 1313  
487 0 0 4 461 1306 0 0 0 2 4 this 3 1347  3 val 1 1313  
488 0 0 4 462 1306 0 0 0 2 4 this 3 1347  3 val 1 1313  
489 0 0 6 463 1313 0 0 0 1 4 this 3 1429  
490 0 0 6 464 1313 0 0 0 1 4 this 3 1429  
491 0 0 6 465 1313 0 0 0 1 4 this 3 1429  
492 0 0 6 466 1313 0 0 0 1 4 this 3 1429  
493 0 0 6 467 1313 0 0 0 1 4 this 3 1429  
494 0 0 6 468 1313 0 0 0 1 4 this 3 1429  
495 0 0 6 469 1313 0 0 0 1 4 this 3 1429  
496 0 0 6 470 1313 0 0 0 1 4 this 3 1429  
497 0 0 6 471 1313 0 0 0 1 4 this 3 1429  
498 0 0 7 472 1321 0 0 0 0 
499 0 0 7 474 1431 1108 0 0 0 
500 0 0 7 474 1431 1108 0 0 1 4 copy 1 1432  
501 0 0 6 475 1431 0 0 0 2 4 this 3 1431  4 copy 1 1432  
502 0 0 4 477 1306 0 0 0 2 4 this 3 1431  5 joint 1 1333  
503 0 0 6 478 1307 0 0 0 2 4 this 3 1431  5 joint 1 1333  
504 0 0 4 479 1306 0 0 0 2 4 this 3 1431  5 other 1 1432  
505 0 0 4 480 1306 0 0 0 2 4 this 3 1431  5 other 1 1432  
506 0 0 4 481 1306 0 0 0 1 4 this 3 1431  
507 0 0 6 482 1307 0 0 0 2 4 this 3 1432  5 joint 1 1333  
508 0 0 4 483 1306 0 0 0 1 4 this 3 1431  
509 0 0 6 484 1307 0 0 0 1 4 this 3 1432  
510 0 0 6 485 1315 0 0 0 1 4 this 3 1432  
511 0 0 7 486 1332 0 0 0 2 4 this 3 1432  5 index 1 1315  
512 0 0 7 487 1332 0 0 0 2 4 this 3 1432  5 index 1 1315  
513 0 0 6 488 1315 0 0 333 ////////////////////////////////////////////////////////////////////
//     Function: OdeJointCollection::size
//       Access: Published
//  Description: Returns the number of joints in the collection.  This
//               is the same thing as get_num_joints().
//////////////////////////////////////////////////////////////////// 1 4 this 3 1432  
514 0 0 6 489 1431 0 0 0 2 4 this 3 1431  5 other 1 1432  
515 0 0 7 490 1431 1108 0 0 2 4 this 3 1432  5 other 1 1432  
516 0 0 7 492 1355 0 0 0 1 5 world 1 1303  
517 0 0 7 492 1355 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
518 0 0 4 493 1306 0 0 0 2 4 this 3 1355  3 num 1 1315  
519 0 0 4 494 1306 0 0 0 4 4 this 3 1355  4 anum 1 1315  3 rel 1 1315  4 axis 1 1310  
520 0 0 4 494 1306 0 0 0 6 4 this 3 1355  4 anum 1 1315  3 rel 1 1315  1 x 1 1313  1 y 1 1313  1 z 1 1313  
521 0 0 4 495 1306 0 0 0 3 4 this 3 1355  9 parameter 1 1315  5 value 1 1313  
522 0 0 6 496 1315 0 0 0 1 4 this 3 1434  
523 0 0 7 497 1316 0 0 0 2 4 this 3 1434  4 anum 1 1315  
524 0 0 6 498 1313 0 0 0 2 4 this 3 1434  9 parameter 1 1315  
525 0 0 7 499 1321 0 0 0 0 
526 0 0 7 501 1353 0 0 0 1 5 world 1 1303  
527 0 0 7 501 1353 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
528 0 0 7 502 1321 0 0 0 0 
529 0 0 7 504 1356 0 0 0 1 5 world 1 1303  
530 0 0 7 504 1356 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
531 0 0 4 505 1306 0 0 0 3 4 this 3 1356  9 parameter 1 1315  5 value 1 1313  
532 0 0 4 506 1306 0 0 0 3 4 this 3 1356  9 parameter 1 1315  5 value 1 1313  
533 0 0 4 507 1306 0 0 0 3 4 this 3 1356  9 parameter 1 1315  5 value 1 1313  
534 0 0 7 508 1321 0 0 0 0 
535 0 0 7 510 1398 0 0 0 1 6 params 1 1436  
536 0 0 7 510 1398 0 0 0 2 5 space 1 1377  6 params 1 1436  
537 0 0 7 510 1398 0 0 0 5 5 space 1 1377  1 a 1 1313  1 b 1 1313  1 c 1 1313  1 d 1 1313  
538 0 0 7 510 1398 0 0 0 4 1 a 1 1313  1 b 1 1313  1 c 1 1313  1 d 1 1313  
539 0 0 4 511 1306 0 0 0 2 4 this 3 1398  6 params 1 1436  
540 0 0 4 511 1306 0 0 0 5 4 this 3 1398  1 a 1 1313  1 b 1 1313  1 c 1 1313  1 d 1 1313  
541 0 0 7 512 1376 0 0 0 1 4 this 3 1438  
542 0 0 6 513 1313 0 0 0 2 4 this 3 1438  1 p 1 1402  
543 0 0 6 513 1313 0 0 0 4 4 this 3 1438  1 x 1 1313  1 y 1 1313  1 z 1 1313  
544 0 0 7 514 1321 0 0 0 0 
545 0 0 7 516 1390 0 0 0 3 6 center 1 1402  7 extents 1 1310  5 depth 1 1440  
546 0 0 7 516 1390 0 0 0 4 5 space 1 1377  6 center 1 1402  7 extents 1 1310  5 depth 1 1440  
547 0 0 7 517 1321 0 0 0 0 
548 0 0 7 519 1399 0 0 0 2 5 space 1 1377  6 length 1 1313  
549 0 0 7 519 1399 0 0 0 1 6 length 1 1313  
550 0 0 4 520 1306 0 0 0 2 4 this 3 1399  6 length 1 1313  
551 0 0 6 521 1313 0 0 0 1 4 this 3 1399  
552 0 0 4 522 1306 0 0 0 3 4 this 3 1399  5 start 1 1310  3 dir 1 1310  
553 0 0 4 522 1306 0 0 0 7 4 this 3 1399  2 px 1 1313  2 py 1 1313  2 pz 1 1313  2 dx 1 1313  2 dy 1 1313  2 dz 1 1313  
554 0 0 4 523 1306 0 0 0 3 4 this 3 1441  5 start 1 1316  3 dir 1 1316  
555 0 0 7 524 1316 0 0 0 1 4 this 3 1441  
556 0 0 7 525 1316 0 0 0 1 4 this 3 1441  
557 0 0 4 526 1306 0 0 0 3 4 this 3 1399  13 first_contact 1 1315  13 backface_cull 1 1315  
558 0 0 6 528 1315 0 0 0 1 4 this 3 1441  
559 0 0 6 529 1315 0 0 0 1 4 this 3 1441  
560 0 0 4 530 1306 0 0 0 2 4 this 3 1399  11 closest_hit 1 1315  
561 0 0 6 531 1315 0 0 0 1 4 this 3 1399  
562 0 0 7 532 1321 0 0 0 0 
563 0 0 7 534 1388 0 0 0 0 
564 0 0 7 534 1388 0 0 0 1 5 space 1 1377  
565 0 0 7 535 1321 0 0 0 0 
566 0 0 7 537 1348 0 0 0 1 5 world 1 1303  
567 0 0 7 537 1348 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
568 0 0 4 538 1306 0 0 0 2 4 this 3 1348  4 axis 1 1310  
569 0 0 4 538 1306 0 0 0 4 4 this 3 1348  1 x 1 1313  1 y 1 1313  1 z 1 1313  
570 0 0 4 539 1306 0 0 0 3 4 this 3 1348  4 axis 1 1310  3 vec 1 1310  
571 0 0 4 539 1306 0 0 0 7 4 this 3 1348  1 x 1 1313  1 y 1 1313  1 z 1 1313  2 ax 1 1313  2 ay 1 1313  2 az 1 1313  
572 0 0 4 540 1306 0 0 0 2 4 this 3 1348  5 force 1 1313  
573 0 0 6 541 1313 0 0 0 1 4 this 3 1443  
574 0 0 6 542 1313 0 0 0 1 4 this 3 1443  
575 0 0 7 543 1316 0 0 0 1 4 this 3 1443  
576 0 0 4 544 1306 0 0 0 2 4 this 3 1348  3 val 1 1313  
577 0 0 4 545 1306 0 0 0 2 4 this 3 1348  3 val 1 1313  
578 0 0 4 546 1306 0 0 0 2 4 this 3 1348  3 val 1 1313  
579 0 0 4 547 1306 0 0 0 2 4 this 3 1348  3 val 1 1313  
580 0 0 4 548 1306 0 0 0 2 4 this 3 1348  3 val 1 1313  
581 0 0 4 549 1306 0 0 0 2 4 this 3 1348  3 val 1 1313  
582 0 0 4 550 1306 0 0 0 2 4 this 3 1348  3 val 1 1313  
583 0 0 4 551 1306 0 0 0 2 4 this 3 1348  3 val 1 1313  
584 0 0 4 552 1306 0 0 0 2 4 this 3 1348  3 val 1 1313  
585 0 0 6 553 1313 0 0 0 1 4 this 3 1443  
586 0 0 6 554 1313 0 0 0 1 4 this 3 1443  
587 0 0 6 555 1313 0 0 0 1 4 this 3 1443  
588 0 0 6 556 1313 0 0 0 1 4 this 3 1443  
589 0 0 6 557 1313 0 0 0 1 4 this 3 1443  
590 0 0 6 558 1313 0 0 0 1 4 this 3 1443  
591 0 0 6 559 1313 0 0 0 1 4 this 3 1443  
592 0 0 6 560 1313 0 0 0 1 4 this 3 1443  
593 0 0 6 561 1313 0 0 0 1 4 this 3 1443  
594 0 0 7 562 1321 0 0 0 0 
595 0 0 7 564 1400 0 0 0 1 4 geom 1 1387  
596 0 0 7 564 1400 0 0 0 2 5 space 1 1377  6 radius 1 1313  
597 0 0 7 564 1400 0 0 0 1 6 radius 1 1313  
598 0 0 4 565 1306 0 0 0 2 4 this 3 1400  6 radius 1 1313  
599 0 0 6 566 1313 0 0 0 1 4 this 3 1445  
600 0 0 6 567 1313 0 0 0 2 4 this 3 1445  1 p 1 1402  
601 0 0 6 567 1313 0 0 0 4 4 this 3 1445  1 x 1 1313  1 y 1 1313  1 z 1 1313  
602 0 0 7 568 1321 0 0 0 0 
603 0 0 7 571 1450 0 0 0 2 5 model 1 1447  11 use_normals 1 1307  
604 0 0 4 572 1306 0 0 0 1 4 this 3 1450  
605 0 0 4 573 1306 0 0 0 3 4 this 3 1451  3 out 1 1340  6 indent 1 1342  
606 0 0 4 574 1306 0 0 0 2 4 this 3 1451  3 out 1 1340  
607 0 0 7 575 1321 0 0 0 0 
608 0 0 7 577 1401 0 0 0 2 5 space 1 1377  4 data 1 1450  
609 0 0 7 577 1401 0 0 162 /* ODE_API dGeomID dCreateTriMesh(dSpaceID space, dTriMeshDataID Data, dTriCallback* Callback, dTriArrayCallback* ArrayCallback, dTriRayCallback* RayCallback); */ 1 4 data 1 1450  
610 0 0 7 577 1401 0 0 0 1 4 copy 1 1453  
611 0 0 4 578 1306 0 0 0 1 4 this 3 1401  
612 0 0 4 579 1306 0 0 0 2 4 this 3 1401  4 data 1 1450  
613 0 0 7 580 1450 0 0 0 1 4 this 3 1453  
614 0 0 4 581 1306 0 0 0 2 4 this 3 1401  4 data 1 1450  
615 0 0 7 582 1450 0 0 0 1 4 this 3 1453  
616 0 0 4 583 1306 0 0 0 3 4 this 3 1401  10 geom_class 1 1315  6 enable 1 1315  
617 0 0 6 584 1315 0 0 0 2 4 this 3 1453  10 geom_class 1 1315  
618 0 0 4 585 1306 0 0 0 2 4 this 3 1401  4 geom 1 1380  
619 0 0 4 586 1306 0 0 0 5 4 this 3 1453  10 face_index 1 1315  2 v0 1 1368  2 v1 1 1368  2 v2 1 1368  
620 0 0 7 587 1368 0 0 0 4 4 this 3 1453  10 face_index 1 1315  1 u 1 1313  1 v 1 1313  
621 0 0 6 588 1315 0 0 0 1 4 this 3 1453  
622 0 0 7 589 1321 0 0 0 0 
623 0 0 7 591 1350 0 0 0 1 5 world 1 1303  
624 0 0 7 591 1350 0 0 0 2 5 world 1 1303  11 joint_group 1 1322  
625 0 0 4 592 1306 0 0 0 2 4 this 3 1350  6 anchor 1 1310  
626 0 0 4 592 1306 0 0 0 4 4 this 3 1350  1 x 1 1313  1 y 1 1313  1 z 1 1313  
627 0 0 4 593 1306 0 0 0 2 4 this 3 1350  4 axis 1 1310  
628 0 0 4 593 1306 0 0 0 4 4 this 3 1350  1 x 1 1313  1 y 1 1313  1 z 1 1313  
629 0 0 4 594 1306 0 0 0 2 4 this 3 1350  4 axis 1 1310  
630 0 0 4 594 1306 0 0 0 4 4 this 3 1350  1 x 1 1313  1 y 1 1313  1 z 1 1313  
631 0 0 4 595 1306 0 0 0 3 4 this 3 1350  7 torque1 1 1313  7 torque2 1 1313  
632 0 0 7 596 1316 0 0 0 1 4 this 3 1455  
633 0 0 7 597 1316 0 0 0 1 4 this 3 1455  
634 0 0 7 598 1316 0 0 0 1 4 this 3 1455  
635 0 0 7 599 1316 0 0 0 1 4 this 3 1455  
636 0 0 6 600 1313 0 0 0 1 4 this 3 1455  
637 0 0 6 601 1313 0 0 0 1 4 this 3 1455  
638 0 0 6 602 1313 0 0 0 1 4 this 3 1455  
639 0 0 6 603 1313 0 0 0 1 4 this 3 1455  
640 0 0 4 604 1306 0 0 0 3 4 this 3 1350  4 axis 1 1315  3 val 1 1313  
641 0 0 4 605 1306 0 0 0 3 4 this 3 1350  4 axis 1 1315  3 val 1 1313  
642 0 0 4 606 1306 0 0 0 3 4 this 3 1350  4 axis 1 1315  3 val 1 1313  
643 0 0 4 607 1306 0 0 0 3 4 this 3 1350  4 axis 1 1315  3 val 1 1313  
644 0 0 4 608 1306 0 0 0 3 4 this 3 1350  4 axis 1 1315  3 val 1 1313  
645 0 0 4 609 1306 0 0 0 3 4 this 3 1350  4 axis 1 1315  3 val 1 1313  
646 0 0 4 610 1306 0 0 0 3 4 this 3 1350  4 axis 1 1315  3 val 1 1313  
647 0 0 4 611 1306 0 0 0 3 4 this 3 1350  4 axis 1 1315  3 val 1 1313  
648 0 0 4 612 1306 0 0 0 3 4 this 3 1350  4 axis 1 1315  3 val 1 1313  
649 0 0 6 613 1313 0 0 0 2 4 this 3 1455  4 axis 1 1315  
650 0 0 6 614 1313 0 0 0 2 4 this 3 1455  4 axis 1 1315  
651 0 0 6 615 1313 0 0 0 2 4 this 3 1455  4 axis 1 1315  
652 0 0 6 616 1313 0 0 0 2 4 this 3 1455  4 axis 1 1315  
653 0 0 6 617 1313 0 0 0 2 4 this 3 1455  4 axis 1 1315  
654 0 0 6 618 1313 0 0 0 2 4 this 3 1455  4 axis 1 1315  
655 0 0 6 619 1313 0 0 0 2 4 this 3 1455  4 axis 1 1315  
656 0 0 6 620 1313 0 0 0 2 4 this 3 1455  4 axis 1 1315  
657 0 0 6 621 1313 0 0 0 2 4 this 3 1455  4 axis 1 1315  
658 0 0 7 622 1321 0 0 0 0 
659 0 0 7 624 1332 0 0 283 ////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::get_connecting_joint
//       Access: Public, Static
//  Description: Returns the joint that connects the given bodies.
//////////////////////////////////////////////////////////////////// 2 5 body1 1 1338  5 body2 1 1338  
660 0 0 7 625 1431 1108 0 319 ////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::get_connecting_joint_list
//       Access: Public, Static
//  Description: Returns a collection of joints connecting the
//               specified bodies.
//////////////////////////////////////////////////////////////////// 2 5 body1 1 1338  5 body2 1 1338  
661 0 0 6 626 1315 0 0 320 ////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::are_connected
//       Access: Public, Static
//  Description: Returns 1 if the given bodies are connected
//               by a joint, returns 0 otherwise.
//////////////////////////////////////////////////////////////////// 2 5 body1 1 1338  5 body2 1 1338  
662 0 0 6 627 1315 0 0 733 ////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::are_connected_excluding
//       Access: Public, Static
//  Description: Returns 1 if the given bodies are connected
//               by a joint that does not match the given
//               joint_type, returns 0 otherwise. This is useful
//               for deciding whether to add contact joints between
//               two bodies: if they are already connected by
//               non-contact joints then it may not be appropriate
//               to add contacts, however it is okay to add more
//               contact between bodies that already have contacts.
//////////////////////////////////////////////////////////////////// 3 5 body1 1 1338  5 body2 1 1338  10 joint_type 1 1440  
663 0 0 7 628 1459 0 0 392 ////////////////////////////////////////////////////////////////////
//     Function: OdeUtil::collide
//       Access: Public, Static
//  Description: Given two geometry objects that potentially touch
//               (geom1 and geom2), generate contact information
//               for them. Returns an OdeCollisionEntry.
//////////////////////////////////////////////////////////////////// 3 5 geom1 1 1380  5 geom2 1 1380  12 max_contacts 1 1457  
664 0 0 6 629 1315 0 0 0 4 5 geom1 1 1380  5 geom2 1 1380  3 arg 1 1343  8 callback 1 1343  
665 0 0 7 630 1387 0 0 0 1 5 space 1 1378  
666 0 0 6 631 1313 0 0 73 // RAU we can't access OC_infinity as constants are not exposed in python 0 
667 0 0 6 632 1315 0 0 0 0 
668 0 0 4 633 1306 0 0 0 1 1 s 1 1315  
207
1253 6 dxBody 0 1025 6 dxBody 6 dxBody 0 0 0 0 0 0 0 0 0 0 0 0 0

1254 6 dxGeom 0 1025 6 dxGeom 6 dxGeom 0 0 0 0 0 0 0 0 0 0 0 0 0

1255 7 dxJoint 0 1025 7 dxJoint 7 dxJoint 0 0 0 0 0 0 0 0 0 0 0 0 0

1256 12 dxJointGroup 0 1025 12 dxJointGroup 12 dxJointGroup 0 0 0 0 0 0 0 0 0 0 0 0 0

1257 7 dxSpace 0 1025 7 dxSpace 7 dxSpace 0 0 0 0 0 0 0 0 0 0 0 0 0

1258 13 dxTriMeshData 0 1025 13 dxTriMeshData 13 dxTriMeshData 0 0 0 0 0 0 0 0 0 0 0 0 0

1259 7 dxWorld 0 1025 7 dxWorld 7 dxWorld 0 0 0 0 0 0 0 0 0 0 0 0 0

1260 8 OdeWorld 0 75777 8 OdeWorld 8 OdeWorld 0 0 0 1 669 0 0 36 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 706 0 1 705 1 0 1261 0 0 0 0 181
////////////////////////////////////////////////////////////////////
//       Class : OdeWorld
// Description : 
////////////////////////////////////////////////////////////////////

1261 11 TypedObject 0 2049 11 TypedObject 11 TypedObject 0 0 0 0 0 0 0 0 0 0 0 0 3561
////////////////////////////////////////////////////////////////////
//       Class : TypedObject
// Description : This is an abstract class that all classes which
//               use TypeHandle, and also provide virtual functions to
//               support polymorphism, should inherit from.  Each
//               derived class should define get_type(), which should
//               return the specific type of the derived class.
//               Inheriting from this automatically provides support
//               for is_of_type() and is_exact_type().
//
//               All classes that inherit directly or indirectly from
//               TypedObject should redefine get_type() and
//               force_init_type(), as shown below.  Some classes that
//               do not inherit from TypedObject may still declare
//               TypeHandles for themselves by defining methods called
//               get_class_type() and init_type().  Classes such as
//               these may serve as base classes, but the dynamic type
//               identification system will be limited.  Classes that
//               do not inherit from TypedObject need not define the
//               virtual functions get_type() and force_init_type()
//               (or any other virtual functions).
//
//               There is a specific layout for defining the
//               overrides from this class.  Keeping the definitions
//               formatted just like these examples will allow
//               someone in the future to use a sed (or similar)
//               script to make global changes, if necessary.  Avoid
//               rearranging the braces or the order of the functions
//               unless you're ready to change them in every file all
//               at once.
//
//               What follows are some examples that can be used in
//               new classes that you create.
//
//               @par In the class definition (.h file):
//               @code
//               public:
//                 static TypeHandle get_class_type() {
//                   return _type_handle;
//                 }
//                 static void init_type() {
//                   <<<BaseClassOne>>>::init_type();
//                   <<<BaseClassTwo>>>::init_type();
//                   <<<BaseClassN>>>::init_type();
//                   register_type(_type_handle, "<<<ThisClassStringName>>>",
//                                 <<<BaseClassOne>>>::get_class_type(),
//                                 <<<BaseClassTwo>>>::get_class_type(),
//                                 <<<BaseClassN>>>::get_class_type());
//                 }
//                 virtual TypeHandle get_type() const {
//                   return get_class_type();
//                 }
//                 virtual TypeHandle force_init_type() {init_type(); return get_class_type();}
//
//               private:
//                 static TypeHandle _type_handle;
//               @endcode
//
//               @par In the class .cxx file:
//               @code
//               TypeHandle <<<ThisClassStringName>>>::_type_handle;
//               @endcode
//
//               @par In the class config_<<<PackageName>>>.cxx file:
//               @code
//               ConfigureFn(config_<<<PackageName>>>) {
//                 <<<ClassOne>>>::init_type();
//                 <<<ClassTwo>>>::init_type();
//                 <<<ClassN>>>::init_type();
//               }
//               @endcode
////////////////////////////////////////////////////////////////////

1262 13 OdeJointGroup 0 75777 13 OdeJointGroup 13 OdeJointGroup 0 0 0 1 707 0 0 5 708 709 710 711 712 0 0 1 0 1261 0 0 0 0 186
////////////////////////////////////////////////////////////////////
//       Class : OdeJointGroup
// Description : 
////////////////////////////////////////////////////////////////////

1263 16 OdeJointFeedback 0 141313 16 OdeJointFeedback 16 OdeJointFeedback 0 0 0 0 717 0 4 713 714 715 716 0 0 1 0 1264 0 0 0 0 0

1264 14 dJointFeedback 0 1025 14 dJointFeedback 14 dJointFeedback 0 0 0 0 0 0 0 0 0 0 0 0 0

1265 8 OdeJoint 0 75777 8 OdeJoint 8 OdeJoint 0 0 0 0 0 0 27 718 719 720 721 722 723 724 725 726 727 728 729 730 731 733 734 735 736 737 738 739 740 741 742 743 744 745 0 1 732 1 0 1261 0 0 0 1 1266 180
////////////////////////////////////////////////////////////////////
//       Class : OdeJoint
// Description :
////////////////////////////////////////////////////////////////////

1266 9 JointType 0 794624 19 OdeJoint::JointType 19 OdeJoint::JointType 1265 0 0 0 0 0 0 0 0 0 12 7 JT_none 17 OdeJoint::JT_none 18
/* or "unknown" */
0 7 JT_ball 17 OdeJoint::JT_ball 0
1 8 JT_hinge 18 OdeJoint::JT_hinge 0
2 9 JT_slider 19 OdeJoint::JT_slider 0
3 10 JT_contact 20 OdeJoint::JT_contact 0
4 12 JT_universal 22 OdeJoint::JT_universal 0
5 9 JT_hinge2 19 OdeJoint::JT_hinge2 0
6 8 JT_fixed 18 OdeJoint::JT_fixed 0
7 7 JT_null 17 OdeJoint::JT_null 0
8 10 JT_a_motor 20 OdeJoint::JT_a_motor 0
9 10 JT_l_motor 20 OdeJoint::JT_l_motor 0
10 10 JT_plane2d 20 OdeJoint::JT_plane2d 0
11 0 18
/* or "unknown" */

1267 14 OdeAMotorJoint 0 75777 14 OdeAMotorJoint 14 OdeAMotorJoint 0 0 0 1 746 0 0 30 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 1 1460 0 1 0 1265 0 0 0 0 187
////////////////////////////////////////////////////////////////////
//       Class : OdeAMotorJoint
// Description : 
////////////////////////////////////////////////////////////////////

1268 12 OdeBallJoint 0 75777 12 OdeBallJoint 12 OdeBallJoint 0 0 0 1 777 0 0 5 778 779 780 781 782 0 0 1 0 1265 0 0 0 0 185
////////////////////////////////////////////////////////////////////
//       Class : OdeBallJoint
// Description : 
////////////////////////////////////////////////////////////////////

1269 7 OdeMass 0 75777 7 OdeMass 7 OdeMass 0 0 0 1 783 0 0 20 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 0 0 1 0 1270 0 0 0 0 180
////////////////////////////////////////////////////////////////////
//       Class : OdeMass
// Description : 
////////////////////////////////////////////////////////////////////

1270 19 TypedReferenceCount 0 2049 19 TypedReferenceCount 19 TypedReferenceCount 0 0 0 0 0 0 0 0 0 0 0 0 710
////////////////////////////////////////////////////////////////////
//       Class : TypedReferenceCount
// Description : A base class for things which need to inherit from
//               both TypedObject and from ReferenceCount.  It's
//               convenient to define this intermediate base class
//               instead of multiply inheriting from the two classes
//               each time they are needed, so that we can sensibly
//               pass around pointers to things which are both
//               TypedObjects and ReferenceCounters.
//               
//               See also TypedObject for detailed instructions.
////////////////////////////////////////////////////////////////////

1271 7 OdeBody 0 75777 7 OdeBody 7 OdeBody 0 0 0 1 804 0 0 59 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 863 864 1 1461 1 862 1 0 1261 0 0 0 0 180
////////////////////////////////////////////////////////////////////
//       Class : OdeBody
// Description : 
////////////////////////////////////////////////////////////////////

1272 8 OdeSpace 0 75777 8 OdeSpace 8 OdeSpace 0 0 0 0 0 0 40 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 0 1 890 1 0 1261 0 0 0 0 180
////////////////////////////////////////////////////////////////////
//       Class : OdeSpace
// Description :
////////////////////////////////////////////////////////////////////

1273 7 OdeGeom 0 75777 7 OdeGeom 7 OdeGeom 0 0 0 0 0 0 50 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 944 945 946 947 948 949 950 951 952 953 954 955 956 0 1 943 1 0 1261 0 0 0 1 1274 180
////////////////////////////////////////////////////////////////////
//       Class : OdeGeom
// Description : 
////////////////////////////////////////////////////////////////////

1274 9 GeomClass 0 794624 18 OdeGeom::GeomClass 18 OdeGeom::GeomClass 1273 0 0 0 0 0 0 0 0 0 10 9 GC_sphere 18 OdeGeom::GC_sphere 0
0 6 GC_box 15 OdeGeom::GC_box 0
1 18 GC_capped_cylinder 27 OdeGeom::GC_capped_cylinder 0
2 11 GC_cylinder 20 OdeGeom::GC_cylinder 0
3 8 GC_plane 17 OdeGeom::GC_plane 0
4 6 GC_ray 15 OdeGeom::GC_ray 0
5 11 GC_tri_mesh 20 OdeGeom::GC_tri_mesh 35
// GC_convex,
// GC_geom_transform,
8 15 GC_simple_space 24 OdeGeom::GC_simple_space 0
10 13 GC_hash_space 22 OdeGeom::GC_hash_space 0
11 18 GC_quad_tree_space 27 OdeGeom::GC_quad_tree_space 0
12 0 0

1275 10 OdeBoxGeom 0 75777 10 OdeBoxGeom 10 OdeBoxGeom 0 0 0 1 957 0 0 4 958 959 960 961 0 0 1 0 1273 0 0 0 0 183
////////////////////////////////////////////////////////////////////
//       Class : OdeBoxGeom
// Description : 
////////////////////////////////////////////////////////////////////

1276 21 OdeCappedCylinderGeom 0 75777 21 OdeCappedCylinderGeom 21 OdeCappedCylinderGeom 0 0 0 1 962 0 0 6 963 964 965 966 967 968 0 0 1 0 1273 0 0 0 0 194
////////////////////////////////////////////////////////////////////
//       Class : OdeCappedCylinderGeom
// Description : 
////////////////////////////////////////////////////////////////////

1277 14 OdeContactGeom 0 75777 14 OdeContactGeom 14 OdeContactGeom 0 0 0 1 969 0 0 13 970 971 972 973 974 975 976 977 978 979 980 981 982 0 0 1 0 1270 0 0 0 0 187
////////////////////////////////////////////////////////////////////
//       Class : OdeContactGeom
// Description : 
////////////////////////////////////////////////////////////////////

1278 17 OdeCollisionEntry 0 75777 17 OdeCollisionEntry 17 OdeCollisionEntry 0 0 0 0 0 0 10 983 984 985 986 987 988 989 990 992 993 2 1462 1463 1 991 1 0 1270 0 0 0 0 276
////////////////////////////////////////////////////////////////////
//       Class : OdeCollisionEntry
// Description : A class used to hold information about a collision
//               that has occurred.
////////////////////////////////////////////////////////////////////

1279 20 OdeSurfaceParameters 0 75777 20 OdeSurfaceParameters 20 OdeSurfaceParameters 0 0 0 1 994 0 0 23 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 0 0 1 0 1261 0 0 0 1 1280 193
////////////////////////////////////////////////////////////////////
//       Class : OdeSurfaceParameters
// Description : 
////////////////////////////////////////////////////////////////////

1280 9 ModeFlags 0 794624 31 OdeSurfaceParameters::ModeFlags 31 OdeSurfaceParameters::ModeFlags 1279 0 0 0 0 0 0 0 0 0 13 14 MF_contact_mu2 36 OdeSurfaceParameters::MF_contact_mu2 0
1 15 MF_contactFDir1 37 OdeSurfaceParameters::MF_contactFDir1 0
2 16 MF_contactBounce 38 OdeSurfaceParameters::MF_contactBounce 0
4 17 MF_contactSoftERP 39 OdeSurfaceParameters::MF_contactSoftERP 0
8 17 MF_contactSoftCFM 39 OdeSurfaceParameters::MF_contactSoftCFM 0
16 17 MF_contactMotion1 39 OdeSurfaceParameters::MF_contactMotion1 0
32 17 MF_contactMotion2 39 OdeSurfaceParameters::MF_contactMotion2 0
64 15 MF_contactSlip1 37 OdeSurfaceParameters::MF_contactSlip1 0
128 15 MF_contactSlip2 37 OdeSurfaceParameters::MF_contactSlip2 0
256 17 MF_contactApprox0 39 OdeSurfaceParameters::MF_contactApprox0 0
0 19 MF_contactApprox1_1 41 OdeSurfaceParameters::MF_contactApprox1_1 0
4096 19 MF_contactApprox1_2 41 OdeSurfaceParameters::MF_contactApprox1_2 0
8192 17 MF_contactApprox1 39 OdeSurfaceParameters::MF_contactApprox1 0
12288 0 0

1281 10 OdeContact 0 75777 10 OdeContact 10 OdeContact 0 0 0 1 1018 0 0 7 1019 1020 1021 1022 1023 1024 1025 0 0 1 0 1270 0 0 0 0 183
////////////////////////////////////////////////////////////////////
//       Class : OdeContact
// Description : 
////////////////////////////////////////////////////////////////////

1282 15 OdeContactJoint 0 75777 15 OdeContactJoint 15 OdeContactJoint 0 0 0 1 1026 0 0 1 1027 0 0 1 0 1265 0 0 0 0 188
////////////////////////////////////////////////////////////////////
//       Class : OdeContactJoint
// Description : 
////////////////////////////////////////////////////////////////////

1283 15 OdeCylinderGeom 0 75777 15 OdeCylinderGeom 15 OdeCylinderGeom 0 0 0 1 1028 0 0 5 1029 1030 1031 1032 1033 0 0 1 0 1273 0 0 0 0 188
////////////////////////////////////////////////////////////////////
//       Class : OdeCylinderGeom
// Description : 
////////////////////////////////////////////////////////////////////

1284 13 OdeFixedJoint 0 75777 13 OdeFixedJoint 13 OdeFixedJoint 0 0 0 1 1034 0 0 2 1035 1036 0 0 1 0 1265 0 0 0 0 186
////////////////////////////////////////////////////////////////////
//       Class : OdeFixedJoint
// Description : 
////////////////////////////////////////////////////////////////////

1285 12 OdeHashSpace 0 75777 12 OdeHashSpace 12 OdeHashSpace 0 0 0 1 1037 0 0 4 1038 1039 1040 1041 0 0 1 0 1272 0 0 0 0 186
////////////////////////////////////////////////////////////////////
//       Class : OdeHashSpace
// Description : 
////////////////////////////////////////////////////////////////////c

1286 14 OdeHinge2Joint 0 75777 14 OdeHinge2Joint 14 OdeHinge2Joint 0 0 0 1 1042 0 0 34 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 0 0 1 0 1265 0 0 0 0 187
////////////////////////////////////////////////////////////////////
//       Class : OdeHinge2Joint
// Description : 
////////////////////////////////////////////////////////////////////

1287 13 OdeHingeJoint 0 75777 13 OdeHingeJoint 13 OdeHingeJoint 0 0 0 1 1077 0 0 28 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 0 0 1 0 1265 0 0 0 0 186
////////////////////////////////////////////////////////////////////
//       Class : OdeHingeJoint
// Description : 
////////////////////////////////////////////////////////////////////

1288 18 OdeJointCollection 0 26625 18 OdeJointCollection 18 OdeJointCollection 0 0 0 1 1106 1108 0 15 1107 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1 1464 0 0 0 0 191
////////////////////////////////////////////////////////////////////
//       Class : OdeJointCollection
// Description : 
////////////////////////////////////////////////////////////////////

1289 14 OdeLMotorJoint 0 75777 14 OdeLMotorJoint 14 OdeLMotorJoint 0 0 0 1 1123 0 0 7 1124 1125 1126 1127 1128 1129 1130 1 1465 0 1 0 1265 0 0 0 0 187
////////////////////////////////////////////////////////////////////
//       Class : OdeLMotorJoint
// Description : 
////////////////////////////////////////////////////////////////////

1290 12 OdeNullJoint 0 75777 12 OdeNullJoint 12 OdeNullJoint 0 0 0 1 1131 0 0 1 1132 0 0 1 0 1265 0 0 0 0 185
////////////////////////////////////////////////////////////////////
//       Class : OdeNullJoint
// Description : 
////////////////////////////////////////////////////////////////////

1291 15 OdePlane2dJoint 0 75777 15 OdePlane2dJoint 15 OdePlane2dJoint 0 0 0 1 1133 0 0 4 1134 1135 1136 1137 0 0 1 0 1265 0 0 0 0 188
////////////////////////////////////////////////////////////////////
//       Class : OdePlane2dJoint
// Description : 
////////////////////////////////////////////////////////////////////

1292 12 OdePlaneGeom 0 75777 12 OdePlaneGeom 12 OdePlaneGeom 0 0 0 1 1138 0 0 4 1139 1140 1141 1142 0 0 1 0 1273 0 0 0 0 185
////////////////////////////////////////////////////////////////////
//       Class : OdePlaneGeom
// Description : 
////////////////////////////////////////////////////////////////////

1293 16 OdeQuadTreeSpace 0 75777 16 OdeQuadTreeSpace 16 OdeQuadTreeSpace 0 0 0 1 1143 0 0 1 1144 0 0 1 0 1272 0 0 0 0 190
////////////////////////////////////////////////////////////////////
//       Class : OdeQuadTreeSpace
// Description : 
////////////////////////////////////////////////////////////////////c

1294 10 OdeRayGeom 0 75777 10 OdeRayGeom 10 OdeRayGeom 0 0 0 1 1145 0 0 13 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 0 0 1 0 1273 0 0 0 0 183
////////////////////////////////////////////////////////////////////
//       Class : OdeRayGeom
// Description : 
////////////////////////////////////////////////////////////////////

1295 14 OdeSimpleSpace 0 75777 14 OdeSimpleSpace 14 OdeSimpleSpace 0 0 0 1 1159 0 0 1 1160 0 0 1 0 1272 0 0 0 0 188
////////////////////////////////////////////////////////////////////
//       Class : OdeSimpleSpace
// Description : 
////////////////////////////////////////////////////////////////////c

1296 14 OdeSliderJoint 0 75777 14 OdeSliderJoint 14 OdeSliderJoint 0 0 0 1 1161 0 0 25 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 0 0 1 0 1265 0 0 0 0 187
////////////////////////////////////////////////////////////////////
//       Class : OdeSliderJoint
// Description : 
////////////////////////////////////////////////////////////////////

1297 13 OdeSphereGeom 0 75777 13 OdeSphereGeom 13 OdeSphereGeom 0 0 0 1 1187 0 0 4 1188 1189 1190 1191 0 0 1 0 1273 0 0 0 0 186
////////////////////////////////////////////////////////////////////
//       Class : OdeSphereGeom
// Description : 
////////////////////////////////////////////////////////////////////

1298 14 OdeTriMeshData 0 75777 14 OdeTriMeshData 14 OdeTriMeshData 0 0 0 1 1192 0 0 4 1193 1194 1195 1196 0 0 1 0 1270 0 0 0 1 1299 186
////////////////////////////////////////////////////////////////////
//       Class : OdeTriMeshData
// Description :
////////////////////////////////////////////////////////////////////

1299 8 DataType 0 794624 24 OdeTriMeshData::DataType 24 OdeTriMeshData::DataType 1298 0 0 0 0 0 0 0 0 0 2 15 DT_face_normals 31 OdeTriMeshData::DT_face_normals 0
0 22 DT_last_transformation 38 OdeTriMeshData::DT_last_transformation 0
1 0 0

1300 14 OdeTriMeshGeom 0 75777 14 OdeTriMeshGeom 14 OdeTriMeshGeom 0 0 0 1 1197 0 0 12 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 0 0 1 0 1273 0 0 0 0 187
////////////////////////////////////////////////////////////////////
//       Class : OdeTriMeshGeom
// Description : 
////////////////////////////////////////////////////////////////////

1301 17 OdeUniversalJoint 0 75777 17 OdeUniversalJoint 17 OdeUniversalJoint 0 0 0 1 1210 0 0 31 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 0 0 1 0 1265 0 0 0 0 190
////////////////////////////////////////////////////////////////////
//       Class : OdeUniversalJoint
// Description : 
////////////////////////////////////////////////////////////////////

1302 7 OdeUtil 0 141313 7 OdeUtil 7 OdeUtil 0 0 0 0 1252 0 10 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 0 0 0 0 0 180
////////////////////////////////////////////////////////////////////
//       Class : OdeUtil
// Description : 
////////////////////////////////////////////////////////////////////

1303 10 OdeWorld * 0 8576 10 OdeWorld * 10 OdeWorld * 0 0 1260 0 0 0 0 0 0 0 0 0 0

1304 16 OdeWorld const * 0 8576 16 OdeWorld const * 16 OdeWorld const * 0 0 1305 0 0 0 0 0 0 0 0 0 0

1305 14 OdeWorld const 0 8832 14 OdeWorld const 14 OdeWorld const 0 0 1260 0 0 0 0 0 0 0 0 0 0

1306 4 void 0 8194 4 void 4 void 0 6 0 0 0 0 0 0 0 0 0 0 0

1307 4 bool 0 8194 4 bool 4 bool 0 4 0 0 0 0 0 0 0 0 0 0 0

1308 8 dWorldID 0 2105344 8 dWorldID 8 dWorldID 0 0 1309 0 0 0 0 0 0 0 0 0 0

1309 9 dxWorld * 0 8576 9 dxWorld * 9 dxWorld * 0 0 1259 0 0 0 0 0 0 0 0 0 0

1310 18 LVecBase3f const * 0 8576 18 LVecBase3f const * 18 LVecBase3f const * 0 0 1311 0 0 0 0 0 0 0 0 0 0

1311 16 LVecBase3f const 0 8832 16 LVecBase3f const 16 LVecBase3f const 0 0 1312 0 0 0 0 0 0 0 0 0 0

1312 10 LVecBase3f 0 2048 10 LVecBase3f 10 LVecBase3f 0 0 0 0 0 0 0 0 0 0 0 0 265
////////////////////////////////////////////////////////////////////
//       Class : LVecBase3
// Description : This is the base class for all three-component
//               vectors and points.
////////////////////////////////////////////////////////////////////

1313 5 dReal 0 2105344 5 dReal 5 dReal 0 0 1314 0 0 0 0 0 0 0 0 0 0

1314 5 float 0 8194 5 float 5 float 0 2 0 0 0 0 0 0 0 0 0 0 0

1315 3 int 0 8194 3 int 3 int 0 1 0 0 0 0 0 0 0 0 0 0 0

1316 12 LVecBase3f * 0 8576 12 LVecBase3f * 12 LVecBase3f * 0 0 1312 0 0 0 0 0 0 0 0 0 0

1317 8 PN_uint8 0 2105344 8 PN_uint8 8 PN_uint8 0 0 1318 0 0 0 0 0 0 0 0 0 0

1318 13 unsigned char 0 8198 13 unsigned char 13 unsigned char 0 5 0 0 0 0 0 0 0 0 0 0 0

1319 9 OdeBody * 0 8576 9 OdeBody * 9 OdeBody * 0 0 1271 0 0 0 0 0 0 0 0 0 0

1320 10 TypeHandle 0 2048 10 TypeHandle 10 TypeHandle 0 0 0 0 0 0 0 0 0 0 0 0 1098
////////////////////////////////////////////////////////////////////
//       Class : TypeHandle
// Description : TypeHandle is the identifier used to differentiate
//               C++ class types.  Any C++ classes that inherit from
//               some base class, and must be differentiated at run
//               time, should store a static TypeHandle object that
//               can be queried through a static member function
//               named get_class_type().  Most of the time, it is also
//               desirable to inherit from TypedObject, which provides
//               some virtual functions to return the TypeHandle for a
//               particular instance.
//
//               At its essence, a TypeHandle is simply a unique
//               identifier that is assigned by the TypeRegistry.  The
//               TypeRegistry stores a tree of TypeHandles, so that
//               ancestry of a particular type may be queried, and the
//               type name may be retrieved for run-time display.
////////////////////////////////////////////////////////////////////

1321 12 TypeHandle * 0 8576 12 TypeHandle * 12 TypeHandle * 0 0 1320 0 0 0 0 0 0 0 0 0 0

1322 15 OdeJointGroup * 0 8576 15 OdeJointGroup * 15 OdeJointGroup * 0 0 1262 0 0 0 0 0 0 0 0 0 0

1323 21 OdeJointGroup const * 0 8576 21 OdeJointGroup const * 21 OdeJointGroup const * 0 0 1324 0 0 0 0 0 0 0 0 0 0

1324 19 OdeJointGroup const 0 8832 19 OdeJointGroup const 19 OdeJointGroup const 0 0 1262 0 0 0 0 0 0 0 0 0 0

1325 13 dJointGroupID 0 2105344 13 dJointGroupID 13 dJointGroupID 0 0 1326 0 0 0 0 0 0 0 0 0 0

1326 14 dxJointGroup * 0 8576 14 dxJointGroup * 14 dxJointGroup * 0 0 1256 0 0 0 0 0 0 0 0 0 0

1327 15 LVector3f const 0 8832 15 LVector3f const 15 LVector3f const 0 0 1328 0 0 0 0 0 0 0 0 0 0

1328 9 LVector3f 0 2048 9 LVector3f 9 LVector3f 0 0 0 0 0 0 0 0 0 0 0 0 598
////////////////////////////////////////////////////////////////////
//       Class : LVector3
// Description : This is a three-component vector distance (as opposed
//               to a three-component point, which represents a
//               particular point in space).  Some of the methods are
//               slightly different between LPoint3 and LVector3; in
//               particular, subtraction of two points yields a
//               vector, while addition of a vector and a point yields
//               a point.
////////////////////////////////////////////////////////////////////

1329 24 OdeJointFeedback const * 0 8576 24 OdeJointFeedback const * 24 OdeJointFeedback const * 0 0 1330 0 0 0 0 0 0 0 0 0 0

1330 22 OdeJointFeedback const 0 8832 22 OdeJointFeedback const 22 OdeJointFeedback const 0 0 1263 0 0 0 0 0 0 0 0 0 0

1331 17 LVector3f const * 0 8576 17 LVector3f const * 17 LVector3f const * 0 0 1327 0 0 0 0 0 0 0 0 0 0

1332 10 OdeJoint * 0 8576 10 OdeJoint * 10 OdeJoint * 0 0 1265 0 0 0 0 0 0 0 0 0 0

1333 16 OdeJoint const * 0 8576 16 OdeJoint const * 16 OdeJoint const * 0 0 1334 0 0 0 0 0 0 0 0 0 0

1334 14 OdeJoint const 0 8832 14 OdeJoint const 14 OdeJoint const 0 0 1265 0 0 0 0 0 0 0 0 0 0

1335 8 dJointID 0 2105344 8 dJointID 8 dJointID 0 0 1336 0 0 0 0 0 0 0 0 0 0

1336 9 dxJoint * 0 8576 9 dxJoint * 9 dxJoint * 0 0 1255 0 0 0 0 0 0 0 0 0 0

1337 18 OdeJointFeedback * 0 8576 18 OdeJointFeedback * 18 OdeJointFeedback * 0 0 1263 0 0 0 0 0 0 0 0 0 0

1338 15 OdeBody const * 0 8576 15 OdeBody const * 15 OdeBody const * 0 0 1339 0 0 0 0 0 0 0 0 0 0

1339 13 OdeBody const 0 8832 13 OdeBody const 13 OdeBody const 0 0 1271 0 0 0 0 0 0 0 0 0 0

1340 9 ostream * 0 8576 9 ostream * 9 ostream * 0 0 1341 0 0 0 0 0 0 0 0 0 0

1341 7 ostream 0 2048 7 ostream 7 ostream 0 0 0 0 0 0 0 0 0 0 0 0 0

1342 12 unsigned int 0 8198 12 unsigned int 12 unsigned int 0 1 0 0 0 0 0 0 0 0 0 0 0

1343 10 PyObject * 0 8576 10 PyObject * 10 PyObject * 0 0 1344 0 0 0 0 0 0 0 0 0 0

1344 8 PyObject 0 2105344 8 PyObject 8 PyObject 0 0 1345 0 0 0 0 0 0 0 0 0 0

1345 7 _object 0 1024 7 _object 7 _object 0 0 0 0 0 0 0 0 0 0 0 0 0

1346 14 OdeBallJoint * 0 8576 14 OdeBallJoint * 14 OdeBallJoint * 0 0 1268 0 0 0 0 0 0 0 0 0 0

1347 15 OdeHingeJoint * 0 8576 15 OdeHingeJoint * 15 OdeHingeJoint * 0 0 1287 0 0 0 0 0 0 0 0 0 0

1348 16 OdeSliderJoint * 0 8576 16 OdeSliderJoint * 16 OdeSliderJoint * 0 0 1296 0 0 0 0 0 0 0 0 0 0

1349 17 OdeContactJoint * 0 8576 17 OdeContactJoint * 17 OdeContactJoint * 0 0 1282 0 0 0 0 0 0 0 0 0 0

1350 19 OdeUniversalJoint * 0 8576 19 OdeUniversalJoint * 19 OdeUniversalJoint * 0 0 1301 0 0 0 0 0 0 0 0 0 0

1351 16 OdeHinge2Joint * 0 8576 16 OdeHinge2Joint * 16 OdeHinge2Joint * 0 0 1286 0 0 0 0 0 0 0 0 0 0

1352 15 OdeFixedJoint * 0 8576 15 OdeFixedJoint * 15 OdeFixedJoint * 0 0 1284 0 0 0 0 0 0 0 0 0 0

1353 14 OdeNullJoint * 0 8576 14 OdeNullJoint * 14 OdeNullJoint * 0 0 1290 0 0 0 0 0 0 0 0 0 0

1354 16 OdeAMotorJoint * 0 8576 16 OdeAMotorJoint * 16 OdeAMotorJoint * 0 0 1267 0 0 0 0 0 0 0 0 0 0

1355 16 OdeLMotorJoint * 0 8576 16 OdeLMotorJoint * 16 OdeLMotorJoint * 0 0 1289 0 0 0 0 0 0 0 0 0 0

1356 17 OdePlane2dJoint * 0 8576 17 OdePlane2dJoint * 17 OdePlane2dJoint * 0 0 1291 0 0 0 0 0 0 0 0 0 0

1357 22 OdeAMotorJoint const * 0 8576 22 OdeAMotorJoint const * 22 OdeAMotorJoint const * 0 0 1358 0 0 0 0 0 0 0 0 0 0

1358 20 OdeAMotorJoint const 0 8832 20 OdeAMotorJoint const 20 OdeAMotorJoint const 0 0 1267 0 0 0 0 0 0 0 0 0 0

1359 20 OdeBallJoint const * 0 8576 20 OdeBallJoint const * 20 OdeBallJoint const * 0 0 1360 0 0 0 0 0 0 0 0 0 0

1360 18 OdeBallJoint const 0 8832 18 OdeBallJoint const 18 OdeBallJoint const 0 0 1268 0 0 0 0 0 0 0 0 0 0

1361 9 OdeMass * 0 8576 9 OdeMass * 9 OdeMass * 0 0 1269 0 0 0 0 0 0 0 0 0 0

1362 15 OdeMass const * 0 8576 15 OdeMass const * 15 OdeMass const * 0 0 1363 0 0 0 0 0 0 0 0 0 0

1363 13 OdeMass const 0 8832 13 OdeMass const 13 OdeMass const 0 0 1269 0 0 0 0 0 0 0 0 0 0

1364 17 LMatrix3f const * 0 8576 17 LMatrix3f const * 17 LMatrix3f const * 0 0 1365 0 0 0 0 0 0 0 0 0 0

1365 15 LMatrix3f const 0 8832 15 LMatrix3f const 15 LMatrix3f const 0 0 1366 0 0 0 0 0 0 0 0 0 0

1366 9 LMatrix3f 0 2048 9 LMatrix3f 9 LMatrix3f 0 0 0 0 0 0 0 4 1466 1467 1468 1469 0 0 0 0 462
////////////////////////////////////////////////////////////////////
//       Class : LMatrix3
// Description : This is a 3-by-3 transform matrix.  It typically will
//               represent either a rotation-and-scale (no
//               translation) matrix in 3-d, or a full affine matrix
//               (rotation, scale, translation) in 2-d, e.g. for a
//               texture matrix.
////////////////////////////////////////////////////////////////////

1367 8 LPoint3f 0 2048 8 LPoint3f 8 LPoint3f 0 0 0 0 0 0 0 0 0 0 0 0 596
////////////////////////////////////////////////////////////////////
//       Class : LPoint3
// Description : This is a three-component point in space (as opposed
//               to a three-component vector, which represents a
//               direction and a distance).  Some of the methods are
//               slightly different between LPoint3 and LVector3; in
//               particular, subtraction of two points yields a
//               vector, while addition of a vector and a point yields
//               a point.
////////////////////////////////////////////////////////////////////

1368 10 LPoint3f * 0 8576 10 LPoint3f * 10 LPoint3f * 0 0 1367 0 0 0 0 0 0 0 0 0 0

1369 11 LMatrix3f * 0 8576 11 LMatrix3f * 11 LMatrix3f * 0 0 1366 0 0 0 0 0 0 0 0 0 0

1370 7 dBodyID 0 2105344 7 dBodyID 7 dBodyID 0 0 1371 0 0 0 0 0 0 0 0 0 0

1371 8 dxBody * 0 8576 8 dxBody * 8 dxBody * 0 0 1253 0 0 0 0 0 0 0 0 0 0

1372 20 LQuaternionf const * 0 8576 20 LQuaternionf const * 20 LQuaternionf const * 0 0 1373 0 0 0 0 0 0 0 0 0 0

1373 18 LQuaternionf const 0 8832 18 LQuaternionf const 18 LQuaternionf const 0 0 1374 0 0 0 0 0 0 0 0 0 0

1374 12 LQuaternionf 0 2048 12 LQuaternionf 12 LQuaternionf 0 0 0 0 0 0 0 0 0 0 0 0 228
////////////////////////////////////////////////////////////////////
//       Class : FLOATNAME(LQuaternion)
// Description : This is the base quaternion class
////////////////////////////////////////////////////////////////////

1375 10 LVecBase4f 0 2048 10 LVecBase4f 10 LVecBase4f 0 0 0 0 0 0 0 0 0 0 0 0 265
////////////////////////////////////////////////////////////////////
//       Class : LVecBase4
// Description : This is the base class for all three-component
//               vectors and points.
////////////////////////////////////////////////////////////////////

1376 12 LVecBase4f * 0 8576 12 LVecBase4f * 12 LVecBase4f * 0 0 1375 0 0 0 0 0 0 0 0 0 0

1377 10 OdeSpace * 0 8576 10 OdeSpace * 10 OdeSpace * 0 0 1272 0 0 0 0 0 0 0 0 0 0

1378 16 OdeSpace const * 0 8576 16 OdeSpace const * 16 OdeSpace const * 0 0 1379 0 0 0 0 0 0 0 0 0 0

1379 14 OdeSpace const 0 8832 14 OdeSpace const 14 OdeSpace const 0 0 1272 0 0 0 0 0 0 0 0 0 0

1380 15 OdeGeom const * 0 8576 15 OdeGeom const * 15 OdeGeom const * 0 0 1381 0 0 0 0 0 0 0 0 0 0

1381 13 OdeGeom const 0 8832 13 OdeGeom const 13 OdeGeom const 0 0 1273 0 0 0 0 0 0 0 0 0 0

1382 17 BitMask32 const * 0 8576 17 BitMask32 const * 17 BitMask32 const * 0 0 1383 0 0 0 0 0 0 0 0 0 0

1383 15 BitMask32 const 0 8832 15 BitMask32 const 15 BitMask32 const 0 0 1384 0 0 0 0 0 0 0 0 0 0

1384 9 BitMask32 0 2105344 9 BitMask32 9 BitMask32 0 0 1385 0 0 0 0 0 0 0 0 0 0

1385 24 BitMask< PN_uint32, 32 > 0 2048 24 BitMask< PN_uint32, 32 > 24 BitMask< PN_uint32, 32 > 0 0 0 0 0 0 0 0 0 0 0 0 0

1386 11 BitMask32 * 0 8576 11 BitMask32 * 11 BitMask32 * 0 0 1384 0 0 0 0 0 0 0 0 0 0

1387 9 OdeGeom * 0 8576 9 OdeGeom * 9 OdeGeom * 0 0 1273 0 0 0 0 0 0 0 0 0 0

1388 16 OdeSimpleSpace * 0 8576 16 OdeSimpleSpace * 16 OdeSimpleSpace * 0 0 1295 0 0 0 0 0 0 0 0 0 0

1389 14 OdeHashSpace * 0 8576 14 OdeHashSpace * 14 OdeHashSpace * 0 0 1285 0 0 0 0 0 0 0 0 0 0

1390 18 OdeQuadTreeSpace * 0 8576 18 OdeQuadTreeSpace * 18 OdeQuadTreeSpace * 0 0 1293 0 0 0 0 0 0 0 0 0 0

1391 7 dGeomID 0 2105344 7 dGeomID 7 dGeomID 0 0 1392 0 0 0 0 0 0 0 0 0 0

1392 8 dxGeom * 0 8576 8 dxGeom * 8 dxGeom * 0 0 1254 0 0 0 0 0 0 0 0 0 0

1393 13 atomic string 0 2 13 atomic string 13 atomic string 0 7 0 0 0 0 0 0 0 0 0 0 0

1394 14 LQuaternionf * 0 8576 14 LQuaternionf * 14 LQuaternionf * 0 0 1374 0 0 0 0 0 0 0 0 0 0

1395 12 OdeBoxGeom * 0 8576 12 OdeBoxGeom * 12 OdeBoxGeom * 0 0 1275 0 0 0 0 0 0 0 0 0 0

1396 23 OdeCappedCylinderGeom * 0 8576 23 OdeCappedCylinderGeom * 23 OdeCappedCylinderGeom * 0 0 1276 0 0 0 0 0 0 0 0 0 0

1397 17 OdeCylinderGeom * 0 8576 17 OdeCylinderGeom * 17 OdeCylinderGeom * 0 0 1283 0 0 0 0 0 0 0 0 0 0

1398 14 OdePlaneGeom * 0 8576 14 OdePlaneGeom * 14 OdePlaneGeom * 0 0 1292 0 0 0 0 0 0 0 0 0 0

1399 12 OdeRayGeom * 0 8576 12 OdeRayGeom * 12 OdeRayGeom * 0 0 1294 0 0 0 0 0 0 0 0 0 0

1400 15 OdeSphereGeom * 0 8576 15 OdeSphereGeom * 15 OdeSphereGeom * 0 0 1297 0 0 0 0 0 0 0 0 0 0

1401 16 OdeTriMeshGeom * 0 8576 16 OdeTriMeshGeom * 16 OdeTriMeshGeom * 0 0 1300 0 0 0 0 0 0 0 0 0 0

1402 16 LPoint3f const * 0 8576 16 LPoint3f const * 16 LPoint3f const * 0 0 1403 0 0 0 0 0 0 0 0 0 0

1403 14 LPoint3f const 0 8832 14 LPoint3f const 14 LPoint3f const 0 0 1367 0 0 0 0 0 0 0 0 0 0

1404 29 OdeCappedCylinderGeom const * 0 8576 29 OdeCappedCylinderGeom const * 29 OdeCappedCylinderGeom const * 0 0 1405 0 0 0 0 0 0 0 0 0 0

1405 27 OdeCappedCylinderGeom const 0 8832 27 OdeCappedCylinderGeom const 27 OdeCappedCylinderGeom const 0 0 1276 0 0 0 0 0 0 0 0 0 0

1406 16 OdeContactGeom * 0 8576 16 OdeContactGeom * 16 OdeContactGeom * 0 0 1277 0 0 0 0 0 0 0 0 0 0

1407 22 OdeContactGeom const * 0 8576 22 OdeContactGeom const * 22 OdeContactGeom const * 0 0 1408 0 0 0 0 0 0 0 0 0 0

1408 20 OdeContactGeom const 0 8832 20 OdeContactGeom const 20 OdeContactGeom const 0 0 1277 0 0 0 0 0 0 0 0 0 0

1409 11 dReal const 0 8832 11 dReal const 11 dReal const 0 0 1313 0 0 0 0 0 0 0 0 0 0

1410 25 OdeCollisionEntry const * 0 8576 25 OdeCollisionEntry const * 25 OdeCollisionEntry const * 0 0 1411 0 0 0 0 0 0 0 0 0 0

1411 23 OdeCollisionEntry const 0 8832 23 OdeCollisionEntry const 23 OdeCollisionEntry const 0 0 1278 0 0 0 0 0 0 0 0 0 0

1412 6 size_t 0 2105344 6 size_t 6 size_t 0 0 1413 0 0 0 0 0 0 0 0 0 0

1413 17 unsigned long int 0 8214 17 unsigned long int 17 unsigned long int 0 1 0 0 0 0 0 0 0 0 0 0 0

1414 22 OdeSurfaceParameters * 0 8576 22 OdeSurfaceParameters * 22 OdeSurfaceParameters * 0 0 1279 0 0 0 0 0 0 0 0 0 0

1415 28 OdeSurfaceParameters const * 0 8576 28 OdeSurfaceParameters const * 28 OdeSurfaceParameters const * 0 0 1416 0 0 0 0 0 0 0 0 0 0

1416 26 OdeSurfaceParameters const 0 8832 26 OdeSurfaceParameters const 26 OdeSurfaceParameters const 0 0 1279 0 0 0 0 0 0 0 0 0 0

1417 12 OdeContact * 0 8576 12 OdeContact * 12 OdeContact * 0 0 1281 0 0 0 0 0 0 0 0 0 0

1418 16 dContact const * 0 8576 16 dContact const * 16 dContact const * 0 0 1419 0 0 0 0 0 0 0 0 0 0

1419 14 dContact const 0 8832 14 dContact const 14 dContact const 0 0 1420 0 0 0 0 0 0 0 0 0 0

1420 8 dContact 0 1024 8 dContact 8 dContact 0 0 0 0 0 0 0 0 0 0 0 0 0

1421 18 OdeContact const * 0 8576 18 OdeContact const * 18 OdeContact const * 0 0 1422 0 0 0 0 0 0 0 0 0 0

1422 16 OdeContact const 0 8832 16 OdeContact const 16 OdeContact const 0 0 1281 0 0 0 0 0 0 0 0 0 0

1423 23 OdeCylinderGeom const * 0 8576 23 OdeCylinderGeom const * 23 OdeCylinderGeom const * 0 0 1424 0 0 0 0 0 0 0 0 0 0

1424 21 OdeCylinderGeom const 0 8832 21 OdeCylinderGeom const 21 OdeCylinderGeom const 0 0 1283 0 0 0 0 0 0 0 0 0 0

1425 20 OdeHashSpace const * 0 8576 20 OdeHashSpace const * 20 OdeHashSpace const * 0 0 1426 0 0 0 0 0 0 0 0 0 0

1426 18 OdeHashSpace const 0 8832 18 OdeHashSpace const 18 OdeHashSpace const 0 0 1285 0 0 0 0 0 0 0 0 0 0

1427 22 OdeHinge2Joint const * 0 8576 22 OdeHinge2Joint const * 22 OdeHinge2Joint const * 0 0 1428 0 0 0 0 0 0 0 0 0 0

1428 20 OdeHinge2Joint const 0 8832 20 OdeHinge2Joint const 20 OdeHinge2Joint const 0 0 1286 0 0 0 0 0 0 0 0 0 0

1429 21 OdeHingeJoint const * 0 8576 21 OdeHingeJoint const * 21 OdeHingeJoint const * 0 0 1430 0 0 0 0 0 0 0 0 0 0

1430 19 OdeHingeJoint const 0 8832 19 OdeHingeJoint const 19 OdeHingeJoint const 0 0 1287 0 0 0 0 0 0 0 0 0 0

1431 20 OdeJointCollection * 0 8576 20 OdeJointCollection * 20 OdeJointCollection * 0 0 1288 0 0 0 0 0 0 0 0 0 0

1432 26 OdeJointCollection const * 0 8576 26 OdeJointCollection const * 26 OdeJointCollection const * 0 0 1433 0 0 0 0 0 0 0 0 0 0

1433 24 OdeJointCollection const 0 8832 24 OdeJointCollection const 24 OdeJointCollection const 0 0 1288 0 0 0 0 0 0 0 0 0 0

1434 22 OdeLMotorJoint const * 0 8576 22 OdeLMotorJoint const * 22 OdeLMotorJoint const * 0 0 1435 0 0 0 0 0 0 0 0 0 0

1435 20 OdeLMotorJoint const 0 8832 20 OdeLMotorJoint const 20 OdeLMotorJoint const 0 0 1289 0 0 0 0 0 0 0 0 0 0

1436 18 LVecBase4f const * 0 8576 18 LVecBase4f const * 18 LVecBase4f const * 0 0 1437 0 0 0 0 0 0 0 0 0 0

1437 16 LVecBase4f const 0 8832 16 LVecBase4f const 16 LVecBase4f const 0 0 1375 0 0 0 0 0 0 0 0 0 0

1438 20 OdePlaneGeom const * 0 8576 20 OdePlaneGeom const * 20 OdePlaneGeom const * 0 0 1439 0 0 0 0 0 0 0 0 0 0

1439 18 OdePlaneGeom const 0 8832 18 OdePlaneGeom const 18 OdePlaneGeom const 0 0 1292 0 0 0 0 0 0 0 0 0 0

1440 9 int const 0 8832 9 int const 9 int const 0 0 1315 0 0 0 0 0 0 0 0 0 0

1441 18 OdeRayGeom const * 0 8576 18 OdeRayGeom const * 18 OdeRayGeom const * 0 0 1442 0 0 0 0 0 0 0 0 0 0

1442 16 OdeRayGeom const 0 8832 16 OdeRayGeom const 16 OdeRayGeom const 0 0 1294 0 0 0 0 0 0 0 0 0 0

1443 22 OdeSliderJoint const * 0 8576 22 OdeSliderJoint const * 22 OdeSliderJoint const * 0 0 1444 0 0 0 0 0 0 0 0 0 0

1444 20 OdeSliderJoint const 0 8832 20 OdeSliderJoint const 20 OdeSliderJoint const 0 0 1296 0 0 0 0 0 0 0 0 0 0

1445 21 OdeSphereGeom const * 0 8576 21 OdeSphereGeom const * 21 OdeSphereGeom const * 0 0 1446 0 0 0 0 0 0 0 0 0 0

1446 19 OdeSphereGeom const 0 8832 19 OdeSphereGeom const 19 OdeSphereGeom const 0 0 1297 0 0 0 0 0 0 0 0 0 0

1447 16 NodePath const * 0 8576 16 NodePath const * 16 NodePath const * 0 0 1448 0 0 0 0 0 0 0 0 0 0

1448 14 NodePath const 0 8832 14 NodePath const 14 NodePath const 0 0 1449 0 0 0 0 0 0 0 0 0 0

1449 8 NodePath 0 2048 8 NodePath 8 NodePath 0 0 0 0 0 0 0 2 1470 1471 0 0 0 0 1139
////////////////////////////////////////////////////////////////////
//       Class : NodePath
// Description : NodePath is the fundamental system for disambiguating
//               instances, and also provides a higher-level interface
//               for manipulating the scene graph.
//
//               A NodePath is a list of connected nodes from the root
//               of the graph to any sub-node.  Each NodePath
//               therefore uniquely describes one instance of a node.
//
//               NodePaths themselves are lightweight objects that may
//               easily be copied and passed by value.  Their data is
//               stored as a series of NodePathComponents that are
//               stored on the nodes.  Holding a NodePath will keep a
//               reference count to all the nodes in the path.
//               However, if any node in the path is removed or
//               reparented (perhaps through a different NodePath),
//               the NodePath will automatically be updated to reflect
//               the changes.
////////////////////////////////////////////////////////////////////

1450 16 OdeTriMeshData * 0 8576 16 OdeTriMeshData * 16 OdeTriMeshData * 0 0 1298 0 0 0 0 0 0 0 0 0 0

1451 22 OdeTriMeshData const * 0 8576 22 OdeTriMeshData const * 22 OdeTriMeshData const * 0 0 1452 0 0 0 0 0 0 0 0 0 0

1452 20 OdeTriMeshData const 0 8832 20 OdeTriMeshData const 20 OdeTriMeshData const 0 0 1298 0 0 0 0 0 0 0 0 0 0

1453 22 OdeTriMeshGeom const * 0 8576 22 OdeTriMeshGeom const * 22 OdeTriMeshGeom const * 0 0 1454 0 0 0 0 0 0 0 0 0 0

1454 20 OdeTriMeshGeom const 0 8832 20 OdeTriMeshGeom const 20 OdeTriMeshGeom const 0 0 1300 0 0 0 0 0 0 0 0 0 0

1455 25 OdeUniversalJoint const * 0 8576 25 OdeUniversalJoint const * 25 OdeUniversalJoint const * 0 0 1456 0 0 0 0 0 0 0 0 0 0

1456 23 OdeUniversalJoint const 0 8832 23 OdeUniversalJoint const 23 OdeUniversalJoint const 0 0 1301 0 0 0 0 0 0 0 0 0 0

1457 15 short int const 0 8832 15 short int const 15 short int const 0 0 1458 0 0 0 0 0 0 0 0 0 0

1458 9 short int 0 8258 9 short int 9 short int 0 1 0 0 0 0 0 0 0 0 0 0 0

1459 19 OdeCollisionEntry * 0 8576 19 OdeCollisionEntry * 19 OdeCollisionEntry * 0 0 1278 0 0 0 0 0 0 0 0 0 0

0
0
12
1460 0 0 92 8 get_axes 12 get_num_axes 8 get_axis 
1461 0 0 154 10 get_joints 14 get_num_joints 9 get_joint 
1462 0 0 340 18 get_contact_points 16 get_num_contacts 17 get_contact_point 
1463 0 0 340 17 get_contact_geoms 16 get_num_contacts 16 get_contact_geom 
1464 0 0 473 10 get_joints 14 get_num_joints 9 get_joint 
1465 0 0 491 8 get_axes 12 get_num_axes 8 get_axis 
1466 0 0 826 8 get_rows 4 size 7 get_row 
1467 0 0 826 8 get_cols 4 size 7 get_col 
1468 0 0 826 9 get_col2s 4 size 8 get_col2 
1469 0 0 826 9 get_row2s 4 size 8 get_row2 
1470 0 0 1390 9 get_nodes 13 get_num_nodes 8 get_node 
1471 0 0 1390 13 get_ancestors 13 get_num_nodes 12 get_ancestor 
