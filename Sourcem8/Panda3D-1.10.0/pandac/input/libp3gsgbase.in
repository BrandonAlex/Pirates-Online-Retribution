1436948140
2 3
12 libp3gsgbase 4 Oe1b 12 panda3d.core 
23
22 6 output 0 6 45 25 DisplayRegionBase::output 0 1 1 0
63
virtual void DisplayRegionBase::output(ostream &out) const = 0;

23 14 get_class_type 0 4 45 33 DisplayRegionBase::get_class_type 0 1 2 0
58
static TypeHandle DisplayRegionBase::get_class_type(void);

24 8 set_sort 0 6 47 28 GraphicsOutputBase::set_sort 0 1 3 0
56
virtual void GraphicsOutputBase::set_sort(int sort) = 0;

25 11 get_texture 0 6 47 31 GraphicsOutputBase::get_texture 0 1 4 0
70
virtual Texture *GraphicsOutputBase::get_texture(int i = 0) const = 0;

26 14 get_class_type 0 4 47 34 GraphicsOutputBase::get_class_type 0 1 5 0
59
static TypeHandle GraphicsOutputBase::get_class_type(void);

27 19 ~GraphicsOutputBase 0 4 47 39 GraphicsOutputBase::~GraphicsOutputBase 0 0 0
46
GraphicsOutputBase::~GraphicsOutputBase(void);

28 21 get_incomplete_render 0 6 49 48 GraphicsStateGuardianBase::get_incomplete_render 0 1 6 0
78
virtual bool GraphicsStateGuardianBase::get_incomplete_render(void) const = 0;

29 31 get_effective_incomplete_render 0 6 49 58 GraphicsStateGuardianBase::get_effective_incomplete_render 0 1 7 0
88
virtual bool GraphicsStateGuardianBase::get_effective_incomplete_render(void) const = 0;

30 23 prefers_triangle_strips 0 6 49 50 GraphicsStateGuardianBase::prefers_triangle_strips 0 1 8 0
80
virtual bool GraphicsStateGuardianBase::prefers_triangle_strips(void) const = 0;

31 26 get_max_vertices_per_array 0 6 49 53 GraphicsStateGuardianBase::get_max_vertices_per_array 0 1 9 0
82
virtual int GraphicsStateGuardianBase::get_max_vertices_per_array(void) const = 0;

32 30 get_max_vertices_per_primitive 0 6 49 57 GraphicsStateGuardianBase::get_max_vertices_per_primitive 0 1 10 0
86
virtual int GraphicsStateGuardianBase::get_max_vertices_per_primitive(void) const = 0;

33 25 get_max_texture_dimension 0 6 49 52 GraphicsStateGuardianBase::get_max_texture_dimension 0 1 11 0
81
virtual int GraphicsStateGuardianBase::get_max_texture_dimension(void) const = 0;

34 38 get_supports_compressed_texture_format 0 6 49 65 GraphicsStateGuardianBase::get_supports_compressed_texture_format 0 1 12 0
111
virtual bool GraphicsStateGuardianBase::get_supports_compressed_texture_format(int compression_mode) const = 0;

35 24 get_supports_multisample 0 6 49 51 GraphicsStateGuardianBase::get_supports_multisample 0 1 13 0
81
virtual bool GraphicsStateGuardianBase::get_supports_multisample(void) const = 0;

36 28 get_supported_geom_rendering 0 6 49 55 GraphicsStateGuardianBase::get_supported_geom_rendering 0 1 14 0
84
virtual int GraphicsStateGuardianBase::get_supported_geom_rendering(void) const = 0;

37 26 get_supports_shadow_filter 0 6 49 53 GraphicsStateGuardianBase::get_supports_shadow_filter 0 1 15 0
83
virtual bool GraphicsStateGuardianBase::get_supports_shadow_filter(void) const = 0;

38 25 get_supports_texture_srgb 0 6 49 52 GraphicsStateGuardianBase::get_supports_texture_srgb 0 1 16 0
82
virtual bool GraphicsStateGuardianBase::get_supports_texture_srgb(void) const = 0;

39 15 get_default_gsg 0 4 49 42 GraphicsStateGuardianBase::get_default_gsg 0 1 17 651
////////////////////////////////////////////////////////////////////
//     Function: GraphicsStateGuardianBase::get_default_gsg
//       Access: Published, Static
//  Description: Returns a pointer to the "default" GSG.  This is
//               typically the first GSG created in an application; in
//               a single-window application, it will be the only GSG.
//               This GSG is used to determine default optimization
//               choices for loaded geometry.
//
//               The return value may be NULL if a GSG has not been
//               created.
////////////////////////////////////////////////////////////////////
83
static GraphicsStateGuardianBase *GraphicsStateGuardianBase::get_default_gsg(void);

40 15 set_default_gsg 0 4 49 42 GraphicsStateGuardianBase::set_default_gsg 0 1 18 346
////////////////////////////////////////////////////////////////////
//     Function: GraphicsStateGuardianBase::set_default_gsg
//       Access: Published, Static
//  Description: Specifies a particular GSG to use as the "default"
//               GSG.  See get_default_gsg().
////////////////////////////////////////////////////////////////////
95
static void GraphicsStateGuardianBase::set_default_gsg(GraphicsStateGuardianBase *default_gsg);

41 12 get_num_gsgs 0 4 49 39 GraphicsStateGuardianBase::get_num_gsgs 0 1 19 297
////////////////////////////////////////////////////////////////////
//     Function: GraphicsStateGuardianBase::get_num_gsgs
//       Access: Published, Static
//  Description: Returns the total number of GSG's in the universe.
////////////////////////////////////////////////////////////////////
57
static int GraphicsStateGuardianBase::get_num_gsgs(void);

42 7 get_gsg 0 4 49 34 GraphicsStateGuardianBase::get_gsg 0 1 20 420
////////////////////////////////////////////////////////////////////
//     Function: GraphicsStateGuardianBase::get_gsg
//       Access: Published, Static
//  Description: Returns the nth GSG in the universe.  GSG's
//               automatically add themselves and remove themselves
//               from this list as they are created and destroyed.
////////////////////////////////////////////////////////////////////
76
static GraphicsStateGuardianBase *GraphicsStateGuardianBase::get_gsg(int n);

43 14 get_class_type 0 4 49 41 GraphicsStateGuardianBase::get_class_type 0 1 21 0
66
static TypeHandle GraphicsStateGuardianBase::get_class_type(void);

44 26 ~GraphicsStateGuardianBase 0 4 49 53 GraphicsStateGuardianBase::~GraphicsStateGuardianBase 0 0 0
60
GraphicsStateGuardianBase::~GraphicsStateGuardianBase(void);

21
1 0 0 4 3 54 0 0 0 2 4 this 3 50  3 out 1 52  
2 0 0 7 4 56 0 0 0 0 
3 0 0 4 7 54 0 0 0 2 4 this 3 57  4 sort 1 58  
4 0 0 6 8 61 0 0 0 2 4 this 3 59  1 i 1 58  
5 0 0 7 9 56 0 0 0 0 
6 0 0 6 12 65 0 0 0 1 4 this 3 63  
7 0 0 6 13 65 0 0 0 1 4 this 3 63  
8 0 0 6 14 65 0 0 0 1 4 this 3 63  
9 0 0 6 15 58 0 0 0 1 4 this 3 63  
10 0 0 6 16 58 0 0 0 1 4 this 3 63  
11 0 0 6 17 58 0 0 0 1 4 this 3 63  
12 0 0 6 18 65 0 0 0 2 4 this 3 63  16 compression_mode 1 58  
13 0 0 6 19 65 0 0 0 1 4 this 3 63  
14 0 0 6 20 58 0 0 0 1 4 this 3 63  
15 0 0 6 21 65 0 0 0 1 4 this 3 63  
16 0 0 6 22 65 0 0 0 1 4 this 3 63  
17 0 0 7 23 66 44 0 651 ////////////////////////////////////////////////////////////////////
//     Function: GraphicsStateGuardianBase::get_default_gsg
//       Access: Published, Static
//  Description: Returns a pointer to the "default" GSG.  This is
//               typically the first GSG created in an application; in
//               a single-window application, it will be the only GSG.
//               This GSG is used to determine default optimization
//               choices for loaded geometry.
//
//               The return value may be NULL if a GSG has not been
//               created.
//////////////////////////////////////////////////////////////////// 0 
18 0 0 4 24 54 0 0 346 ////////////////////////////////////////////////////////////////////
//     Function: GraphicsStateGuardianBase::set_default_gsg
//       Access: Published, Static
//  Description: Specifies a particular GSG to use as the "default"
//               GSG.  See get_default_gsg().
//////////////////////////////////////////////////////////////////// 1 11 default_gsg 1 66  
19 0 0 6 25 58 0 0 297 ////////////////////////////////////////////////////////////////////
//     Function: GraphicsStateGuardianBase::get_num_gsgs
//       Access: Published, Static
//  Description: Returns the total number of GSG's in the universe.
//////////////////////////////////////////////////////////////////// 0 
20 0 0 7 26 66 44 0 420 ////////////////////////////////////////////////////////////////////
//     Function: GraphicsStateGuardianBase::get_gsg
//       Access: Published, Static
//  Description: Returns the nth GSG in the universe.  GSG's
//               automatically add themselves and remove themselves
//               from this list as they are created and destroyed.
//////////////////////////////////////////////////////////////////// 1 1 n 1 58  
21 0 0 7 27 56 0 0 0 0 
22
45 17 DisplayRegionBase 0 75777 17 DisplayRegionBase 17 DisplayRegionBase 0 0 0 0 0 0 2 22 23 0 0 1 0 46 0 0 0 0 307
////////////////////////////////////////////////////////////////////
//       Class : DisplayRegionBase
// Description : An abstract base class for DisplayRegion, mainly so
//               we can store DisplayRegion pointers in a Camera.
////////////////////////////////////////////////////////////////////

46 19 TypedReferenceCount 0 2049 19 TypedReferenceCount 19 TypedReferenceCount 0 0 0 0 0 0 0 0 0 0 0 0 710
////////////////////////////////////////////////////////////////////
//       Class : TypedReferenceCount
// Description : A base class for things which need to inherit from
//               both TypedObject and from ReferenceCount.  It's
//               convenient to define this intermediate base class
//               instead of multiply inheriting from the two classes
//               each time they are needed, so that we can sensibly
//               pass around pointers to things which are both
//               TypedObjects and ReferenceCounters.
//               
//               See also TypedObject for detailed instructions.
////////////////////////////////////////////////////////////////////

47 18 GraphicsOutputBase 0 141313 18 GraphicsOutputBase 18 GraphicsOutputBase 0 0 0 0 27 0 3 24 25 26 0 0 1 0 48 0 0 0 0 277
////////////////////////////////////////////////////////////////////
//       Class : GraphicsOutputBase
// Description : An abstract base class for GraphicsOutput, for all
//               the usual reasons.
////////////////////////////////////////////////////////////////////

48 27 TypedWritableReferenceCount 0 2049 27 TypedWritableReferenceCount 27 TypedWritableReferenceCount 0 0 0 0 0 0 0 0 0 0 0 0 722
////////////////////////////////////////////////////////////////////
//       Class : TypedWritableReferenceCount
// Description : A base class for things which need to inherit from
//               both TypedWritable and from ReferenceCount.  It's
//               convenient to define this intermediate base class
//               instead of multiply inheriting from the two classes
//               each time they are needed, so that we can sensibly
//               pass around pointers to things which are both
//               TypedWritables and ReferenceCounters.
//               
//               See also TypedObject for detailed instructions.
////////////////////////////////////////////////////////////////////

49 25 GraphicsStateGuardianBase 0 141313 25 GraphicsStateGuardianBase 25 GraphicsStateGuardianBase 0 0 0 0 44 0 16 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 1 67 0 1 0 48 0 0 0 0 957
////////////////////////////////////////////////////////////////////
//       Class : GraphicsStateGuardianBase
// Description : This is a base class for the GraphicsStateGuardian
//               class, which is itself a base class for the various
//               GSG's for different platforms.  This class contains
//               all the function prototypes to support the
//               double-dispatch of GSG to geoms, transitions, etc.  It
//               lives in a separate class in its own package so we
//               can avoid circular build dependency problems.
//
//               GraphicsStateGuardians are not actually writable to
//               bam files, of course, but they may be passed as event
//               parameters, so they inherit from
//               TypedWritableReferenceCount instead of
//               TypedReferenceCount for that convenience.
////////////////////////////////////////////////////////////////////

50 25 DisplayRegionBase const * 0 8576 25 DisplayRegionBase const * 25 DisplayRegionBase const * 0 0 51 0 0 0 0 0 0 0 0 0 0

51 23 DisplayRegionBase const 0 8832 23 DisplayRegionBase const 23 DisplayRegionBase const 0 0 45 0 0 0 0 0 0 0 0 0 0

52 9 ostream * 0 8576 9 ostream * 9 ostream * 0 0 53 0 0 0 0 0 0 0 0 0 0

53 7 ostream 0 2048 7 ostream 7 ostream 0 0 0 0 0 0 0 0 0 0 0 0 0

54 4 void 0 8194 4 void 4 void 0 6 0 0 0 0 0 0 0 0 0 0 0

55 10 TypeHandle 0 2048 10 TypeHandle 10 TypeHandle 0 0 0 0 0 0 0 0 0 0 0 0 1098
////////////////////////////////////////////////////////////////////
//       Class : TypeHandle
// Description : TypeHandle is the identifier used to differentiate
//               C++ class types.  Any C++ classes that inherit from
//               some base class, and must be differentiated at run
//               time, should store a static TypeHandle object that
//               can be queried through a static member function
//               named get_class_type().  Most of the time, it is also
//               desirable to inherit from TypedObject, which provides
//               some virtual functions to return the TypeHandle for a
//               particular instance.
//
//               At its essence, a TypeHandle is simply a unique
//               identifier that is assigned by the TypeRegistry.  The
//               TypeRegistry stores a tree of TypeHandles, so that
//               ancestry of a particular type may be queried, and the
//               type name may be retrieved for run-time display.
////////////////////////////////////////////////////////////////////

56 12 TypeHandle * 0 8576 12 TypeHandle * 12 TypeHandle * 0 0 55 0 0 0 0 0 0 0 0 0 0

57 20 GraphicsOutputBase * 0 8576 20 GraphicsOutputBase * 20 GraphicsOutputBase * 0 0 47 0 0 0 0 0 0 0 0 0 0

58 3 int 0 8194 3 int 3 int 0 1 0 0 0 0 0 0 0 0 0 0 0

59 26 GraphicsOutputBase const * 0 8576 26 GraphicsOutputBase const * 26 GraphicsOutputBase const * 0 0 60 0 0 0 0 0 0 0 0 0 0

60 24 GraphicsOutputBase const 0 8832 24 GraphicsOutputBase const 24 GraphicsOutputBase const 0 0 47 0 0 0 0 0 0 0 0 0 0

61 9 Texture * 0 8576 9 Texture * 9 Texture * 0 0 62 0 0 0 0 0 0 0 0 0 0

62 7 Texture 0 2048 7 Texture 7 Texture 0 0 0 0 0 0 0 0 0 0 0 0 0

63 33 GraphicsStateGuardianBase const * 0 8576 33 GraphicsStateGuardianBase const * 33 GraphicsStateGuardianBase const * 0 0 64 0 0 0 0 0 0 0 0 0 0

64 31 GraphicsStateGuardianBase const 0 8832 31 GraphicsStateGuardianBase const 31 GraphicsStateGuardianBase const 0 0 49 0 0 0 0 0 0 0 0 0 0

65 4 bool 0 8194 4 bool 4 bool 0 4 0 0 0 0 0 0 0 0 0 0 0

66 27 GraphicsStateGuardianBase * 0 8576 27 GraphicsStateGuardianBase * 27 GraphicsStateGuardianBase * 0 0 49 0 0 0 0 0 0 0 0 0 0

0
0
1
67 0 0 11 8 get_gsgs 12 get_num_gsgs 7 get_gsg 
